{"version":3,"file":"components-CDG7ZrUA.js","sources":["../../../src/lib/event.js","../../../src/utils/generate.js","../../../src/lib/websocket.js","../../../src/lib/adapter/adapter.js","../../../src/lib/adapter/onebot.js","../../../src/lib/adapter/openai.js","../../../src/lib/contactor.js","../../../src/lib/client.js","../../../src/lib/config.js","../../../src/lib/runtime.js","../../../src/components/SideBar.vue","../../../src/components/DisplayButtons.vue","../../../src/components/ForwardMsg.vue","../../../src/components/InputEditor.vue","../../../src/components/FileBlock.vue","../../../src/components/ToolCallBar.vue","../../../src/components/ReasonBlock.vue","../../../src/components/ContextMenu.vue","../../../src/components/AddContactor.vue","../../../src/components/FriendList.vue","../../../src/components/PresetsList.vue"],"sourcesContent":["export default class EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n  on(eventName, listener, refresh = true) {\n    // 如果 refresh 为真，删除之前的回调函数\n    if (refresh) {\n      this.off(eventName);\n    }\n    // 如果事件名不存在，则初始化为一个空数组\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n    // 添加新的回调函数到数组中\n    this.events[eventName].push(listener);\n  }\n  emit(eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach((listener) => {\n        listener(data);\n      });\n    }\n  }\n  off(eventName) {\n    if (this.events[eventName]) {\n      delete this.events[eventName];\n    }\n  }\n}\n","export function uuidString() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function numberString(length) {\n  let result = \"\";\n  const characters = \"0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function randomString(length) {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","import EventEmitter from \"./event.js\";\nimport { randomString } from \"../utils/generate.js\";\nimport io from \"socket.io-client\";\n\n/**\n * WebSocket Connection Class\n * Handles WebSocket connection and message sending/receiving.\n */\nexport default class Socket extends EventEmitter {\n  /**\n   * Creates a Socket instance.\n   * @param {String} id - Robot QQ number\n   * @param {String} code - Login token\n   */\n  constructor(id, code) {\n    super();\n    this.available = null;\n    this.url = this.getURL();\n    this.socket = null;\n    this.code = code;\n    this.id = id;\n    this.requests = [];\n    this.pendingRequests = new Set(); // Track ongoing request_ids\n  }\n\n  /**\n   * Gets the WebSocket URL.\n   * @returns {String} WebSocket URL\n   */\n  getURL() {\n    const url = new URL(window.location.href);\n    // 保持原样，因为 io() 知道如何处理 host\n    return url.host;\n  }\n\n  /**\n   * Initializes WebSocket event listeners.\n   */\n  initEventListeners() {\n    if (!this.socket) return; // Safety check\n\n    // --- 清理旧监听器 (如果需要重新附加) ---\n    // 这对于确保在重新连接时不重复添加监听器很重要\n    // Socket.IO v3+ 的 off() 或 removeAllListeners()\n    this.socket.off(\"connect\");\n    this.socket.off(\"disconnect\");\n    this.socket.off(\"connect_error\");\n    this.socket.off(\"message\");\n    // --- 重新附加监听器 ---\n    this.socket.on(\"connect\", () => this.handleConnect());\n    this.socket.on(\"disconnect\", (reason) => this.handleDisconnect(reason)); // Pass reason\n    this.socket.on(\"connect_error\", (error) => this.handleConnectError(error));\n    this.socket.on(\"message\", (message) => this.messageHandler(message));\n  }\n\n  /**\n   * Handles the connect event.\n   */\n  handleConnect() {\n    this.available = true;\n    this.hasAttemptedPollingFallback = false; // Reset fallback flag on successful connect\n    this.isAttemptingWebSocket = false; // Reset attempt flag\n    const transport = this.socket.io?.engine?.transport?.name || \"unknown\";\n    console.log(`SocketIO connected successfully via: ${transport}`);\n  }\n\n  /**\n   * Handles the disconnect event.\n   * @param {String} reason - The reason for disconnection\n   */\n  handleDisconnect(reason) {\n    this.available = false;\n    console.error(`SocketIO disconnected. Reason: ${reason}`);\n    // 如果是 'io server disconnect' 或 'io client disconnect'，可能不需要自动重连或回退\n    // 如果是 'transport close' 或 'transport error'，Socket.IO 的 reconnection 机制会尝试处理\n    // 这里我们主要依赖 connect_error 来处理初始连接失败的回退\n  }\n\n  /**\n   * Handles the connect_error event.\n   * @param {Error} error - The error object\n   */\n  handleConnectError(error) {\n    this.emit(\"connect_error\", error);\n    // error 对象可能包含 transport 信息，例如 error.transport\n    console.log(\n      `Error occurred during ${this.isAttemptingWebSocket ? \"WebSocket\" : \"Polling\"} attempt.`,\n    );\n\n    // --- 手动回退逻辑 ---\n    // 1. 检查是否是 WebSocket 尝试失败\n    // 2. 检查是否 *已经* 尝试过回退到 Polling (防止无限循环)\n    if (this.isAttemptingWebSocket && !this.hasAttemptedPollingFallback) {\n      console.log(\n        \"WebSocket connection failed. Attempting fallback to Polling...\",\n      );\n      this.hasAttemptedPollingFallback = true; // Mark that we are now trying polling\n      this.isAttemptingWebSocket = false; // No longer attempting WebSocket initially\n\n      // 清理当前的 socket 实例\n      if (this.socket) {\n        this.socket.disconnect(); // 或 .close()\n        this.socket = null;\n      }\n\n      // 延迟一小段时间再尝试 Polling，避免立即重试可能遇到的瞬时问题\n      setTimeout(() => {\n        // 发起只使用 Polling 的新连接\n        this._connectWithTransport([\"polling\"]);\n      }, 500); // 延迟 500ms (可调整)\n    } else if (!this.isAttemptingWebSocket) {\n      // Polling 尝试也失败了\n      console.error(\"Polling connection attempt also failed.\");\n      this.available = false;\n      // 这里可以决定是否彻底放弃，或者依赖 Socket.IO 的 reconnection 机制（如果开启）\n      // 如果 Socket.IO 的 reconnection 开启，它会继续尝试用 polling 重连\n    } else {\n      // 如果 isAttemptingWebSocket 为 true 但 hasAttemptedPollingFallback 也为 true\n      // 理论上不应该发生，但作为保险\n      console.warn(\"Unexpected state in handleConnectError.\");\n      this.available = false;\n    }\n  }\n\n  /**\n   * Internal connect method allowing transport specification.\n   * @param {String[]} transports - Array of transports to use.\n   */\n  _connectWithTransport(transports) {\n    console.log(\n      `Attempting to connect using transports: ${transports.join(\", \")}...`,\n    );\n    // 确保清理可能存在的旧 socket\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n\n    this.socket = io(this.url, {\n      path: \"/socket.io\",\n      transports: transports, // <-- 使用指定的 transports\n      auth: { id: this.id, token: this.code },\n      reconnection: true, // 保持开启，让 Socket.IO 处理后续的重连尝试\n      reconnectionAttempts: Infinity, // 可以为 polling 设置不同的重试次数\n      reconnectionDelay: 2000,\n      reconnectionDelayMax: 10000,\n      timeout: 15000, // 可以为 polling 调整超时\n      // 重要：强制新的连接尝试，而不是升级现有连接（如果适用）\n      // 对于 polling，这通常不是问题，但加上无妨\n      forceNew: true,\n    });\n\n    this.initEventListeners(); // 为新的 socket 实例初始化事件监听\n  }\n\n  /**\n   * Connects to the SocketIO server, starting with WebSocket.\n   */\n  async connect() {\n    if (this.socket && this.socket.connected) {\n      console.log(\"Already connected.\");\n      return;\n    }\n    this.isAttemptingWebSocket = true; // Mark that we are starting with WebSocket\n    this.hasAttemptedPollingFallback = false; // Reset fallback state\n    this._connectWithTransport([\"websocket\"]); // Start with WebSocket only\n  }\n\n  /**\n   * Disconnects from the WebSocket server.\n   */\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect(); // 使用 disconnect 更优雅\n      // socket 实例会在 disconnect 事件后由库内部清理或重用（如果重连）\n      // 我们可以在 handleDisconnect 中或这里设置 this.socket = null，取决于你的状态管理需求\n      // this.socket = null; // 如果希望彻底断开后清理引用\n      this.available = false;\n      console.log(\"Manual disconnection initiated.\");\n    }\n  }\n\n  /**\n   * Handles incoming messages.\n   * @param {String} message - The received message\n   */\n  messageHandler(message) {\n    console.log(\"WebSocket received message\", message);\n    try {\n      const e = JSON.parse(message);\n      if (e.protocol === \"llm\") {\n        this.emit(e.request_id, e);\n        this.emit(\"llm_message\", e);\n      }\n      if (e.protocol === \"onebot\") {\n        this.emit(\"onebot_message\", e);\n      } else if (e.protocol === \"system\") {\n        if (e.type === \"login\") this.emit(\"connect\", e.data);\n        this.emit(\"system_message\", e);\n      }\n      this.pendingRequests.delete(e.request_id); // Remove request_id\n    } catch (error) {\n      console.error(\"JSON parsing failed:\", error, \"Received:\", message); // Log received message on error\n    }\n  }\n\n  /**\n   * Sends a message.\n   * @param {Object} message - The message object to send\n   */\n  sendMessage(message) {\n    // 在发送前检查连接状态\n    // 注意：即使 available 为 true，socket 也可能在发送瞬间断开\n    // Socket.IO 客户端通常会缓存消息并在重连后发送，但要了解这个行为\n    if (!this.socket || !this.socket.connected) {\n      // 使用 socket.connected 更准确\n      console.warn(\"SocketIO not connected. Message sending skipped.\", message);\n      // 可以考虑将消息放入队列稍后重试，但这会增加复杂性\n      this.pendingRequests.delete(message.request_id); // 如果不发送，也应该移除 pending 状态\n      return Promise.reject(new Error(\"Socket not connected\")); // 让调用者知道失败了\n    }\n\n    // --- 原有的 pendingRequest 检查逻辑 ---\n    if (this.pendingRequests.has(message.request_id)) {\n      console.warn(\n        `Duplicate request_id: ${message.request_id}, request blocked`,\n      );\n      // 考虑是否应该 reject Promise 或返回特定错误\n      return Promise.reject(\n        new Error(`Duplicate request_id: ${message.request_id}`),\n      );\n    }\n    this.pendingRequests.add(message.request_id);\n    // --- 发送消息 ---\n    try {\n      this.socket.emit(\"message\", JSON.stringify(message));\n      console.log(\"WebSocket sending request\", message);\n      // 注意：emit 是异步的，但通常不返回 Promise\n      // 如果需要确认服务器收到，需要服务器发送回执\n      return Promise.resolve(); // 表示发送尝试已发出\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      this.pendingRequests.delete(message.request_id); // 发送失败，移除 pending 状态\n      return Promise.reject(error); // 传递错误\n    }\n  }\n\n  /**\n   * Sends a request and waits for a response.\n   * @param {String} url - API endpoint\n   * @param {Object} data - Request data\n   * @returns {Promise<any>} Response data\n   */\n  fetch(url, data) {\n    return new Promise((resolve, reject) => {\n      const pathArray = url.split(\"/\").filter(Boolean);\n      const request = {\n        request_id: randomString(16),\n        protocol: pathArray[1],\n        type: pathArray[2],\n        id: pathArray[3],\n        data: data,\n        metaData: {\n          contactorId: this.id,\n        },\n      };\n      const timeOut = new Promise((_, reject) => {\n        setTimeout(() => {\n          this.pendingRequests.delete(request.request_id); // Remove on timeout\n          reject(\"timeout\");\n        }, 60000);\n      });\n      const response = new Promise((resolve) => {\n        this.on(request.request_id, (res) => {\n          this.pendingRequests.delete(request.request_id); // Remove on response\n          resolve(res.data);\n        });\n      });\n      Promise.race([timeOut, response])\n        .then(resolve)\n        .catch(reject)\n        .finally(() => {\n          this.off(request.request_id);\n        });\n      this.sendMessage(request); // Use sendMessage to send the request\n      console.log(\"WebSocket sending request\", url, request);\n    });\n  }\n\n  /**\n   * Streams completion data.\n   * @param {Object} data - Completion request data\n   * @returns {AsyncGenerator<any>} - Completion data generator\n   */\n  streamCompletions(data, metaData) {\n    const request_id = randomString(16);\n    const request = {\n      request_id,\n      protocol: \"llm\",\n      type: \"completions\",\n      data: data,\n      metaData,\n    };\n    this.sendMessage(request);\n    console.log(\"WebSocket sending request\", request);\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport EventEmitter from \"../event.js\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default class Adapter extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  async fetch(url, data) {\n    return await client.socket.fetch(url, data);\n  }\n}\n","import Adapter from \"./adapter.js\";\n\nexport default class Onebot extends Adapter {\n  constructor() {\n    super();\n  }\n\n  convertMessage(data) {\n    console.log(data);\n    data.message.forEach((element, index) => {\n      if (element.type === \"image\") {\n        const base64Data = element.data.file.replace(\n          /^base64:\\/\\//,\n          \"data:image/jpeg;base64,\",\n        );\n        data.message[index].data.file = base64Data;\n        console.log(data.message[index]);\n      } else if (element.type === \"nodes\") {\n        element.data.messages.forEach((node) => {\n          if (node.type === \"image\") {\n            const base64Data = node.data.file.replace(\n              /^base64:\\/\\//,\n              \"data:image/jpeg;base64,\",\n            );\n            node.data.file = base64Data;\n          }\n        });\n      }\n    });\n\n    const rplMessage = data.message.filter(\n      (element) => element.type === \"reply\",\n    );\n    const midMessage = data.message.filter(\n      (element) => element.type !== \"reply\",\n    );\n    if (rplMessage.length > 0) {\n      midMessage.push(rplMessage[0]);\n    }\n\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: midMessage,\n      id: data.message_id,\n      status: \"completed\",\n    };\n    return webMessage;\n  }\n\n  /**\n   * Send message to server\n   * @param {id} string\n   * @param {WebMessage} message\n   * @returns {Promise<number>} message_id\n   */\n  async send(id, message) {\n    const response = await this.fetch(\n      \"/api/onebot/message\" + `/${id}`,\n      message,\n    );\n    return response.message_id;\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Adapter from \"./adapter.js\";\nimport { client, config } from \"../runtime.js\";\nimport { numberString } from \"../../utils/generate.js\";\n\nexport default class Openai extends Adapter {\n  constructor(config) {\n    super();\n    this.id = config.id;\n  }\n\n  convertMessage(message) {\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: [{ type: \"blank\", data: {} }],\n      status: \"pending\",\n      id: numberString(16),\n    };\n    const mergedMessage = { ...webMessage, ...message };\n    return mergedMessage;\n  }\n\n  async getMessagesSummary(messageChain) {\n    const query = `请你根据以下对话的内容\\n${JSON.stringify(messageChain)}\\n，总结出一个简短的对话主题,你的回答必须只包含对话主题，不要包含任何其他内容，包括句号。`;\n    const settings = config.getLLMDefaultConfig();\n    settings.base.stream = false;\n    const messages = {\n      settings,\n      messages: [{ role: \"user\", content: query }],\n    };\n\n    const response = await this.fetch(`/api/llm/completions`, messages);\n    // debugger;\n    const { content } = response;\n    return content || \"未命名会话\";\n  }\n\n  handleMessageEvent(chunk) {\n    const data = chunk.data;\n\n    const messageId = data.metaData.messageId;\n\n    delete data.metaData;\n\n    const emitEvent = (eventName, detail) => {\n      this.emit(eventName, { ...detail, messageId });\n    };\n\n    console.log(\"Received chunk from LLM:\", chunk);\n    if (chunk.message === \"update\") {\n      const updateHandlers = {\n        reasoningContent: (content) =>\n          emitEvent(\"updateReasoning\", { reasoning_content: content }),\n        content: (content) => emitEvent(\"updateMessage\", { chunk: content }),\n        toolCall: (tool_call) => emitEvent(\"updateToolCall\", { tool_call }),\n      };\n\n      const data = chunk.data;\n      const handler = updateHandlers[data.type];\n      if (handler) {\n        handler(data.content);\n      }\n    } else if ([\"complete\", \"failed\"].includes(chunk.message)) {\n      const completionHandlers = {\n        complete: () => emitEvent(\"completeMessage\", {}),\n        failed: () => emitEvent(\"failedMessage\", { error: chunk.data }),\n      };\n\n      const handler = completionHandlers[chunk.message];\n      if (handler) {\n        handler();\n      }\n    }\n  }\n\n  async send(messages, messageId, settings) {\n    console.log(\"send message to openai\");\n\n    const metaData = {\n      contactorId: this.id,\n      messageId,\n    };\n    // Apply settings defaults\n    const data = {\n      settings, // Default to empty object\n      messages,\n    };\n\n    console.log(\"Data sent to LLM:\", data);\n\n    if (!client.socket) {\n      throw new Error(\"WebSocket connection not established.\");\n    }\n\n    client.socket.streamCompletions(data, metaData);\n  }\n}\n","import Onebot from \"./adapter/onebot.js\";\nimport Openai from \"./adapter/openai.js\";\nimport EventEmmiter from \"./event.js\";\nimport { numberString } from \"../utils/generate.js\";\nimport { config } from \"@/lib/runtime.js\";\n\nconst AVATAR_BASE_PATH =\n  \"https://registry.npmmirror.com/@lobehub/icons-static-svg/latest/files/icons\";\n\nconst AVATAR_MAP = {\n  OpenAI: \"openai.svg\",\n  Cohere: \"cohere-color.svg\",\n  Anthropic: \"claude-color.svg\",\n  Google: \"gemini-color.svg\",\n  \"X.AI\": \"grok.svg\",\n  DeepSeek: \"deepseek-color.svg\",\n  智谱清言: \"zhipu-color.svg\",\n  豆包: \"doubao-color.svg\",\n  \"月之暗面 (kimi)\": \"moonshot.svg\",\n  科大讯飞: \"spark-color.svg\",\n  通义千问: \"qwen-color.svg\",\n  腾讯混元: \"hunyuan-color.svg\",\n};\n\nconst avatarPolicy = [\"MODEL\", \"CUSTOM\"];\n\nconst namePolicy = [\"MODEL\", \"CUSTOM\", \"SUMMARY\"];\n\nexport default class Contactor extends EventEmmiter {\n  /**\n   * Contactor 构造函数\n   * @param {string} platform - 平台 (e.g., \"onebot\", \"openai\")\n   * @param {object} config - 配置对象\n   * @param {string} config.id - ID\n   * @param {string} config.name - 名称\n   * @param {string} config.avatar - 头像 URL\n   * @param {string} config.title - 标题\n   * @param {object} config.options - 选项\n   * @param {number} config.priority - 优先级 (0 最高)\n   * @param {number} config.namePolicy - 名称策略 (默认 0)\n   * @param {number} config.avatarPolicy - 头像策略 (默认 0)\n   * @param {number} config.firstMessageIndex - 首条消息索引 (默认 0)\n   * @param {array} config.messageChain - 消息链 (默认 [])\n   * @param {number} config.lastUpdate - 最后更新时间 (默认当前时间)\n   * @param {number} config.createTime - 创建时间 (默认当前时间)\n   */\n  constructor(platform, config) {\n    super();\n    this.platform = platform;\n    this.id = config.id;\n    this.options = config.options;\n    this.namePolicy = config.namePolicy || 0;\n    this.avatarPolicy = config.avatarPolicy || 0;\n    this.title = config.title;\n    this.name = config.name;\n    this.avatar = config.avatar;\n    this.priority = config.priority;\n    this.firstMessageIndex = config.firstMessageIndex || 0;\n    this.messageChain = config.messageChain || [];\n    this.active = false;\n    this.lastUpdate = config.lastUpdate || Date.now(); // 使用 Date.now()\n    this.createTime = config.createTime || Date.now(); // 使用 Date.now()\n    this.lastMessageSummary = this.getLastMessageSummary();\n    this.kernel =\n      platform === \"onebot\" ? new Onebot(config) : new Openai(config); // 简化条件判断\n\n    if (platform === \"openai\") {\n      this.enableOpenaiListener();\n    }\n  }\n\n  /**\n   * 将 Contactor 对象转换为 JSON 格式\n   * @returns {object} - 包含 Contactor 属性的 JSON 对象\n   */\n  toJSON() {\n    return {\n      platform: this.platform,\n      id: this.id,\n      options: this.options,\n      namePolicy: this.namePolicy,\n      avatarPolicy: this.avatarPolicy,\n      title: this.title,\n      name: this.name,\n      avatar: this.avatar,\n      priority: this.priority,\n      messageChain: this.messageChain,\n      active: this.active,\n      lastUpdate: this.lastUpdate,\n      createTime: this.createTime,\n      lastMessageSummary: this.lastMessageSummary,\n      firstMessageIndex: this.firstMessageIndex,\n    };\n  }\n\n  enableOpenaiListener() {\n    this.kernel.on(\"updateReasoning\", (e) => {\n      const { reasoning_content, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      // 查找现有的 reason 块\n      const existingReasonIndex = rawMessage.content.findIndex(\n        (msgElm) => msgElm.type === \"reason\",\n      );\n\n      const msgElm = {\n        type: \"reason\",\n        data: {\n          text: reasoning_content,\n          startTime: new Date().getTime(),\n          endTime: 0,\n        },\n      };\n\n      if (existingReasonIndex !== -1) {\n        // 如果已存在 reason 块，更新其内容\n        msgElm.data.text =\n          rawMessage.content[existingReasonIndex].data.text + reasoning_content;\n        msgElm.data.startTime =\n          rawMessage.content[existingReasonIndex].data.startTime;\n        rawMessage.content[existingReasonIndex] = msgElm;\n      } else if (rawMessage.content[0].type === \"blank\") {\n        // 如果是 blank 状态，直接更新第一个元素\n        rawMessage.content[0] = msgElm;\n      } else {\n        // 其他情况，追加到末尾\n        rawMessage.content.push(msgElm);\n      }\n\n      this.emit(\"updateMessage\");\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateMessage\", (e) => {\n      const { chunk, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      rawMessage.content.forEach((msgElm) => {\n        if (msgElm.type == \"reason\" && !msgElm.data.endTime)\n          msgElm.data.endTime = new Date().getTime();\n      });\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const isFirstElement = [\"blank\", \"text\"].includes(lastMsgElm.type);\n\n      const msgElm = {\n        type: \"text\",\n        data: {\n          text: (lastMsgElm.type == \"text\" ? lastMsgElm.data.text : \"\").concat(\n            chunk,\n          ),\n        },\n      };\n\n      if (isFirstElement)\n        rawMessage.content[rawMessage.content.length - 1] = msgElm;\n      else rawMessage.content.push(msgElm);\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateToolCall\", (e) => {\n      const { tool_call, messageId } = e;\n      console.log(tool_call);\n\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const msgElm = {\n        type: \"tool_call\",\n        data: tool_call,\n      };\n\n      if (lastMsgElm.type == \"blank\") {\n        // 这种情况一定是第一条空白消息，直接更新成 toolCall 消息\n        rawMessage.content[0] = msgElm;\n      } else {\n        const previousCall = rawMessage.content.find(\n          (msgElm) => msgElm.data.id == tool_call.id,\n        );\n        if (previousCall) {\n          const updatedCall = JSON.parse(JSON.stringify(previousCall));\n          updatedCall.data.action = tool_call.action;\n          updatedCall.data.result = tool_call.result;\n          if (tool_call.action == \"pending\") {\n            updatedCall.data.parameters += tool_call.parameters;\n          }\n          const index = rawMessage.content.indexOf(previousCall);\n          rawMessage.content[index] = updatedCall;\n        } else {\n          // 这种情况就是新增一条 toolCall 消息\n          rawMessage.content.push(msgElm);\n        }\n      }\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"completeMessage\", (e) => {\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        rawMessage.status = \"completed\";\n\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          messageId,\n        });\n      }\n    });\n\n    this.kernel.on(\"failedMessage\", (e) => {\n      console.error(e);\n      // case 1: e.error.message 为json字符串，需要解析\n      if (typeof e.error === \"string\") {\n        try {\n          e.error.message = JSON.parse(e.error.message);\n        } catch (error) {\n          console.error(\"Failed to parse error message:\", error);\n        }\n      }\n      const error = JSON.stringify(e.error, null, 2);\n\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        const errorMessage =\n          \"Error : LLM 响应失败！\\n```json\\n \" + error + \"\\n```\";\n        const errElem = {\n          type: \"text\",\n          data: {\n            text: errorMessage,\n          },\n        };\n\n        const withBlank = rawMessage.content.some(\n          (elm) => elm.type === \"blank\",\n        );\n\n        if (withBlank) {\n          rawMessage.content[0] = errElem;\n        } else {\n          rawMessage.content.push(errElem);\n        }\n\n        rawMessage.status = \"completed\";\n\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          messageId,\n        });\n      }\n    });\n  }\n\n  handleLLMMessageEvent(e) {\n    this.kernel.handleMessageEvent(e);\n  }\n\n  /**\n   * Send message to contactor\n   * @param {OnebotMessage} message\n   */\n  async send(message) {\n    await this.kernel.send(message);\n  }\n\n  _getFilePrompt(fileElms) {\n    const start = \"以下是用户上传的文件：\\n\";\n    return start + fileElms.join(\"\\n\");\n  }\n\n  _getValidOpenaiMessage(\n    start = this.firstMessageIndex,\n    end = this.messageChain.length,\n    length = this.options.max_messages_num,\n  ) {\n    const cuttedMessageList = this.messageChain\n      .slice(start, end)\n      .slice(-length);\n\n    const validMessageList = cuttedMessageList.filter(\n      (msg) => msg.role != \"mio_system\",\n    );\n\n    const mergedMessages = validMessageList.map((message) => {\n      const fileList = [];\n      const subArray = [];\n      message.content.forEach((elm) => {\n        const role =\n          elm.type == \"tool_call\"\n            ? \"tool\"\n            : message.role == \"user\"\n              ? \"user\"\n              : \"assistant\";\n        const formatedMsg = {\n          role: role,\n          content: \"none\",\n          _content_type: undefined,\n        };\n        if (role == \"tool\") {\n          formatedMsg.role = \"assistant\";\n          formatedMsg.content = null;\n          formatedMsg.tool_calls = [\n            {\n              id: elm.data.id,\n              function: {\n                name: elm.data.name,\n                arguments: elm.data.parameters,\n              },\n              type: \"function\",\n            },\n          ];\n          subArray.push({ ...formatedMsg });\n\n          delete formatedMsg.tool_calls;\n          formatedMsg.role = \"tool\";\n          formatedMsg.content = JSON.stringify(elm.data.result);\n          formatedMsg.tool_call_id = elm.data.id;\n          formatedMsg.name = elm.data.name;\n          subArray.push({ ...formatedMsg });\n\n          formatedMsg.role = role;\n        } else if (role == \"user\" || role == \"assistant\") {\n          if (elm.type == \"image\") {\n            formatedMsg.content = elm.data.file;\n            formatedMsg._content_type = \"image\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"text\") {\n            formatedMsg.content = elm.data.text;\n            formatedMsg._content_type = \"text\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"file\") {\n            fileList.push(elm.data.file);\n          }\n        }\n      });\n      if (fileList.length > 0) {\n        const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n        textElm[0].content = textElm[0].content + this._getFilePrompt(fileList);\n      }\n      return subArray;\n    });\n    let finalMessages = [];\n\n    mergedMessages.forEach((subArray) => {\n      const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n      const imageElm = subArray.filter((elm) => elm._content_type == \"image\");\n      const fileElm = subArray.filter((elm) => elm._content_type == \"file\");\n      const filePrompt = fileElm.length > 0 ? this._getFilePrompt(fileElm) : \"\";\n      let message = null;\n      if (\n        textElm.length > 0 &&\n        imageElm.length > 0 &&\n        imageElm[0].role == \"user\"\n      ) {\n        message = {\n          role: \"user\",\n          content: [\n            ...imageElm.map((elm) => {\n              return {\n                type: \"image_url\",\n                image_url: {\n                  url: elm.content,\n                },\n              };\n            }),\n            ...textElm.map((elm) => {\n              return {\n                type: \"text\",\n                text: elm.content + filePrompt,\n              };\n            }),\n          ],\n        };\n      }\n      if (message?.content.length == subArray.length) {\n        finalMessages.push(message);\n      } else {\n        subArray.forEach((elm) => {\n          delete elm._content_type;\n        });\n        finalMessages.push(...subArray);\n      }\n    });\n\n    const presetHistory = this.options.presetSettings.history;\n\n    if (presetHistory) {\n      finalMessages = presetHistory.concat(finalMessages);\n    }\n\n    return finalMessages;\n  }\n  updateMessageSummary() {\n    this.lastMessageSummary = this.getLastMessageSummary();\n  }\n\n  /**\n   * 从网页前端发来的消息\n   */\n  async webSend(message) {\n    this.updateLastUpdate();\n    this.messageChain.push(message);\n    this.updateMessageSummary();\n    try {\n      if (this.platform == \"onebot\") {\n        const messageId = await this.kernel.send(this.id, message.content);\n\n        return messageId;\n      } else {\n        // 截取从this.firstMessageIndex到结尾的消息\n        const finalMessages = this._getValidOpenaiMessage();\n\n        const messageId = numberString(16);\n        await this.kernel.send(finalMessages, messageId, this.options);\n\n        this.revMessage({\n          id: messageId,\n        });\n\n        return numberString(16);\n      }\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      throw error;\n    }\n  }\n\n  async retryMessage(id) {\n    const message = this.getMessageById(id);\n    if (message) {\n      message.content = [\n        {\n          type: \"blank\",\n        },\n      ];\n      this.updateLastUpdate();\n      const index = this.messageChain.indexOf(message);\n      const finalMessages = this._getValidOpenaiMessage(0, index);\n      this.kernel.send(finalMessages, id, this.options);\n      return true;\n    }\n  }\n\n  /**\n   * 接收到消息\n   * @param {string} id - ID of the contactor\n   * @param {object} message - Message received from contactor\n   */\n  revMessage(message) {\n    this.updateLastUpdate();\n\n    const webMessage = this.kernel.convertMessage(message);\n\n    if (!this.active) this.messageChain.push(webMessage);\n    else this.emit(\"revMessage\", webMessage);\n\n    this.emit(\"updateMessageSummary\");\n    return webMessage;\n  }\n\n  /**\n   * 删除消息\n   * @param {string} message_id - ID of the message to be deleted\n   * @returns {boolean} - Whether the message is successfully deleted\n   */\n  delMessage(message_id) {\n    for (let i = 0; i < this.messageChain.length; i++) {\n      if (this.messageChain[i].id === message_id) {\n        if (this.active) this.emit(\"delMessage\", i);\n        else this.acting.messageChain.splice(i, 1);\n        this.makeSystemMessage(`${this.name}撤回了一条消息`);\n        return true; // 删除成功\n      }\n    }\n    return false; // 没有找到要删除的消息\n  }\n\n  makeSystemMessage(text) {\n    const container = {\n      role: \"mio_system\",\n      time: new Date().getTime(),\n      id: new Date().getTime(),\n      content: [\n        {\n          type: \"text\",\n          data: {\n            text: text,\n          },\n        },\n      ],\n    };\n    if (this.active) this.emit(\"revMessage\", container);\n    else this.messageChain.push(container);\n  }\n\n  getLastTime() {\n    const last = this.messageChain[this.messageChain.length - 1];\n    if (!last) {\n      return \"\";\n    }\n\n    const currentTime = new Date().getTime();\n    const lastTime = new Date(last.time);\n    const timeDiff = currentTime - lastTime.getTime();\n\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      this.toinit = false;\n      // 小于24小时，返回 xx:xx (小时:分钟)\n      const hours = lastTime.getHours().toString().padStart(2, \"0\");\n      const minutes = lastTime.getMinutes().toString().padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天\n      return \"昨天\";\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = lastTime.getDay();\n      return `星期${weekdays[weekday]}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）\n      const year = lastTime.getFullYear();\n      const month = (lastTime.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = lastTime.getDate().toString().padStart(2, \"0\");\n      return `${year}/${month}/${day}`;\n    }\n  }\n\n  getShownTime(timestamp) {\n    const currentTime = new Date().getTime();\n    // 如果传入时间和当前时间差在24h以内，则显示时间\n\n    const timeDiff = currentTime - timestamp;\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天+时间\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `昨天${hours}:${minutes}`;\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x+时间\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = new Date(timestamp).getDay();\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `星期${weekdays[weekday]}${hours}:${minutes}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）+时间\n      const year = new Date(timestamp).getFullYear();\n      const month = (new Date(timestamp).getMonth() + 1)\n        .toString()\n        .padStart(2, \"0\");\n      const day = new Date(timestamp).getDate().toString().padStart(2, \"0\");\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${year}/${month}/${day} ${hours}:${minutes}`;\n    }\n  }\n\n  getLastMessageSummary(message) {\n    const getMessageText = (element) => {\n      switch (element.type) {\n        case \"text\":\n          return element.data.text;\n        case \"image\":\n          return \"[图片]\";\n        case \"record\":\n          return \"[语音]\";\n        case \"video\":\n          return \"[视频]\";\n        case \"file\":\n          return \"[文件]\";\n        case \"tool_call\":\n          return `[调用工具] ${element.data.name}`;\n        case \"reason\":\n          return element.data.text;\n        case \"blank\":\n          return \"正在思考中...\";\n        case \"reply\":\n          return \"\"; // 空字符串处理\n        case \"nodes\":\n          return \"[转发消息]\";\n        default:\n          return \"[未知消息类型] \" + element.type;\n      }\n    };\n\n    const msg = message || this.messageChain[this.messageChain.length - 1];\n    if (!msg) return \"\";\n    console.log(msg);\n\n    return getMessageText(msg.content ? msg.content[0] : msg);\n  }\n\n  updateFirstMessage() {\n    this.firstMessageIndex = this.messageChain.length;\n  }\n\n  updateLastUpdate() {\n    this.lastUpdate = new Date().getTime();\n  }\n\n  getMessageById(id) {\n    return this.messageChain.find((msg) => msg.id === id);\n  }\n\n  loadAvatar() {\n    let avatar = \"/static/avatar/miobot.png\";\n    if (avatarPolicy[this.avatarPolicy] == \"MODEL\") {\n      const model = this.options.base.model;\n      avatar = Contactor.getAvatarByModel(model);\n    } else if (avatarPolicy[this.avatarPolicy] == \"CUSTOM\") {\n      avatar = this.avatar;\n    }\n\n    if (this.platform == \"openai\") {\n      this.title = this.options.base.model;\n    }\n\n    this.avatar = avatar;\n    return avatar;\n  }\n\n  async loadName() {\n    let name = this.name ?? \"未命名 Bot\";\n    if (namePolicy[this.namePolicy] == \"MODEL\") {\n      const model = this.options.model;\n      name = model;\n    } else if (namePolicy[this.namePolicy] == \"CUSTOM\") {\n      name = this.name;\n    } else if (namePolicy[this.namePolicy] == \"SUMMARY\") {\n      if (this.messageChain.length < 2) {\n        name = \"新建的 Bot\";\n      } else if (\n        this.messageChain.length == 2 ||\n        this.messageChain.length % 6 == 0\n      ) {\n        name = await this.getMessagesSummary();\n      }\n    }\n    this.name = name;\n    return name;\n  }\n\n  getMessagesSummary() {\n    if (this.platform == \"openai\") {\n      return this.kernel.getMessagesSummary(\n        this._getValidOpenaiMessage().slice(-4),\n      );\n    } else {\n      return \"仅支持 OpenAI Chat Bot\";\n    }\n  }\n\n  static getAvatarByModel(model) {\n    const modelOwner = config.getModelOwner(model);\n    if (Object.keys(AVATAR_MAP).includes(modelOwner)) {\n      return `${AVATAR_BASE_PATH}/${AVATAR_MAP[modelOwner]}`;\n    }\n\n    return `${AVATAR_BASE_PATH}/openai.svg`;\n  }\n}\n","import Socket from \"./websocket.js\";\nimport Contactor from \"./contactor.js\";\nimport localforage from \"localforage\";\nimport EventEmitter from \"./event.js\";\nimport { reactive } from \"vue\";\nimport _ from \"lodash\";\nimport UploadWorker from \"../worker/fileUpload.js?worker\";\n\n// Configure localforage\nlocalforage.config({\n  name: \"mio-chat\",\n});\n\nexport default class Client extends EventEmitter {\n  constructor(config) {\n    super();\n    this.inited = false;\n    this.id = null; // Loaded from storage\n    this.code = null; // Loaded from storage\n    this.isConnected = false; // Dynamic\n    this.contactList = []; // Loaded from storage\n    this.socket = null; // Dynamic\n    this.qq = null; // Web\n    this.bot_qq = null; // Web\n    this.avatar = null; // Web\n    this.onPhone = null; // Dynamic\n    this.title = \"Mio\"; // Fixed\n    this.name = \"user\"; // Fixed\n    this.config = config; // Parameter\n\n    this.setLocalStorage = _.debounce(this.setLocalStorage.bind(this), 500); // 防抖时间设置为 1000 毫秒 (1 秒)\n  }\n\n  /**\n   * Prepare initialization\n   * @returns {object} Initialization information\n   */\n  async preInit() {\n    const localBaseInfo = this.config.getBaseConfig();\n    if (Object.keys(localBaseInfo).length === 0) {\n      await this.loadOriginBaseInfo();\n    } else {\n      this.loadOriginBaseInfo();\n      this.loadBaseInfo(localBaseInfo);\n    }\n\n    const localStroge = await this.getLocalStorage();\n    if (localStroge) {\n      this.loadLocalStorage(localStroge);\n    }\n\n    this.inited = true;\n    this.emit(\"loaded\");\n  }\n\n  genDefaultConctor(info) {\n    if (info.onebot_enabled) {\n      // Create default OneBot contactor\n      const onebotConfig = {\n        id: this.genFakeId(),\n        name: \"OneBot\",\n        namePolicy: 1,\n        avatarPolicy: 1,\n        avatar: `/p/qava?q=${this.bot_qq}`,\n        title: \"云崽\",\n        priority: 0,\n        options: {},\n        lastUpdate: -Infinity,\n      };\n      this.addConcator(\"onebot\", onebotConfig);\n    }\n\n    const options = this.config.getLLMDefaultConfig();\n    // const allTools = Object.values(this.config.llmTools).map((tool) => (\n    //   ...Object.keys(tool)\n    // ));\n    const allTools = [];\n    for (const key in this.config.llmTools) {\n      allTools.push(...Object.keys(this.config.llmTools[key]));\n    }\n    options.toolCallSettings.tools = allTools;\n\n    const LLMDefaultConfig = {\n      id: this.genFakeId(),\n      name: \"MioBot\",\n      avatar: \"/p/ava/miobot.png\",\n      namePolicy: 1,\n      avatarPolicy: 1,\n      title: \"chat\",\n      priority: 0,\n      lastUpdate: -Infinity,\n      options,\n    };\n\n    this.addConcator(\"openai\", LLMDefaultConfig);\n  }\n\n  async addConcator(platform, config) {\n    const bot = new Contactor(platform, config);\n    bot.loadName();\n    bot.loadAvatar();\n\n    const list = reactive(this.contactList);\n    list.push(bot);\n    await this.setLocalStorage();\n    return bot;\n  }\n\n  rmContactor(id) {\n    const list = reactive(this.contactList);\n    const index = list.findIndex((item) => item.id == id);\n\n    if (index != -1) {\n      list.splice(index, 1);\n      this.setLocalStorage();\n    }\n  }\n\n  async loadOriginalContactors(shareId) {\n    const path = `/api/share?id=${shareId}`;\n    let contactor = null;\n    try {\n      const res = await fetch(path);\n      const data = await res.json();\n      if (data.code == 0) {\n        contactor = data.data.contactor;\n        // 检查是否已经存在\n        if (!this.getContactor(contactor.id)) {\n          this.addConcator(contactor.platform, contactor);\n        }\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Failed to load original contactors:\", error);\n      return false;\n    }\n  }\n\n  async shareContactor(id) {\n    const uploadResult = await this.setOriginalContactor(id);\n    if (uploadResult) {\n      const { previewImage, shareUrl } = uploadResult;\n      console.log(shareUrl);\n      console.log(previewImage);\n      // 拼接完整链接\n      const originalUrl = document.location.origin;\n      // 复制链接到剪贴板\n      const clipboard = navigator.clipboard;\n      if (clipboard) {\n        clipboard.writeText(originalUrl + shareUrl);\n      }\n      return uploadResult;\n    } else {\n      return null;\n    }\n  }\n\n  async setOriginalContactor(id) {\n    const path = `/api/share/set`;\n    const body = {\n      contactor: this.getContactor(id),\n    };\n    try {\n      const res = await fetch(path, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      const data = await res.json();\n      if (data.code == 0) {\n        return data.data;\n      }\n    } catch (error) {\n      console.error(\"Failed to set original contactor:\", error);\n      return null;\n    }\n  }\n\n  async reset() {\n    localforage.clear();\n    localStorage.clear();\n    try {\n      await this.resetCache();\n    } catch (error) {\n      console.error(\"Failed to reset cache:\", error);\n    }\n    return true;\n  }\n\n  async resetCache() {\n    try {\n      // 2. Send a message to the active Service Worker to clear its cache\n      if (navigator.serviceWorker.controller) {\n        console.log(\n          \"Sending message to active Service Worker to clear cache...\",\n        );\n        await new Promise((resolve, reject) => {\n          const messageChannel = new MessageChannel();\n          messageChannel.port1.onmessage = (event) => {\n            if (event.data.type === \"IDB_CACHE_CLEARED\") {\n              console.log(\"Service Worker cache cleared successfully.\");\n              resolve();\n            } else if (event.data.type === \"IDB_CACHE_CLEAR_FAILED\") {\n              console.error(\n                \"Service Worker cache clear failed:\",\n                event.data.error,\n              );\n              reject(event.data.error);\n            } else {\n              reject(new Error(\"Unknown message from Service Worker\"));\n            }\n          };\n          messageChannel.port1.onerror = (error) => {\n            console.error(\"Message port error:\", error);\n            reject(error);\n          };\n          navigator.serviceWorker.controller.postMessage(\n            { type: \"CLEAR_IDB_CACHE\" },\n            [messageChannel.port2],\n          );\n        });\n      } else {\n        console.log(\n          \"No active Service Worker found. Skipping cache clear message.\",\n        );\n      }\n\n      // 1. Unregister all service workers\n      const registrations = await navigator.serviceWorker.getRegistrations();\n      if (registrations && registrations.length > 0) {\n        console.log(\n          `Found ${registrations.length} registered Service Workers, unregistering...`,\n        );\n        for (const registration of registrations) {\n          // Use a for...of loop for cleaner async/await\n          try {\n            const unregistered = await registration.unregister();\n            if (unregistered) {\n              console.log(\n                `Service Worker ${registration.scope} unregistered successfully`,\n              );\n            } else {\n              console.warn(\n                `Service Worker ${registration.scope} unregistration failed`,\n              );\n            }\n          } catch (error) {\n            console.error(\n              `Failed to unregister Service Worker ${registration.scope}:`,\n              error,\n            );\n            // We don't reject here, to attempt to unregister other SWs. Log it, though.\n          }\n        }\n        console.log(\n          \"All Service Workers unregistration completed (with possible errors).\",\n        );\n      } else {\n        console.log(\"No registered Service Workers found.\");\n      }\n\n      return true; // Indicate success\n    } catch (error) {\n      console.error(\"Error during cache reset:\", error);\n      throw error; // Re-throw the error to be caught by the caller\n    }\n  }\n\n  everLogin() {\n    const stroge = localStorage.getItem(\"everLogin\");\n    if (stroge) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setEverLogin() {\n    localStorage.setItem(\"everLogin\", true);\n  }\n\n  async init() {\n    await this.preInit();\n    if (this.everLogin()) {\n      console.log(\"Detected cache, attempting automatic reconnection\");\n      this.isConnected = false;\n      this.login(this.code);\n    } else {\n      console.log(\"Not logged in before, please login first\");\n    }\n  }\n\n  getContactors() {\n    return this.contactList;\n  }\n\n  getContactor(id, onebotId = null) {\n    if (onebotId) {\n      // TODO: 拓展 Onebot 协议功能，实现 IM\n      return this.contactList.find((item) => item.platform == \"onebot\");\n    } else {\n      return this.contactList.find((item) => item.id == id);\n    }\n  }\n\n  /**\n   * Generate a random 5-digit ID starting with 1\n   * @returns {number} 5-digit random ID starting with 1\n   */\n  genFakeId() {\n    if (!this.id) {\n      // Generate 5-digit random number starting with 1\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`1${randomNum}`);\n    } else {\n      // Generate 4-digit random number and append to existing ID\n      const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`${this.id}${subRandomNum}`);\n    }\n  }\n\n  /**\n   * Get user information from localStorage\n   * @returns {object|false} User information or false if not found\n   */\n  async getLocalStorage() {\n    const client = await localforage.getItem(\"client\");\n    if (client) {\n      const localConfig = JSON.parse(client);\n      return localConfig;\n    } else {\n      // First-time user\n      this.id = this.genFakeId();\n      this.code = null;\n      return null;\n    }\n  }\n\n  /**\n   * Load user information from localStorage\n   * @param {object} client User information\n   */\n  loadLocalStorage(client) {\n    this.id = client.id;\n    this.code = client.code;\n\n    // If contact list exists, instantiate as contact objects\n    if (client.contactList && client.contactList.length != 0) {\n      this.contactList = client.contactList.map(\n        (item) => new Contactor(item.platform, item),\n      );\n    } else {\n      this.contactList = [];\n    }\n  }\n\n  /**\n   * Save user information to localStorage\n   */\n  async setLocalStorage() {\n    // await localforage.setItem(\"client\", JSON.stringify(this));\n    const client = {\n      id: this.id,\n      code: this.code,\n      contactList: this.contactList,\n    };\n    await localforage.setItem(\"client\", JSON.stringify(client));\n    console.log(\"Client saved\");\n  }\n\n  /**\n   * Login\n   * @param {string} code Access code\n   * @returns {Promise} Login result\n   */\n  async login(code) {\n    this.code = code;\n\n    return new Promise((resolve, reject) => {\n      const socket = new Socket(this.id, this.code);\n\n      socket.on(\"connect\", async (info) => {\n        console.log(\"Login successful\");\n        this.isConnected = true;\n        this.socket = socket;\n        this.config.setLlmModels(info.models);\n        this.addMsgListener();\n        if (this.contactList.length == 0) {\n          this.genDefaultConctor(info);\n        }\n        this.setEverLogin();\n        this.setLocalStorage();\n        resolve(info);\n      });\n\n      socket.on(\"connect_error\", (error) => {\n        console.log(\"Login failed\", error);\n        this.isConnected = false;\n        reject(error.message);\n      });\n\n      socket.connect();\n    });\n  }\n\n  addMsgListener() {\n    this.socket.on(\"onebot_message\", (e) => {\n      console.log(e);\n      const data = e.data;\n      const id = data.id;\n      const content = data.content;\n      const type = data.type;\n\n      if (type == \"message\") {\n        const contactor = this.getContactor(id, 10000);\n        if (contactor) {\n          contactor.revMessage(content);\n          this.setLocalStorage();\n        } else {\n          console.log(\"Contactor not found\");\n        }\n      } else if (type == \"del_msg\") {\n        const onebotContactors = this.contactList.filter(\n          (item) => item.platform == \"onebot\",\n        );\n        for (const onebotContactor of onebotContactors) {\n          const deleted = onebotContactor.delMessage(content.message_id);\n          if (deleted) {\n            this.setLocalStorage();\n            console.log(\"Message deleted successfully\");\n            break;\n          }\n        }\n      }\n    });\n\n    this.socket.on(\"llm_message\", (e) => {\n      const data = e.data;\n      const { metaData } = data;\n      if (metaData.contactorId) {\n        const contactor = this.getContactor(metaData.contactorId);\n        if (contactor) {\n          contactor.handleLLMMessageEvent(e);\n          // this.setLocalStorage();\n        }\n      }\n    });\n  }\n\n  /**\n   * Logout\n   */\n  async logout() {\n    this.isConnected = false;\n    this.socket.disconnect();\n    this.socket = null;\n    this.setLocalStorage();\n  }\n\n  /**\n   * Set base information\n   * @returns {Promise} Base information\n   */\n  async loadOriginBaseInfo() {\n    const res = await fetch(\"/api/base_info\");\n    const { data } = await res.json();\n    this.config.setBaseConfig(data);\n    this.loadBaseInfo(data);\n\n    return data;\n  }\n\n  loadBaseInfo(data) {\n    this.admin_qq = data.admin_qq;\n    this.bot_qq = data.bot_qq;\n\n    this.avatar = `/p/qava?q=${this.admin_qq}`;\n\n    const onebotContactor = this.getContactor(null, 10000);\n    if (onebotContactor) {\n      onebotContactor.avatar = `/p/qava?q=${this.bot_qq}`;\n    }\n  }\n\n  /**\n   * Upload file or image\n   * @param {File|Blob|string} fileOrImage - File object, Blob, or base64 string for images\n   * @param {Object} options - Upload options\n   * @param {boolean} options.isImage - Indicates if upload is an image\n   * @param {Function} options.onProgress - Progress callback (percent complete)\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadFile(fileOrImage, options = {}) {\n    const { isImage = false, onProgress = null } = options;\n\n    // Handle image upload (base64 string or blob)\n    if (\n      isImage ||\n      (typeof fileOrImage === \"string\" && fileOrImage.startsWith(\"data:\"))\n    ) {\n      return this.uploadImage(fileOrImage);\n    }\n\n    const file = fileOrImage;\n    return new Promise((resolve, reject) => {\n      const chunkSize = 1024 * 1024; // 1MB\n      let md5Hash = null;\n\n      const finalizeUpload = async (totalChunks) => {\n        try {\n          const response = await fetch(\"/api/upload/finalize\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              totalChunks,\n              md5: md5Hash,\n              filename: file.name,\n            }),\n          });\n\n          if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n          }\n\n          const data = await response.json();\n          resolve(data);\n        } catch (error) {\n          reject({ error: `Finalization error: ${error.message}` });\n        }\n      };\n\n      const uploadChunk = async (chunk, index, totalChunks) => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          formData.append(\"file\", chunk);\n          formData.append(\"md5\", md5Hash);\n          formData.append(\"chunkIndex\", index);\n          formData.append(\"totalChunks\", totalChunks);\n          formData.append(\"filename\", file.name);\n\n          const xhr = new XMLHttpRequest();\n          xhr.open(\"POST\", \"/api/upload/chunk\", true);\n\n          // Track progress if callback provided\n          if (onProgress) {\n            xhr.upload.onprogress = (event) => {\n              if (event.lengthComputable) {\n                // Calculate overall progress based on chunks\n                const chunkProgress = event.loaded / event.total;\n                const overallProgress =\n                  (index / totalChunks + (1 / totalChunks) * chunkProgress) *\n                  100;\n                onProgress(Math.round(overallProgress));\n              }\n            };\n          }\n\n          xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n              resolve(); // Successful upload\n            } else {\n              reject(xhr.statusText); // Failed upload\n            }\n          };\n\n          xhr.onerror = () => {\n            reject(\"Network Error\");\n          };\n\n          xhr.send(formData);\n        });\n      };\n\n      const uploadFileChunks = async () => {\n        if (!file || !md5Hash) {\n          return reject({ error: \"Invalid file or missing hash\" });\n        }\n\n        const totalChunks = Math.ceil(file.size / chunkSize);\n\n        try {\n          for (\n            let currentChunk = 0;\n            currentChunk < totalChunks;\n            currentChunk++\n          ) {\n            const start = currentChunk * chunkSize;\n            const end = Math.min(start + chunkSize, file.size);\n            const chunk = file.slice(start, end);\n\n            await uploadChunk(chunk, currentChunk, totalChunks);\n          }\n\n          // All chunks uploaded, finalize\n          await finalizeUpload(totalChunks);\n        } catch (error) {\n          reject({ error: `Upload error: ${error}` });\n        }\n      };\n\n      // Start worker to calculate MD5\n      const worker = new UploadWorker();\n      worker.postMessage({ file, chunkSize });\n\n      worker.onmessage = (e) => {\n        if (e.data.hash) {\n          md5Hash = e.data.hash;\n          console.log(\"MD5 calculated. Starting upload...\");\n          uploadFileChunks();\n        } else if (e.data.error) {\n          reject({ error: e.data.error });\n          worker.terminate();\n        }\n      };\n\n      worker.onerror = (error) => {\n        console.error(\"Worker error:\", error);\n        reject({ error: `Worker error: ${error.message}` });\n        worker.terminate();\n      };\n    });\n  }\n\n  /**\n   * Upload image (now integrated into uploadFile)\n   * @param {string|Blob} image - Base64 string or Blob\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadImage(formData) {\n    try {\n      const response = await fetch(\"/api/upload/image\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      throw error; // Re-throw to be handled by caller\n    }\n  }\n\n  /**\n   * Convert Blob to base64 string\n   * @param {Blob} blob - Image blob\n   * @returns {Promise<string>} Base64 string\n   */\n  async _convertBlobToBase64(blob) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","const TOOL_CALL_MODEDS = {\n  AUTO: \"AUTO\",\n  ANY: \"ANY\",\n  NONE: \"NONE\",\n};\nconst GEMINI_SAFETY_BLOCK_SETTINGS = {\n  NONE: \"BLOCK_NONE\",\n  LOW: \"BLOCK_ONLY_HIGH\",\n  MEDIUM: \"BLOCK_MEDIUM_AND_ABOVE\",\n  HIGH: \"BLOCK_LOW_AND_ABOVE\",\n  DEFAULT: \"BLOCK_NONE\",\n};\nconst GEMINI_SAFETY_SETTINGS_TYPE = {\n  HARASSMENT: \"HARM_CATEGORY_HARASSMENT\",\n  HATE_SPEECH: \"HARM_CATEGORY_HATE_SPEECH\",\n  SEXUALLY_EXPLICIT: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n  DANGEROUS_CONTENT: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n  CIVIC_INTEGRITY: \"HARM_CATEGORY_CIVIC_INTEGRITY\",\n};\n\nconst CONFIG_KEY = \"config\";\n\nexport default class Config {\n  constructor() {\n    this.localPresets = [];\n    this.toolsConfig = {};\n    this.llmTools = [];\n    this.onebotConfig = null;\n    this.llmModels = []; // 初始化 llmModels\n    this.safetyConfig = {};\n    this.baseConfig = {};\n    this.LLMDefaultConfig = {};\n\n    this._loadStrogeConfig();\n\n    this.initLLMDefaultConfig();\n    this.loadllmTools();\n    this.loadonebotConfig();\n  }\n\n  // 统一设置 localStorage\n  _setLocalStorage(key, data) {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  // 统一获取 localStorage\n  _getLocalStorage(key) {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : null;\n  }\n\n  // 统一保存所有配置\n  _saveStrogeConfig() {\n    // debugger;\n    const configToSave = {\n      localPresets: this.localPresets,\n      toolsConfig: this.toolsConfig,\n      llmTools: this.llmTools,\n      onebotConfig: this.onebotConfig,\n      llmModels: this.llmModels,\n      baseConfig: this.baseConfig,\n      safetyConfig: this.safetyConfig,\n      LLMDefaultConfig: this.LLMDefaultConfig,\n    };\n    this._setLocalStorage(CONFIG_KEY, configToSave);\n  }\n\n  // 统一加载所有配置\n  _loadStrogeConfig() {\n    const config = this._getLocalStorage(CONFIG_KEY);\n    if (config) {\n      Object.assign(this, config);\n    } else {\n      this._saveStrogeConfig();\n    }\n  }\n\n  getLLMProviders() {\n    return this.baseConfig.llm_providers.map((provider) => ({\n      value: provider,\n      label: provider,\n    }));\n  }\n\n  // Display Config\n  setBaseConfig(config) {\n    this.baseConfig = config;\n    this._saveStrogeConfig();\n\n    const { llm_providers, default_model } = config;\n\n    const defaultProvider = llm_providers.slice(-1)[0];\n\n    this.updateLLMDefaultConfig(null, {\n      provider: defaultProvider,\n    });\n\n    // 设定一下默认的模型\n    this.updateLLMDefaultConfig(\"base\", {\n      model: default_model[defaultProvider],\n    });\n\n    if (this.baseConfigCallback) {\n      this.baseConfigCallback(config);\n    }\n  }\n\n  setBaseConfigCallback(callback) {\n    this.baseConfigCallback = callback;\n  }\n\n  updateBaseConfig(patch) {\n    this.baseConfig = {\n      ...this.displayConfig,\n      ...patch,\n    };\n    this._saveStrogeConfig();\n  }\n\n  getToolCallModes() {\n    const values = Object.values(TOOL_CALL_MODEDS);\n    return values.map((value) => ({\n      value,\n      label: value,\n    }));\n  }\n\n  getBaseConfig() {\n    return this.baseConfig;\n  }\n\n  getDefaultModel(provider) {\n    return this.baseConfig.default_model[provider];\n  }\n\n  // Llm Models\n  setLlmModels(models) {\n    this.llmModels = models;\n    this._saveStrogeConfig(); // 保存到总配置\n  }\n\n  getLlmModels(provider) {\n    if (!provider) {\n      return this.llmModels;\n    }\n    return this.llmModels[provider];\n  }\n\n  getDefaultLLMModel() {\n    return this.baseConfig.default_model;\n  }\n\n  getSafetySettingsParams() {\n    return GEMINI_SAFETY_BLOCK_SETTINGS;\n  }\n\n  isModelAvailable(provider, model) {\n    const group = this.llmModels[provider].find((modelGroup) =>\n      modelGroup.models.includes(model),\n    );\n    return group !== undefined;\n  }\n\n  // Llm Models\n  getModelOwner(model) {\n    for (const provider in this.llmModels) {\n      const group = this.llmModels[provider].find((modelGroup) =>\n        modelGroup.models.includes(model),\n      );\n      if (group) return group.owner;\n    }\n    return undefined;\n  }\n\n  // Safety Config\n  initSafetyConfig() {\n    const init = () => {\n      // 初始化 safetyConfig\n      this.safetyConfig = {};\n      for (const key in GEMINI_SAFETY_SETTINGS_TYPE) {\n        this.safetyConfig[GEMINI_SAFETY_SETTINGS_TYPE[key]] =\n          GEMINI_SAFETY_BLOCK_SETTINGS.DEFAULT;\n      }\n    };\n    if (Object.keys(this.safetyConfig).length === 0) {\n      init();\n    } else {\n      const hasIncrorectKeys = Object.keys(this.safetyConfig).some(\n        (key) => !Object.keys(GEMINI_SAFETY_SETTINGS_TYPE).includes(key),\n      );\n      const hasIncrorectValues = Object.values(this.safetyConfig).some(\n        (value) => !Object.values(GEMINI_SAFETY_BLOCK_SETTINGS).includes(value),\n      );\n      if (hasIncrorectKeys || hasIncrorectValues) {\n        init();\n        // 更新 llmDefaultConfig 中的 safetySettings\n        this.LLMDefaultConfig.safetySettings = {\n          ...this.safetyConfig,\n        };\n      }\n    }\n  }\n\n  setSafetyConfig(safetyConfig) {\n    // 新增：手动设置 safetyConfig 并保存\n    this.safetyConfig = safetyConfig;\n    this._saveStrogeConfig();\n  }\n\n  getSafetyConfig() {\n    // 新增：获取 safetyConfig\n    return this.safetyConfig;\n  }\n\n  // OpenAI Default Config\n  initLLMDefaultConfig() {\n    this.initSafetyConfig();\n    if (Object.keys(this.LLMDefaultConfig).length === 0) {\n      this.LLMDefaultConfig = {\n        provider: \"openai\",\n        base: {\n          model: \"gpt-4o-mini\",\n          max_messages_num: 10,\n          stream: true,\n        },\n        chatParams: {\n          temperature: 1,\n          top_p: 1,\n          frequency_penalty: 0,\n          presence_penalty: 0,\n        },\n        toolCallSettings: {\n          mode: TOOL_CALL_MODEDS.AUTO,\n          tools: [],\n        },\n        presetSettings: {\n          opening: \"\",\n          history: [],\n        },\n        safetySettings: {\n          ...this.safetyConfig, //  使用当前的 safetyConfig\n        },\n      };\n    }\n  }\n\n  updateLLMDefaultConfig(type, patch) {\n    if (type) {\n      this.LLMDefaultConfig[type] = {\n        ...this.LLMDefaultConfig[type],\n        ...patch,\n      };\n    } else {\n      this.LLMDefaultConfig = {\n        ...this.LLMDefaultConfig,\n        ...patch,\n      };\n    }\n\n    this._saveStrogeConfig();\n  }\n\n  getLLMDefaultConfig(provider) {\n    const copiedConfig = JSON.parse(JSON.stringify(this.LLMDefaultConfig));\n    if (!provider || provider === this.LLMDefaultConfig.provider) {\n      return copiedConfig;\n    } else {\n      const { default_model } = this.baseConfig;\n      if (default_model[provider]) {\n        copiedConfig.provider = provider;\n        copiedConfig.base.model = default_model[provider];\n        return copiedConfig;\n      } else {\n        return copiedConfig;\n      }\n    }\n  }\n\n  // llm Tools\n  async loadllmTools() {\n    const res = await fetch(\"/api/openai/tools\");\n    const data = await res.json();\n    this.llmTools = data.data.tools;\n    this._saveStrogeConfig();\n  }\n\n  // OneBot Config\n  async loadonebotConfig() {\n    const onebotOptionsData = await fetch(`/api/onebot/plugins`);\n    const onebotOptionsJson = await onebotOptionsData.json();\n    this.onebotConfig = onebotOptionsJson.data.options;\n    this._saveStrogeConfig();\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Client from \"./client.js\";\nimport Config from \"./config.js\";\n\nconst config = new Config();\nconst client = new Client(config);\n\nclient.init();\n\nexport { config, client };\n","<script>\nimport { client } from \"@/lib/runtime.js\";\n\nconst PageStatus = {\n  CHAT: \"chat\",\n  PROFILE: \"profile\",\n  SETTINGS: \"settings\",\n  NONE: \"none\",\n};\nexport default {\n  data() {\n    return {\n      processedImage: \"/p/qava?q=1099834705\",\n      activePage: PageStatus.NONE,\n    };\n  },\n  computed: {\n    isChatActive() {\n      return this.activePage === PageStatus.CHAT;\n    },\n    isProfileActive() {\n      return this.activePage === PageStatus.PROFILE;\n    },\n  },\n  watch: {\n    $route: {\n      handler(newRoute) {\n        this.activePage = this.getPageStatusFromRoute(newRoute);\n      },\n      immediate: true,\n    },\n  },\n  mounted() {\n    this.activePage = this.getPageStatusFromRoute();\n    const adminId = client.admin_qq;\n    if (adminId) {\n      this.loadAvatar(adminId);\n    } else {\n      client.on(\n        \"loaded\",\n        () => {\n          const adminId = client.admin_qq;\n          this.loadAvatar(adminId);\n        },\n        false,\n      );\n    }\n  },\n  methods: {\n    async processImage(imageUrl) {\n      return new Promise((resolve, reject) => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.src = imageUrl;\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          // 绘制原始图片\n          ctx.drawImage(img, 0, 0);\n          // 创建透明的缺口\n          let centerX = img.width * 0.8; // 圆心X坐标\n          let centerY = img.height * 0.86; // 圆心Y坐标\n          let radius = (5 / 24) * img.width; // 圆的半径\n          ctx.beginPath();\n          ctx.arc(centerX, centerY, radius, 0, Math.PI * 2, true);\n          ctx.clip();\n          ctx.clearRect(0, 0, img.width, img.height);\n          // 将处理后的图片转换为base64\n          canvas.toBlob((blob) => {\n            const url = URL.createObjectURL(blob);\n            resolve(url);\n          }, \"image/png\");\n        };\n        img.onerror = (error) => {\n          reject(error);\n        };\n      });\n    },\n    async toChat() {\n      this.activePage = PageStatus.CHAT;\n      this.$router.push({ name: \"blank\" });\n    },\n    async toProfile() {\n      this.activePage = PageStatus.PROFILE;\n      this.$router.push({ name: \"contactors\" });\n    },\n    async toConfig() {\n      this.activePage = PageStatus.SETTINGS;\n      this.$router.push({ name: \"settings\" });\n    },\n    async loadAvatar(adminId) {\n      const adminAvatar = `/p/qava?q=${adminId}`;\n      try {\n        this.processedImage = await this.processImage(adminAvatar);\n      } catch (error) {\n        console.error(\"Error loading avatar:\", error);\n      }\n    },\n    getPageStatusFromRoute(route = this.$route) {\n      if (route.path === \"/\" || route.path.includes(\"/chat/\")) {\n        return PageStatus.CHAT;\n      } else if (\n        route.path === \"/contactors\" ||\n        route.path.includes(\"/profile/\")\n      ) {\n        return PageStatus.PROFILE;\n      } else if (route.path === \"/settings\") {\n        return PageStatus.SETTINGS;\n      }\n      return PageStatus.NONE;\n    },\n  },\n};\n</script>\n<template>\n  <div id=\"sidebar\">\n    <div class=\"admin-avatar\">\n      <div class=\"status\"></div>\n      <img :src=\"processedImage\" alt=\"admin-avatar\" />\n    </div>\n    <div id=\"side\" class=\"options\">\n      <div class=\"up-half\">\n        <div class=\"icon-back\" :class=\"{ active: isChatActive }\">\n          <div id=\"chatting\" @click=\"toChat\">\n            <i class=\"iconfont chat\"></i>\n          </div>\n        </div>\n        <div class=\"icon-back\" :class=\"{ active: isProfileActive }\">\n          <div id=\"editing\" @click=\"toProfile\">\n            <i class=\"iconfont user\"></i>\n          </div>\n        </div>\n      </div>\n      <div class=\"down-half\">\n        <a\n          href=\"https://github.com/Pretend-to/mio-chat-backend\"\n          target=\"_blank\"\n          class=\"side-icon\"\n        >\n          <i class=\"iconfont github\"></i>\n        </a>\n        <div class=\"side-icon\" @click=\"toConfig\">\n          <i class=\"iconfont menu\"></i>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped>\n#sidebar {\n  display: flex;\n  flex-basis: 4.5rem;\n  flex-direction: column;\n  background-color: hsla(0, 0%, 100%, 0.8);\n  backdrop-filter: blur(0.5rem);\n  /* 添加模糊效果，值可以根据需要调整 */\n}\n.options {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n  /* margin: 1.2rem 1.2rem; */\n}\n.up-half,\n.down-half {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-basis: 8rem;\n  justify-content: center;\n}\n.icon-back {\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0.5rem 0rem;\n  border-radius: 0.5rem;\n}\n.icon-back.active {\n  background-color: rgba(113, 113, 113, 0.1);\n}\n.icon-back i,\n.down-half i {\n  margin: 0.5rem 0rem;\n  width: 1.8rem;\n  height: 1.8rem;\n  font-size: 1.6rem;\n  color: black;\n}\n.admin-avatar {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  height: 4.5rem;\n  position: relative;\n  z-index: 10;\n}\n.admin-avatar img {\n  border-radius: 50%;\n  width: 60%;\n}\n.status {\n  position: absolute;\n  left: 68%;\n  top: 71%;\n  transform: translate(-50%, -50%);\n  width: 0.7rem;\n  height: 0.7rem;\n  border-radius: 50%;\n  background: linear-gradient(to bottom, rgb(52, 238, 143), rgb(54, 221, 150));\n}\n.side-icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.icon-back.active i {\n  color: #007bff;\n}\n\n@media screen and (max-width: 600px) {\n  .options {\n    justify-content: space-evenly;\n  }\n  #sidebar {\n    width: 100%;\n    flex-direction: row;\n    flex-basis: 4rem;\n    background-color: #f5f4f9;\n  }\n  .admin-avatar {\n    display: none;\n  }\n  .options {\n    flex-direction: row;\n    width: 100%;\n  }\n  .up-half,\n  .down-half {\n    flex-basis: 50%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n  }\n  .icon-back.active {\n    background-color: transparent;\n  }\n}\n</style>\n","<template>\n  <ul\n    :class=\"{\n      'window-controls': true,\n      fullscreen: fullScreen,\n      preview: preview,\n    }\"\n  >\n    <li class=\"button\" @click=\"waiting()\">\n      <span class=\"window-min\">—</span>\n    </li>\n    <li v-if=\"fullScreen\" class=\"button\" @click=\"configFullScreen(false)\">\n      <span class=\"window-inmax\">\n        <i class=\"iconfont chuangkouhua\"></i>\n      </span>\n    </li>\n    <li v-else class=\"button\" @click=\"configFullScreen(true)\">\n      <span class=\"window-max\">▢</span>\n    </li>\n    <li id=\"close\" class=\"button\" @click=\"waiting()\">\n      <span class=\"window-close\">&times;</span>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  props: {\n    fullScreen: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"set-screen\"],\n  data() {\n    return {\n      preview: false,\n    };\n  },\n  created() {\n    // 检查查询字符串中是否存在preview参数\n    const urlParams = new URLSearchParams(window.location.search);\n    const preview = urlParams.get(\"preview\");\n    if (preview === \"true\") {\n      this.preview = true;\n    }\n  },\n  methods: {\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    configFullScreen(fullScreen) {\n      this.$emit(\"set-screen\", fullScreen);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"sass\">\n.window-controls\n    position: absolute\n    display: flex\n    width: 6rem\n    height: 2rem\n    z-index: 100\n    right: 0\n\n    &.preview\n        display: none\n\n    &.fullscreen\n        position: fixed\n\n    .button\n        display: flex\n        justify-content: center\n        align-items: flex-start\n        flex-grow: 1\n        height: 100%\n        align-items: center\n        .window-min\n            font-size: .6rem\n            margin-top: .2rem\n        .window-max\n            font-size: .9rem\n        .window-close\n            margin-top: -.15rem\n        &:hover\n            background-color: rgb(231, 231, 231)\n        &#close:hover\n            background-color: rgb(255, 0, 0)\n            color: white\n</style>\n","<template>\n  <div\n    id=\"forward-msg-preview\"\n    :class=\"onPhone ? 'on-phone' : ''\"\n    @click=\"showBox = true\"\n  >\n    <div id=\"forward-msg-head\">转发的聊天消息</div>\n    <div id=\"forward-msg-body\">\n      <div\n        v-for=\"(message, index) in messages\"\n        id=\"forward-msg-summary\"\n        :key=\"index\"\n      >\n        {{ contactor.name }}: {{ contactor.getLastMessageSummary(message) }}\n      </div>\n    </div>\n    <div id=\"forward-msg-foot\">查看{{ messages.length }}条转发消息</div>\n  </div>\n  <div v-if=\"showBox\" id=\"forward-msg-box\" :class=\"onPhone ? 'on-phone' : ''\">\n    <div class=\"head\">\n      <span>转发消息</span>\n      <span class=\"close\" @click=\"showBox = false\">&times;</span>\n    </div>\n    <div class=\"body\">\n      <div\n        v-for=\"(message, index) of messages\"\n        :key=\"index\"\n        class=\"message-container\"\n      >\n        <div id=\"other\" class=\"message-body\">\n          <div class=\"avatar\">\n            <img :src=\"contactor.avatar\" :alt=\"contactor.name\" />\n          </div>\n          <div class=\"msg\">\n            <div class=\"wholename\">\n              <div class=\"title\">{{ contactor.title }}</div>\n              <div class=\"name\">{{ contactor.name }}</div>\n            </div>\n            <div class=\"content\">\n              <div>\n                <MdPreview\n                  v-if=\"message.type === 'text'\"\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"message.data.text\"\n                />\n                <el-image\n                  v-if=\"message.type === 'image'\"\n                  :key=\"index\"\n                  style=\"margin: 8px 0; max-width: 20rem; border-radius: 1rem\"\n                  :src=\"message.data.file\"\n                  :zoom-rate=\"1.2\"\n                  :preview-teleported=\"true\"\n                  :max-scale=\"7\"\n                  :min-scale=\"0.2\"\n                  :preview-src-list=\"[message.data.file]\"\n                  :initial-index=\"4\"\n                  fit=\"cover\"\n                />\n                <MdPreview\n                  v-else\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"`尚未支持的消息类型：${message.type}`\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MdPreview } from \"md-editor-v3\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default {\n  components: {\n    MdPreview,\n  },\n  props: {\n    messages: {\n      type: Array,\n      default: () => [], // 对于数组，使用函数返回一个新的空数组\n    },\n    contactor: {\n      type: Object,\n      default: () => {}, // 对于字符串，使用空字符串\n    },\n  },\n  data() {\n    return {\n      showBox: false,\n      onPhone: false,\n    };\n  },\n  created() {\n    this.onPhone = window.innerWidth < 600;\n\n    client.on(\n      \"device-change\",\n      (type) => {\n        if (type == \"mobile\") {\n          this.onPhone = true;\n        } else {\n          this.onPhone = false;\n        }\n      },\n      false,\n    );\n  },\n};\n</script>\n\n<style scoped>\n#forward-msg-preview {\n  width: 15rem;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem;\n}\n\n#forward-msg-preview.on-phone {\n  transform: translateX(-0.35rem);\n}\n\n#forward-msg-body {\n  margin: 0.5rem 0;\n  width: 100%;\n  text-overflow: ellipsis;\n}\n\n#forward-msg-summary {\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  font-size: 0.8rem;\n  font-weight: 300;\n}\n\n#forward-msg-foot {\n  border-top: 1px solid #ccc;\n  padding-top: 0.2rem;\n  width: 100%;\n  font-size: 0.7rem;\n  color: rgb(150, 150, 150);\n}\n\n#forward-msg-box {\n  border: 1px solid black;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24rem;\n  height: 30rem;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  border-radius: 0.25rem;\n  overflow: hidden;\n}\n\n.message-body > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n\n#forward-msg-box.on-phone {\n  border: null;\n  border-radius: null;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  overflow: hidden;\n}\n\n.head {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 2rem;\n  padding-left: 1rem;\n  border-bottom: 1px solid #ccc;\n  color: black;\n}\n\n.close {\n  width: 1.5rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n.body {\n  height: auto;\n  max-height: calc(100% - 2rem);\n  overflow: auto;\n}\n</style>\n","<template>\n  <div class=\"input-bar\">\n    <div class=\"options\">\n      <div class=\"bu-emoji\">\n        <emoji-picker\n          v-show=\"showemoji\"\n          ref=\"emojiPicker\"\n          @emoji-click=\"getemoji\"\n        ></emoji-picker>\n        <p class=\"ho-emoji\">表情</p>\n        <i class=\"iconfont smile\" @click.prevent=\"ctrlEmojiPanel\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">\n          {{ activeContactor.platform == \"openai\" ? \"模型选择\" : \"工具选择\" }}\n        </p>\n        <el-tree-select\n          id=\"wraper-selector\"\n          v-model=\"selectedOption\"\n          :data=\"extraOptions\"\n          accordion\n          placement=\"top-start\"\n          @node-click=\"currentChange\"\n        />\n        <i class=\"iconfont robot\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">重置人格</p>\n        <i class=\"iconfont reset\" @click=\"$emit('cleanHistory')\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">上传</p>\n        <i class=\"iconfont upload\" @click=\"uploadFile\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">清除记录</p>\n        <el-popconfirm\n          class=\"box-item\"\n          title=\"此操作不可撤销\"\n          confirm-button-text=\"确定\"\n          cancel-button-text=\"取消\"\n          placement=\"top\"\n          @confirm=\"$emit('cleanScreen')\"\n        >\n          <template #reference>\n            <i class=\"iconfont shanchu\"></i>\n          </template>\n        </el-popconfirm>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">更多</p>\n        <i class=\"iconfont more\" @click=\"unsupportedTip\"></i>\n      </div>\n    </div>\n    <div class=\"input-box\">\n      <div class=\"input-content\">\n        <div\n          ref=\"textarea\"\n          class=\"input-area\"\n          :v-html=\"userInput\"\n          contenteditable=\"true\"\n          placeholder=\"按 Ctrl + Enter 以发送消息\"\n          @keydown=\"handleKeyDown\"\n          @input=\"handleInput\"\n          @click=\"updateCursorPosition\"\n        ></div>\n      </div>\n      <button\n        id=\"sendButton\"\n        :disabled=\"!userInput || !isValidInput(userInput)\"\n        @click.prevent=\"send\"\n      >\n        发送{{ getWraperName() ? ` | ${getWraperName()}` : \"\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { client, config } from \"@/lib/runtime.js\";\n\nexport default {\n  props: {\n    activeContactor: {\n      type: Object,\n      required: true,\n    },\n  },\n  emits: [\"toButtom\", \"cleanHistory\", \"cleanScreen\", \"setModel\", \"stroge\"],\n  data() {\n    return {\n      userInput: \"\",\n      selectedOption: null,\n      cursorPosition: [],\n      showemoji: false,\n      openaiModels: null,\n      onebotPresets: [],\n      host: \"\",\n      uploaded: { files: [], images: [] }, // Keep original data structure\n      isPasting: false,\n    };\n  },\n  computed: {\n    extraOptions() {\n      if (this.activeContactor.platform == \"openai\") {\n        return this.openaiModels;\n      } else {\n        return this.onebotPresets;\n      }\n    },\n  },\n  watch: {\n    \"$route.params.id\"() {\n      this.loadSelected();\n    },\n  },\n  created() {\n    this.loadSelected();\n  },\n  mounted() {\n    this.textareaRef = this.$refs.textarea;\n    this.textareaRef.addEventListener(\"input\", this.adjustTextareaHeight);\n    // 添加拖拽事件监听器\n    this.handleDragOver = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#e0e0e0\";\n    };\n    this.handleDragLeave = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n    };\n    this.handleDrop = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n      const files = e.dataTransfer.files;\n      if (files.length > 0) {\n        this.handleDroppedFile(files[0]);\n      }\n    };\n    this.textareaRef.addEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.addEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.addEventListener(\"drop\", this.handleDrop);\n    // 将paste事件的处理函数定义为一个方法\n    this.handlePaste = (e) => {\n      e.preventDefault();\n      this.isPasting = true;\n      // 获取剪贴板的数据\n      var items = (e.clipboardData || window.clipboardData).items;\n      for (var i = 0; i < items.length; i++) {\n        // 检查是否为文件类型\n        if (items[i].type.indexOf(\"image\") !== -1) {\n          var blob = items[i].getAsFile();\n          this.handleUploadImage(blob);\n        } else if (items[i].type === \"text/plain\") {\n          var text = (e.originalEvent || e).clipboardData.getData(\"text/plain\");\n          document.execCommand(\"insertText\", false, text);\n          this.userInput = this.textareaRef.innerText;\n        }\n      }\n      this.isPasting = false;\n    };\n    // 添加paste事件监听器\n    this.textareaRef.addEventListener(\"paste\", this.handlePaste);\n    this.host = window.location.origin;\n    this.onebotPresets = config.onebotConfig.textwraper.options;\n  },\n  unmounted() {\n    this.textareaRef.removeEventListener(\"input\", this.adjustTextareaHeight);\n    this.textareaRef.removeEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.removeEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.removeEventListener(\"drop\", this.handleDrop);\n    this.textareaRef.removeEventListener(\"paste\", this.handlePaste);\n    this.textareaRef = null;\n  },\n  methods: {\n    unsupportedTip() {\n      this.$message.warning(\"功能暂未开放\");\n    },\n    handleDroppedFile(file) {\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadFile(file);\n      }\n    },\n    ctrlEmojiPanel() {\n      this.showemoji = !this.showemoji;\n      const editor = this.textareaRef;\n      editor.focus();\n    },\n    uploadFile(file) {\n      if (file instanceof File) {\n        this.handleFileUpload(file);\n        return;\n      }\n      const availableImageFormats = [\"png\", \"jpg\", \"jpeg\", \"webp\"];\n      const availableDocFormats = [\"docx\", \"txt\", \"pdf\", \"pptx\", \"xlsx\"];\n      const fileInput = document.createElement(\"input\");\n      fileInput.type = \"file\";\n      fileInput.accept = [...availableDocFormats, ...availableImageFormats]\n        .map((format) => `.${format}`)\n        .join(\",\");\n\n      const handleChange = async (e) => {\n        fileInput.removeEventListener(\"change\", handleChange);\n        const file = e.target.files[0];\n        if (!file) return;\n        this.handleFileUpload(file);\n      };\n      fileInput.addEventListener(\"change\", handleChange);\n      fileInput.click();\n    },\n    handleFileUpload(file) {\n      if (file.size > 50 * 1024 * 1024) {\n        this.$message.error(\"文件大小超过50MB，无法上传\");\n        return;\n      }\n      this.$message.info(\"文件上传中...\");\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadDocumentFile(file);\n      }\n    },\n    async uploadDocumentFile(file) {\n      try {\n        const upload = await client.uploadFile(file);\n        this.$message.success(\"文件上传成功\");\n        this.uploaded.files.push(\n          `${upload.data.url}?size=${file.size}&name=${file.name}`,\n        );\n      } catch (error) {\n        console.error(\"文件上传失败:\", error);\n        this.$message.error(\"文件上传失败，请稍后再试\");\n      }\n    },\n    handleUploadImage(file) {\n      const maxSizeMB = 5;\n      const maxSizeByte = maxSizeMB * 1024 * 1024;\n\n      const img = new Image();\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        img.src = event.target.result;\n      };\n\n      img.onload = () => {\n        const fileType = file.type.toLowerCase();\n\n        // 处理 GIF 类型，上传原文件\n        if (fileType === \"image/gif\") {\n          // GIF 检查大小\n          if (file.size > maxSizeByte) {\n            this.$message.error(`图片大小不能超过 ${maxSizeMB}MB`);\n            return;\n          }\n          const formData = new FormData();\n          formData.append(\"image\", file, file.name);\n          client\n            .uploadImage(formData)\n            .then((upload) => {\n              const imageUrl = upload.data.url;\n              this.uploaded.images.push(imageUrl);\n              this.insertImageToTextarea(imageUrl, file.name);\n              this.$message.success(\"上传图片成功\");\n            })\n            .catch((error) => {\n              console.error(\"Error handling uploaded image:\", error);\n              this.$message.error(\"上传图片失败\");\n            });\n          return;\n        }\n\n        // 非GIF类型，使用Canvas处理\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // 根据文件类型确定mimeType和quality, for toBlob\n        let mimeType, quality;\n\n        if (fileType === \"image/png\") {\n          mimeType = \"image/png\";\n          quality = undefined; // PNG的质量参数无效\n        } else if (fileType === \"image/webp\") {\n          mimeType = \"image/webp\";\n          quality = 0.7;\n        } else {\n          // 默认为jpeg（处理jpg or其他类型）\n          mimeType = \"image/jpeg\";\n          quality = 0.7;\n        }\n\n        canvas.toBlob(\n          (blob) => {\n            if (blob.size > maxSizeByte) {\n              this.$message.error(\n                `图片压缩后仍然超过 ${maxSizeMB}MB，请选择更小的图片`,\n              );\n              return;\n            }\n\n            const formData = new FormData();\n            formData.append(\"image\", blob, file.name);\n            client\n              .uploadImage(formData)\n              .then((upload) => {\n                const imageUrl = upload.data.url;\n                this.uploaded.images.push(imageUrl);\n                this.insertImageToTextarea(imageUrl, file.name);\n                this.$message.success(\"上传图片成功\");\n              })\n              .catch((error) => {\n                console.error(\"上传图片失败\", error);\n                this.$message.error(\"上传图片失败\");\n              });\n          },\n          mimeType,\n          quality, // 对于不能使用quality参数的mime类型，此参数被忽略\n        );\n      };\n      reader.readAsDataURL(file);\n    },\n    // 插入图片到文本域的方法\n    insertImageToTextarea(imageUrl, imageName) {\n      const imageElement = document.createElement(\"img\");\n      imageElement.src = imageUrl;\n      imageElement.alt = imageName;\n      imageElement.style.maxWidth = \"10rem\";\n      imageElement.style.maxHeight = \"10rem\";\n\n      const range = document.createRange();\n      range.selectNodeContents(this.textareaRef);\n      range.collapse(false); // 将范围折叠到末尾\n\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      const fragment = range.createContextualFragment(\n        `<span>${imageElement.outerHTML}</span>`,\n      );\n      range.insertNode(fragment);\n\n      // 保持光标在插入的图片之后\n      setTimeout(() => {\n        const newRange = document.createRange();\n        newRange.selectNodeContents(this.textareaRef);\n        newRange.collapse(false); // 将范围折叠到末尾\n\n        const newSelection = window.getSelection();\n        newSelection.removeAllRanges();\n        newSelection.addRange(newRange);\n      }, 0);\n    },\n    initLLMExtraOptions() {\n      const allModels = client.config.getLlmModels();\n      this.openaiModels = Object.entries(allModels).map(\n        ([provider, models]) => {\n          return {\n            value: provider,\n            label: provider,\n            children: models.map((modelGroup) => {\n              return {\n                value: modelGroup.owner,\n                label: modelGroup.owner,\n                children: modelGroup.models.map((model) => {\n                  return {\n                    value: model,\n                    label: model,\n                  };\n                }),\n              };\n            }),\n          };\n        },\n      );\n    },\n    getOpenaiModelArray(model) {\n      const owner = client.config.getModelOwner(model);\n      return [owner, model];\n    },\n    wrapText(rawText) {\n      const preset = this.getOnebotPreset();\n      if (!this.selectedOption || !preset) return rawText;\n      const testText = \"{xxx}\";\n      console.log(this.onebotPresets);\n\n      const result = preset.replace(testText, rawText);\n      return result;\n    },\n    getOnebotPreset() {\n      const preset = this.onebotPresets\n        .reduce((acc = [], item) => {\n          const arr = item.children ?? [item];\n          return [...acc, ...arr];\n        }, [])\n        .find((child) => child.value == this.selectedOption)?.preset;\n\n      return preset;\n    },\n    loadSelected() {\n      if (this.activeContactor.platform === \"onebot\") {\n        if (this.activeContactor.preset) {\n          this.selectedOption = this.activeContactor.preset;\n        }\n      } else {\n        this.initLLMExtraOptions();\n        this.selectedOption = this.activeContactor.options.base.model;\n      }\n    },\n    adjustTextareaHeight() {\n      const textarea = this.textareaRef;\n      textarea.style.height = \"auto\";\n      textarea.style.height = textarea.scrollHeight + \"px\";\n    },\n    getWraperName() {\n      const preset = this.getOnebotPreset();\n      if (this.activeContactor.platform === \"onebot\" && preset) {\n        if (!this.selectedOption) return \"\";\n        const name = preset.replace(\"#\", \"\").replace(\"{xxx}\", \"\");\n        return name;\n      } else {\n        return \"\";\n      }\n    },\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    getemoji(e) {\n      const inputer = this.textareaRef;\n      inputer.focus();\n      const range = document.createRange();\n      const sel = window.getSelection();\n      if (!sel) return;\n      const unicode = e.detail.unicode;\n      const startPos = this.cursorPosition[0];\n      const endPos = this.cursorPosition[1];\n      const textBeforeCursor = this.userInput.substring(0, startPos);\n      const textAfterCursor = this.userInput.substring(endPos);\n\n      console.log(`前面的：${textBeforeCursor}，后面的：${textAfterCursor}`);\n\n      this.userInput = textBeforeCursor + unicode + textAfterCursor;\n      inputer.innerHTML = this.userInput;\n      // 移动光标位置到表情符号之后\n      setTimeout(() => {\n        range.setStart(inputer.firstChild, startPos + unicode.length);\n        range.setEnd(inputer.firstChild, startPos + unicode.length);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        //更新光标位置\n        this.cursorPosition = [\n          startPos + unicode.length,\n          startPos + unicode.length,\n        ];\n      }, 0);\n      this.ctrlEmojiPanel();\n    },\n    updateCursorPosition() {\n      const selection = window.getSelection();\n      if (!selection) return;\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        this.cursorPosition[0] = range.startOffset;\n        this.cursorPosition[1] = range.endOffset;\n      }\n    },\n    presend() {\n      this.textareaRef.focus();\n      // 获取textarea中的所有img元素\n      const images = this.textareaRef.querySelectorAll(\"img\");\n      const ImageSrcs = Array.from(images).map((img) => img.src);\n      // let msg = this.getSafeText(this.textareaRef.innerText);  // Use innerText, not userInput\n      let msg = this.getSafeText(this.userInput);\n      const wrappedMessage =\n        this.activeContactor.platform === \"onebot\" ? this.wrapText(msg) : msg;\n      this.userInput = this.textareaRef.innerHTML = \"\"; // Clear the textarea\n      this.adjustTextareaHeight();\n\n      const container = {\n        role: \"user\",\n        time: new Date().getTime(),\n        status: \"completed\",\n        content: [\n          {\n            type: \"text\",\n            data: {\n              text: wrappedMessage,\n            },\n          },\n        ],\n      };\n\n      ImageSrcs.forEach((imgUrl) => {\n        container.content.unshift({\n          type: \"image\",\n          data: {\n            file: imgUrl,\n          },\n        });\n      });\n      this.uploaded.files.forEach((file) => {\n        container.content.push({\n          type: \"file\",\n          data: {\n            file: this.host + file,\n          },\n        });\n      });\n\n      if (this.repliedMessageId) {\n        const replyData = {\n          type: \"reply\",\n          data: {\n            id: this.repliedMessageId,\n          },\n        };\n        container.content.push(replyData);\n      }\n      return container;\n    },\n    async send() {\n      this.$emit(\"toButtom\");\n      const container = this.presend();\n      try {\n        const message_id = await this.activeContactor.webSend(container); //发送消息\n        container.id = message_id;\n        this.$emit(\"stroge\");\n        this.uploaded.images = [];\n        this.uploaded.files = [];\n      } catch (error) {\n        this.$message.error(\"发送消息失败\");\n      }\n    },\n    getSafeText(text) {\n      // return text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n      return text;\n    },\n    cleanScreen() {\n      this.$emit(\"cleanScreen\");\n    },\n    currentChange(data, event) {\n      if (event.level === 3) {\n        // 检查父节点是否存在\n        if (!event.parent || !event.parent.parent) {\n          console.error(\"父节点不存在!\");\n          return; // 提前退出，避免后续报错\n        }\n        const selectedValues = [\n          event.parent.parent.data.value, // 假设父节点的 data 属性包含 value\n          event.parent.data.value, // 假设父节点的 data 属性包含 value\n          data.value,\n        ];\n\n        this.$message({\n          message: \"已切换到 \" + selectedValues[2] + \" 模型\",\n          type: \"success\",\n        });\n\n        // 查看 provider 协议是否变化\n        const seletedProvider = selectedValues[0];\n        if (seletedProvider !== this.activeContactor.options?.provider) {\n          this.$message({\n            message: \"已切换到 \" + seletedProvider + \" 协议\",\n            type: \"success\",\n          });\n        }\n        this.$emit(\"setModel\", selectedValues);\n      } else if (event.level === 2) {\n        if (this.activeContactor.platform === \"onebot\") {\n          if (\n            this.getOnebotPreset() &&\n            !this.getOnebotPreset().includes(\"xxx\")\n          ) {\n            this.send();\n          }\n        }\n      }\n    },\n    isValidInput(input) {\n      return input.trim().length > 0;\n    },\n    handleKeyDown(event) {\n      if (event.key === \"Enter\") {\n        if (event.ctrlKey) {\n          // Send only if there's text OR files.\n          if (this.userInput && this.isValidInput(this.userInput)) {\n            this.send();\n          } else {\n            this.$message({ message: \"不能发送空消息\", type: \"warning\" });\n          }\n        } else {\n          this.userInput += \"\\n\";\n        }\n      }\n      setTimeout(() => {\n        this.updateCursorPosition();\n      }, 0);\n    },\n    handleInput() {\n      if (!this.isPasting) this.userInput = this.textareaRef.innerText;\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n$mobile: 600px\n$icon-hover: #09f\n\ni:hover\n  color: $icon-hover\n\n.input-bar\n  flex-shrink: 0\n  display: flex\n  flex-direction: column\n  border: 0 solid rgba(161, 154, 154, 0.626)\n  flex-basis: 11rem\n  @media (max-width: $mobile)\n    flex-basis: 7rem\n    width: 100%\n    flex-direction: column-reverse\n    position: fixed\n    bottom: 0\n    z-index: 1000\n    background-color: hsla(0, 0%, 100%, 0.8)\n    backdrop-filter: blur(0.5rem)\n\n  .options\n    display: flex\n    border-top: 0.0625rem solid rgba(128, 128, 128, 0.502)\n    padding: 0.25rem 0.5rem\n    @media (max-width: $mobile)\n      border: none\n      justify-content: space-around\n\n.bu-emoji\n  position: relative\n  white-space: nowrap\n  @media screen and (min-width: $mobile)\n    &:hover p.ho-emoji\n      display: block\n\nemoji-picker\n  position: absolute\n  top: -25.75rem\n  right: -20rem\n\np.ho-emoji\n    text-wrap: nowrap\n    display: none\n    font-size: .75rem\n    padding: .125rem .25rem\n    background-color: #fff\n    border: none\n    box-shadow: 0 .125rem .25rem #0003\n    position: absolute\n    top: 80%\n    left: 50%\n    transform: translate(-60%)\ni\n  display: block\n  padding: 0.25rem 0.5rem 0 0\n  font-size: 1.25rem\n  width: 1.5rem\n  height: 1.5rem\n\n.input-box\n    flex-grow: 1\n    padding: 0 .5rem\n    display: flex\n    flex-direction: column\n    align-items: end\n\n    @media screen and (max-width: $mobile)\n      flex-direction: row\n      align-items: flex-end\n      flex-wrap: nowrap\n\n    .input-content\n      flex-wrap: wrap\n      display: flex\n      background-color: #f1f1f1\n      border: 0\n      flex-grow: 1\n      width: 100%\n\n      @media screen and (max-width: $mobile)\n        margin: 0.5rem 0.5rem 0.8rem 0\n        min-height: 2rem\n        flex-basis: calc( 100% - 4rem )\n        max-width: calc( 100% - 4rem )\n        flex-grow: 0\n        background-color: #fff\n\n      .input-area\n        overflow-y: auto\n        max-height: 20rem\n        resize: none\n        font-size: 1rem\n        background-color: #f1f1f1\n        border: 0\n        flex-grow: 1\n        width: 100%\n        moz-user-select: -moz-none\n        -moz-user-select: none\n        -o-user-select: none\n        -khtml-user-select: none\n        -webkit-user-select: none\n        -ms-user-select: none\n        user-select: none\n        &:focus\n          border: 0\n          outline: none\n\n        @media screen and (max-width: $mobile)\n          background-color: transparent\n          margin: 0.2rem\n          caret-color: #14C1EB\n\n    button\n        white-space: nowrap\n        color: #f0f8ff\n        border-radius: .3125rem\n        border: 0\n        background-color: $icon-hover\n        padding: .25rem 1rem\n        margin-bottom: .8rem\n        margin-right: .5rem\n        cursor: pointer\n\n        @media screen and (max-width: $mobile)\n          height: 2rem\n          margin-right: 0rem\n</style>\n","<template>\n  <div class=\"file-block\">\n    <div class=\"file-block-icon\">\n      <div class=\"file-icon\" :class=\"iconClass\">\n        <!-- Dynamic class binding -->\n        <span v-if=\"file_type\"> {{ file_type.toUpperCase() }}</span>\n      </div>\n    </div>\n    <div class=\"file-block-text\">\n      <div class=\"file-name\" :title=\"file_name\">{{ file_name }}</div>\n      <div class=\"file-info\">\n        {{ file_type.toUpperCase() }}, {{ formated_file_size }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    fileUrl: {\n      // 修改为 camelCase\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      file_name: \"\",\n      file_type: \"\",\n      formated_file_size: \"\",\n    };\n  },\n  computed: {\n    iconClass() {\n      //Use lower case for comparison, easier to manage\n      const type = this.file_type.toLowerCase();\n\n      if (type === \"pdf\") {\n        return \"file-icon-pdf\";\n      } else if ([\"xls\", \"xlsx\", \"csv\"].includes(type)) {\n        // Spreadsheet (Excel, CSV)\n        return \"file-icon-spreadsheet\";\n      } else if ([\"doc\", \"docx\"].includes(type)) {\n        // Word\n        return \"file-icon-word\";\n      } else if ([\"ppt\", \"pptx\"].includes(type)) {\n        // PowerPoint\n        return \"file-icon-ppt\";\n      } else {\n        return \"file-icon-other\"; // Default (gray)\n      }\n    },\n  },\n  created() {\n    // 从查询参数中获取文件大小\n    const url = this.fileUrl.split(\"?\");\n    const params = new URLSearchParams(url[1]);\n    const bits = params.get(\"size\");\n    this.file_name = params.get(\"name\");\n    this.formated_file_size = this.formatFileSize(bits);\n    // 从url中获取文件类型\n    const file_type = url[0].split(\".\");\n    this.file_type = file_type[file_type.length - 1];\n  },\n  methods: {\n    formatFileSize(bits) {\n      const units = [\"B\", \"KB\", \"MB\"];\n      let unitIndex = 0;\n      while (bits >= 1024) {\n        bits /= 1024;\n        unitIndex++;\n      }\n      return bits.toFixed(2) + \" \" + units[unitIndex];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.file-block {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 5px;\n  background-color: #f5f5f5;\n  margin-bottom: 8px;\n  width: 12rem;\n  position: relative;\n}\n\n.file-block-icon {\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n}\n\n.file-icon {\n  width: 40px;\n  height: 40px;\n  /*  Remove default background  */\n  /* background-color: #4285f4; */\n  color: #fff;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n}\n/* Add specific styles for each file type */\n.file-icon-pdf {\n  background-color: #e70012;\n}\n\n.file-icon-spreadsheet {\n  background-color: #138147;\n}\n\n.file-icon-word {\n  background-color: #144eb3;\n}\n.file-icon-ppt {\n  background-color: #ca4b27;\n}\n\n.file-icon-other {\n  background-color: gray;\n}\n\n.file-block-text {\n  flex: 1;\n  overflow: hidden;\n}\n\n.file-name {\n  font-weight: bold;\n  font-size: 12px;\n  color: #333;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.file-info {\n  font-size: 10px;\n  color: #777;\n}\n</style>\n","<template>\n  <div class=\"tool-call-bar\">\n    <div class=\"status-icon\">\n      <span v-if=\"toolCallSuccess\" class=\"call-success-icon\">\n        <div class=\"checkmark-container\">\n          <svg\n            class=\"checkmark\"\n            viewBox=\"0 0 52 36\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <polyline points=\"1 20 15 36 51 1\" />\n          </svg>\n        </div>\n      </span>\n      <span v-else-if=\"toolCallFail\" class=\"call-fail-icon\">❌</span>\n      <span v-else class=\"call-pend-icon\"></span>\n    </div>\n    <div class=\"tool-info\">\n      <div>\n        <span class=\"tool-name\">{{ toolCall.name }}</span>\n      </div>\n      <div class=\"tool-status\">\n        {{ call_status }}\n      </div>\n    </div>\n    <div class=\"extra-info\">\n      <button\n        ref=\"show-extra-info\"\n        :class=\"{ active: showExtraInfo, 'extra-info-button': true }\"\n        @click=\"showExtraInfo = !showExtraInfo\"\n      >\n        <svg\n          t=\"1731677922196\"\n          class=\"icon\"\n          viewBox=\"0 0 1024 1024\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          p-id=\"5948\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <path\n            d=\"M778.965749 128.759549l-383.064442 383.063419 388.097062 388.096039-0.070608 0.033769c12.709463 13.137205 20.529569 31.024597 20.529569 50.731428 0 40.376593-32.736589 73.112158-73.115228 73.112158-19.705807 0-37.591153-7.819083-50.730405-20.528546l-0.034792 0.035816L241.890654 564.622498l0.035816-0.035816c-13.779841-13.281491-22.3838-31.915897-22.3838-52.585659 0-0.071631 0-0.106424 0-0.178055 0-0.072655 0-0.10847 0-0.144286 0-20.669762 8.603959-39.341007 22.3838-52.622498l-0.035816-0.034792L680.573835 20.337187l0.180102 0.179079c13.139252-12.5662 30.950919-20.313651 50.587142-20.313651 40.378639 0 73.115228 32.736589 73.115228 73.114205C804.455283 95.485725 794.567076 115.334795 778.965749 128.759549z\"\n            p-id=\"5949\"\n          ></path>\n        </svg>\n      </button>\n    </div>\n    <div :class=\"{ active: showExtraInfo, 'extra-info-bar': true }\">\n      <div class=\"extra-detail\">\n        <div class=\"detail-params\">\n          <div class=\"detail-title\">参数</div>\n          <div class=\"detail-content\">\n            {{ toolCall.parameters }}\n          </div>\n        </div>\n\n        <div class=\"detail-result\">\n          <div class=\"detail-title\">返回值</div>\n          <div class=\"detail-content\">\n            {{ toolCall.result }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    toolCall: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      showExtraInfo: false,\n    };\n  },\n  computed: {\n    toolCallSuccess() {\n      return (\n        this.toolCall.action === \"finished\" && !this.toolCall?.result?.error\n      );\n    },\n    toolCallFail() {\n      return (\n        this.toolCall.action === \"finished\" && this.toolCall?.result?.error\n      );\n    },\n    call_status() {\n      if (this.toolCall.action == \"started\") return \"开始运行\";\n      if (this.toolCall.action == \"pending\") return \"函数构建中\";\n      if (this.toolCall.action == \"running\") return \"函数运行中\";\n      if (this.toolCallSuccess) return \"函数运行成功\";\n      if (this.toolCallFail) return \"函数运行失败\";\n      else return \"未知状态\";\n    },\n  },\n  mounted() {},\n};\n</script>\n<style scoped>\n.extra-detail {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 20rem;\n  max-height: 25rem;\n  flex-grow: 1;\n  padding-bottom: 1rem;\n}\n\n.detail-params,\n.detail-result {\n  margin-top: 1rem;\n  width: calc(100% - 2rem);\n  background-color: #fff;\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n}\n\n.detail-title {\n  padding-top: 0.5rem;\n  flex-basis: 2rem;\n  width: 90%;\n  border-bottom: 1px solid #5c5c5c;\n}\n\n.detail-content {\n  user-select: text;\n  margin: 0.5rem 0rem;\n  font-size: 0.8rem;\n  color: #5c5c5c;\n  width: 90%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: 8rem;\n  flex-grow: 1;\n}\n\n.extra-info-bar {\n  position: absolute;\n  overflow: hidden;\n  z-index: 2;\n  max-height: 0px;\n  transition: 0.3s;\n  top: 4rem;\n  position: absolute;\n  background-color: #f5f5f5;\n  border-radius: 0.5rem;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n}\n\n.extra-info-bar.active {\n  max-height: 50rem;\n}\n\n.tool-info {\n  flex-grow: 1;\n  flex-basis: 10rem;\n  flex-shrink: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-right: 0.5rem;\n}\n\n.extra-info {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-basis: 3rem;\n  min-width: 3rem;\n}\n\nbutton.extra-info-button {\n  transition: transform 0.3s ease;\n  transform: rotate(90deg);\n}\n\nbutton.extra-info-button.active {\n  transform: rotate(-90deg);\n}\n\nbutton.extra-info-button:hover svg {\n  transition: transform 0.3s ease;\n  transform: scale(1.2);\n}\n\n.tool-name {\n  font-weight: bolder;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.tool-call-bar {\n  max-width: 100%;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  height: 4rem;\n  flex-wrap: nowrap;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  display: flex;\n  position: relative;\n}\n\n.status-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  border-radius: 50%;\n  min-width: 4rem;\n}\n\n.call-pend-icon {\n  transform: rotateZ(45deg);\n  perspective: 1000px;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  color: #fff;\n}\n\n.call-pend-icon:before,\n.call-pend-icon:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: inherit;\n  height: inherit;\n  border-radius: 50%;\n  transform: rotateX(70deg);\n  animation: 1s spin linear infinite;\n}\n\n.call-pend-icon:after {\n  color: #ff3d00;\n  transform: rotateY(70deg);\n  animation-delay: 0.4s;\n}\n\n@keyframes rotate {\n  0% {\n    transform: translate(-50%, -50%) rotateZ(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotateZ(360deg);\n  }\n}\n\n@keyframes rotateccw {\n  0% {\n    transform: translate(-50%, -50%) rotate(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotate(-360deg);\n  }\n}\n\n@keyframes spin {\n  0%,\n  100% {\n    box-shadow: 0.2em 0px 0 0px currentcolor;\n  }\n\n  12% {\n    box-shadow: 0.2em 0.2em 0 0 currentcolor;\n  }\n\n  25% {\n    box-shadow: 0 0.2em 0 0px currentcolor;\n  }\n\n  37% {\n    box-shadow: -0.2em 0.2em 0 0 currentcolor;\n  }\n\n  50% {\n    box-shadow: -0.2em 0 0 0 currentcolor;\n  }\n\n  62% {\n    box-shadow: -0.2em -0.2em 0 0 currentcolor;\n  }\n\n  75% {\n    box-shadow: 0px -0.2em 0 0 currentcolor;\n  }\n\n  87% {\n    box-shadow: 0.2em -0.2em 0 0 currentcolor;\n  }\n}\n\n.checkmark-container {\n  width: 2.25rem;\n  height: 2rem;\n}\n\n.checkmark {\n  width: 100%;\n  height: 100%;\n}\n\n.checkmark polyline {\n  fill: none;\n  stroke: green;\n  /* 设置颜色为绿色 */\n  stroke-width: 10;\n  /* 设置线条的粗细 */\n  stroke-dasharray: 60;\n  /* 总长度 */\n  stroke-dashoffset: 60;\n  /* 起始偏移量 */\n  animation: draw 1s forwards;\n  /* 动画定义 */\n}\n\n@keyframes draw {\n  to {\n    stroke-dashoffset: 0;\n    /* 结束时偏移量为0，显示完整的对勾 */\n  }\n}\n</style>\n","<template>\n  <div class=\"reason-block\">\n    <div class=\"head-bar\">\n      <div class=\"reason-info\">{{ getReasonInfo }}</div>\n      <button\n        :class=\"{ active: show, 'extra-info-button': true }\"\n        @click=\"toggleShow\"\n      >\n        <i class=\"iconfont icon-return\" />\n      </button>\n    </div>\n    <div\n      ref=\"reasonContent\"\n      class=\"reason-content\"\n      :style=\"{ 'max-height': maxHeight }\"\n    >\n      {{ content }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    content: {\n      required: true,\n      type: String,\n      default: \"\",\n    },\n    startTime: {\n      required: true,\n      type: Number,\n    },\n    endTime: {\n      required: false,\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      show: true,\n      maxHeight: \"auto\", // 初始值\n    };\n  },\n  computed: {\n    getReasonInfo() {\n      if (this.endTime) {\n        const timeDiff = this.endTime - this.startTime;\n        return `已深度思考（耗时 ${(timeDiff / 1000).toFixed(2)} 秒）`;\n      } else {\n        return `正在深度思考......`;\n      }\n    },\n  },\n  mounted() {\n    this.updateMaxHeight(); //初始展开\n  },\n  updated() {\n    this.updateMaxHeight(); //防止内容更新,导致高度计算错误\n  },\n  methods: {\n    toggleShow() {\n      this.show = !this.show;\n      this.updateMaxHeight();\n    },\n    updateMaxHeight() {\n      if (this.show) {\n        // 展开时，设置为内容实际高度 + 一些额外空间 (如 padding)\n        this.maxHeight = this.$refs.reasonContent.scrollHeight + 20 + \"px\";\n      } else {\n        // 收起时，设置为 0\n        this.maxHeight = \"0px\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reason-block {\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n.reason-info {\n  margin: 0.5rem 0;\n  font-size: 0.8rem;\n  min-width: 8rem;\n  flex-basis: 10rem;\n  text-wrap: nowrap;\n}\n\n.head-bar {\n  flex-basis: 1rem;\n  margin: 0.5rem 0;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: fit-content;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  padding: 0px 0.5rem;\n}\n\n.head-bar:hover {\n  background-color: #ededed;\n}\n\n.head-bar button {\n  flex-basis: 1rem;\n  margin-left: 0.5rem;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n  /* 使用 ease-in-out */\n  display: flex;\n  align-items: center;\n  gap: 2px;\n}\n\n.head-bar button i {\n  font-size: 0.8rem;\n}\n\n.head-bar button.active {\n  transform: rotate(-90deg);\n}\n\n.reason-content {\n  max-width: 100%;\n  /* max-height 在 JavaScript 中动态控制 */\n  overflow: hidden;\n  /* 隐藏超出部分 */\n  user-select: text;\n  font-size: 0.8rem;\n  color: #6f6f6f;\n  white-space: pre-line;\n  border-left: 2px solid #ccc;\n  transition: max-height 0.3s ease-in-out;\n  /* 对 max-height 应用过渡 */\n  padding-left: 1rem;\n}\n</style>\n","<template>\n  <div id=\"message-menu\">\n    <template v-if=\"type === 'friend'\">\n      <div @click.stop=\"enterChat\">\n        <i class=\"iconfont chat\"></i>\n        <span>进入对话</span>\n      </div>\n      <div @click.stop=\"togglePriority\">\n        <i class=\"iconfont star\"></i>\n        <span>{{ message.priority === 0 ? \"取消置顶\" : \"置顶\" }}</span>\n      </div>\n      <div @click.stop=\"shareBot\">\n        <i class=\"iconfont icon-share\"></i>\n        <span>分享</span>\n      </div>\n      <div @click.stop=\"deleteBot\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除</span>\n      </div>\n    </template>\n    <template v-else>\n      <div v-if=\"seletedText\" @click.stop=\"copySeletedText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制选中</span>\n      </div>\n      <div @click.stop=\"copyText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制消息</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"copySeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制图片</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"saveSeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>保存图片</span>\n      </div>\n      <div @click.stop=\"retryMessage\">\n        <i class=\"iconfont reset\"></i>\n        <span>重试消息</span>\n      </div>\n      <div @click.stop=\"replyMessage\">\n        <i class=\"iconfont yinyong\"></i>\n        <span>引用消息</span>\n      </div>\n      <div @click.stop=\"deleteMessage\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除消息</span>\n      </div>\n    </template>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"MessageMenu\", // 建议添加组件 name，方便调试\n  props: {\n    type: {\n      type: String,\n      default: \"message\",\n    },\n    message: {\n      type: Object,\n      default: () => ({}),\n    },\n    seletedText: {\n      type: String,\n      default: \"\",\n    },\n    seletedImage: {\n      type: String,\n      default: \"\",\n    },\n  },\n  emits: [\"close\", \"message-option\"], //显式声明emit的事件\n  methods: {\n    async copySeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.copyImageToClipboard(this.seletedImage);\n      } catch (error) {\n        console.error(\"复制选择图片失败：\", error);\n      }\n    },\n    async saveSeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.downloadImage(this.seletedImage);\n      } catch (error) {\n        console.error(\"保存选择图片失败：\", error);\n      }\n    },\n\n    copyText() {\n      let text = \"\";\n      this.message.content.forEach((element) => {\n        if (element.type === \"text\") {\n          text += element.data.text;\n        } else if (element.type === \"image\") {\n          text += `\\n![图片](${element.data.file})`;\n        }\n      });\n      this.copyTextToClipboard(text);\n      this.$emit(\"close\");\n    },\n\n    copySeletedText() {\n      this.copyTextToClipboard(this.seletedText);\n      this.$emit(\"close\");\n    },\n\n    retryMessage() {\n      this.$emit(\"message-option\", \"retry\");\n      this.$emit(\"close\");\n    },\n\n    replyMessage() {\n      this.$emit(\"message-option\", \"reply\");\n      this.$emit(\"close\");\n    },\n\n    deleteMessage() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n    enterChat() {\n      this.$emit(\"message-option\", \"enter\");\n      this.$emit(\"close\");\n    },\n    togglePriority() {\n      this.$emit(\"message-option\", \"priority\");\n      this.$emit(\"close\");\n    },\n    shareBot() {\n      this.$emit(\"message-option\", \"share\");\n      this.$emit(\"close\");\n    },\n    deleteBot() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n\n    // 封装复制文本到剪贴板的函数\n    async copyTextToClipboard(text) {\n      let textarea;\n      try {\n        textarea = document.createElement(\"textarea\");\n        textarea.style.position = \"absolute\";\n        textarea.style.left = \"-9999px\";\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        textarea.setSelectionRange(0, 99999); // For mobile devices\n        await document.execCommand(\"copy\");\n        this.$message({ message: \"复制成功\", type: \"success\" });\n      } catch (err) {\n        console.error(\"复制失败:\", err);\n        this.$message({ message: \"复制失败\", type: \"error\" });\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    },\n    // 封装复制图片到剪贴板的函数\n    async copyImageToClipboard(imgSrc) {\n      try {\n        const response = await fetch(imgSrc);\n        if (!response.ok) {\n          throw new Error(\"网络错误，无法获取图片\");\n        }\n        const blob = await response.blob();\n        const img = new Image();\n        const url = URL.createObjectURL(blob);\n\n        img.onload = async () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          // 使用 Promise 包装 toBlob\n          const pngBlob = await new Promise((resolve) => {\n            canvas.toBlob(resolve, \"image/png\");\n          });\n\n          if (pngBlob) {\n            const item = new ClipboardItem({ \"image/png\": pngBlob });\n            await navigator.clipboard.write([item]); // 使用 await\n            this.$message({\n              message: \"图片已复制到剪贴板\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"转换为 PNG 失败\",\n              type: \"error\",\n            });\n          }\n          URL.revokeObjectURL(url);\n        };\n        img.onerror = () => {\n          this.$message({ message: \"加载图片失败\", type: \"error\" });\n          URL.revokeObjectURL(url); // 确保在错误时也释放 URL\n        };\n        img.src = url;\n      } catch (err) {\n        console.error(\"复制图片失败:\", err);\n        this.$message({ message: \"复制图片失败\", type: \"error\" });\n      }\n    },\n    // 封装下载图片的函数\n    async downloadImage(imgSrc) {\n      try {\n        const link = document.createElement(\"a\");\n        link.href = imgSrc;\n        link.download = \"image.png\";\n        link.click();\n      } catch (err) {\n        console.error(\"保存图片失败：\", err);\n        this.$message({ message: \"保存图片失败\", type: \"error\" });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n#message-menu\n    position: fixed\n    display: flex\n    flex-direction: column\n    justify-content: center\n    background-color: hsla(0, 0%, 100%, .78)\n    backdrop-filter: blur(0.5rem)\n    border-radius: 0.5rem\n    padding: .5rem\n    z-index: 9999\n\n    @keyframes pop-up\n        0%\n            transform: scale(1)\n        50%\n            transform: scale(1.2)\n        100%\n            transform: scale(1)\n\n    & div\n        margin: 0.4rem 0\n        padding: .2rem .4rem\n        border-radius: .2rem\n        display: flex\n        justify-content: space-between\n        align-items: center\n        cursor: pointer\n\n    & div:hover\n        background-color: hsla(0, 0%, 90%, .88)\n\n    & div:hover > i\n        animation: pop-up 0.5s ease-in-out 1 forwards\n\n    & i\n        position: absolute\n        display: flex\n        justify-content: center\n        align-items: center\n        transform-origin: center\n\n\n    & span\n        font-size: 0.8rem\n        color: rgb(120, 124, 127)\n        margin-left: 1.8rem\n</style>\n","<template>\n  <div class=\"add-contactor\">\n    <div class=\"head\">\n      <div class=\"title\">添加机器人</div>\n      <div class=\"close-icon\" @click=\"close\">✕</div>\n    </div>\n    <div class=\"body\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\" />\n        <input\n          v-model=\"keyWord\"\n          type=\"text\"\n          placeholder=\"输入搜索关键词\"\n          @input=\"loadSerachPresets\"\n        />\n      </div>\n      <div class=\"info\">\n        <header class=\"presets-types\">\n          <nav\n            v-for=\"(type, index) in avaliablePresetTypes\"\n            :key=\"index\"\n            :class=\"activeTypeIndex === index ? 'active' : ''\"\n            @click=\"changeShownType(index)\"\n          >\n            {{ type }}\n          </nav>\n        </header>\n        <div :style=\"{ left: buttonTranslate }\" class=\"slide-button\"></div>\n        <div\n          v-if=\"shownPrestsList.length > 0 || [0, 3].includes(activeTypeIndex)\"\n          class=\"presets-list\"\n        >\n          <div\n            v-for=\"(preset, index) in shownPrestsList\"\n            :key=\"index\"\n            class=\"presets-item\"\n          >\n            <div v-if=\"preset.avatar\" class=\"preset-avatar custom\">\n              <img :src=\"preset.avatar\" />\n            </div>\n            <div v-else-if=\"preset.model\" class=\"preset-avatar model\">\n              <img :src=\"Contactor.getAvatarByModel(preset.model)\" />\n            </div>\n            <div v-else class=\"preset-avatar\">\n              {{ preset.name.slice(0, 2) }}\n            </div>\n            <div class=\"preset-info\">\n              <div class=\"preset-name\">{{ preset.name }}</div>\n              <div :title=\"preset.opening\" class=\"preset-description\">\n                {{ preset.opening }}\n              </div>\n            </div>\n            <el-button @click=\"addBot(preset)\">添加</el-button>\n          </div>\n          <div v-show=\"showPresetsLoader\" ref=\"loader\" class=\"loading\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n        <div v-else class=\"empty-list\">\n          <el-empty :image-size=\"200\" />\n        </div>\n      </div>\n      <div class=\"options\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Contactor from \"../lib/contactor\";\nexport default {\n  emits: [\"addBot\", \"close\"],\n  data() {\n    const avaliablePresetTypes = [\"推荐\", \"最近\", \"本地\", \"系统\"];\n    return {\n      show: false,\n      presetsList: [],\n      recommendPresets: [],\n      recentPresets: [],\n      localPresets: [],\n      systemPresets: [],\n      searchPresets: [],\n      systemShownNum: 0,\n      recommendShownNum: 0,\n      keyWord: \"\",\n      activeTypeIndex: 0,\n      buttonTranslate: 0,\n      avaliablePresetTypes,\n      moreSystemPresets: true,\n      moreRecommendPresets: true,\n      observer: null, // Store the observer instance\n      Contactor,\n    };\n  },\n  computed: {\n    showPresetsLoader() {\n      return this.activeTypeIndex == 3\n        ? this.moreSystemPresets\n        : this.activeTypeIndex == 0\n          ? this.moreRecommendPresets\n          : false;\n    },\n    shownPrestsList() {\n      // 如果 keyWord 不为空，返回 searchPresets\n      if (this.keyWord) {\n        return this.searchPresets;\n      }\n      return this.activeTypeIndex === 2\n        ? this.localPresets\n        : this.activeTypeIndex === 1\n          ? this.recentPresets\n          : this.activeTypeIndex === 0\n            ? this.recommendPresets\n            : this.activeTypeIndex === 3\n              ? this.systemPresets\n              : null; // 或者返回默认值\n    },\n  },\n  async mounted() {\n    this.getAddHistory();\n\n    await this.loadSpecificType();\n\n    if (\"IntersectionObserver\" in window) {\n      const callback = (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.loadMoreData();\n          }\n        });\n      };\n\n      this.observer = new IntersectionObserver(callback);\n      const presetsLoader = this.$refs.loader;\n      if (presetsLoader) {\n        this.observer.observe(presetsLoader);\n      }\n    } else {\n      // Fallback for browsers that do not support IntersectionObserver\n      // Use scroll event to detect when the loader is visible.\n      window.addEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  beforeUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    } else {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  methods: {\n    async addBot(preset) {\n      this.strogeAddHistory(preset);\n      this.$emit(\"addBot\", preset);\n      this.$message.success(\"添加成功\");\n    },\n    strogeAddHistory(preset) {\n      // 先检查现有列表中是否有重复项\n      const existingItem = this.recentPresets.find(\n        (item) => item.name === preset.name,\n      );\n      if (existingItem) {\n        // 如果有重复项，将其从数组中移除\n        this.recentPresets.splice(this.recentPresets.indexOf(existingItem), 1);\n      }\n      // 添加新项目到数组的最前面\n      this.recentPresets.unshift(preset);\n      // 检查数组长度并保持在小于或等于 10\n      if (this.recentPresets.length > 10) {\n        this.recentPresets.pop(); // 移除最后一个元素，即最旧的元素\n      }\n      // 更新到 localStorage\n      localStorage.setItem(\"addHistory\", JSON.stringify(this.recentPresets));\n    },\n    getAddHistory() {\n      const data = localStorage.getItem(\"addHistory\");\n      if (data) {\n        this.recentPresets = JSON.parse(data);\n      }\n    },\n    async changeShownType(index) {\n      this.activeTypeIndex = index;\n      this.buttonTranslate = `${49.6 * index}px`;\n      await this.loadSpecificType();\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    async loadSpecificType() {\n      const type = this.avaliablePresetTypes[this.activeTypeIndex];\n      this.presetsList = await this.getPresetList(type);\n    },\n    async getPresetList(type) {\n      if (type === \"系统\") {\n        return await this.loadSystemPresets();\n      } else if (type === \"推荐\") {\n        return await this.loadRecommendedPresets();\n      } else if (type === \"最近\") {\n        return this.recentPresets;\n      } else if (type === \"本地\") {\n        return this.localPresets;\n      }\n    },\n    async loadRecommendedPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=recommended&start=${this.recommendShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.recommendPresets.push(res.data[i]);\n      }\n      this.recommendShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreRecommendPresets = false;\n      }\n      return this.recommendPresets;\n    },\n    async loadSystemPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=system&start=${this.systemShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.systemPresets.push(res.data[i]);\n      }\n      this.systemShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreSystemPresets = false;\n      }\n      return this.systemPresets;\n    },\n    async loadSerachPresets() {\n      const load = async () => {\n        const res = await fetch(\n          `/api/openai/presets?type=search&keyword=${this.keyWord}`,\n        ).then((res) => res.json());\n        this.searchPresets = res.data;\n      };\n      // 添加节流逻辑\n      if (this.searchTimer) {\n        clearTimeout(this.searchTimer);\n      }\n      this.searchTimer = setTimeout(() => {\n        load();\n      }, 500);\n    },\n    loadMoreData() {\n      if (this.showPresetsLoader && this.activeTypeIndex === 3) {\n        this.loadSystemPresets();\n      } else if (this.showPresetsLoader && this.activeTypeIndex === 0) {\n        this.loadRecommendedPresets();\n      }\n    },\n    handleScroll() {\n      const loader = this.$refs.loader;\n      if (!loader) return;\n\n      const rect = loader.getBoundingClientRect();\n      const isVisible =\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <=\n          (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <=\n          (window.innerWidth || document.documentElement.clientWidth);\n\n      if (isVisible) {\n        this.loadMoreData();\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.empty-list {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.presets-list {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1rem;\n  height: calc(100% - 3rem);\n  overflow-y: auto;\n}\n\n.preset-description {\n  white-space: nowrap;\n  /* 不换行 */\n  overflow: hidden;\n  /* 内容超出隐藏 */\n  text-overflow: ellipsis;\n  /* 使用省略号 */\n  font-size: 0.8rem;\n  color: #888;\n  width: 100%;\n}\n\n.presets-item button {\n  flex-basis: 60px;\n}\n\n.presets-loader {\n  width: 100%;\n  height: 1rem;\n}\n\n.presets-item {\n  position: relative;\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-basis: 3rem;\n  justify-content: space-around;\n}\n\n.preset-avatar {\n  min-width: 2.8rem;\n  max-width: 2.8rem;\n  height: 2.8rem;\n  background-color: #0099ff;\n  color: #fff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preset-avatar.model {\n  background-color: #ffffff;\n  border-radius: 50%;\n}\n\n.preset-avatar.custom img {\n  width: 100%;\n  border-radius: 50%;\n}\n\n.preset-avatar.model img {\n  width: 90%;\n}\n\n.preset-info {\n  position: relative;\n  margin-left: 0.5rem;\n  width: calc(100% - 7.5rem);\n}\n\n.slide-button {\n  width: 2rem;\n  border-top: #0099ff 2px solid;\n  margin-left: 0.3rem;\n  position: relative;\n  left: 0;\n  transition: left 0.3s;\n}\n\n.body {\n  margin-top: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  overflow: hidden;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.info {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.presets-types {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  width: 100%;\n  margin-top: 1rem;\n  position: relative;\n}\n\n.presets-types nav {\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  margin-right: 0.5rem;\n  border-radius: 0.5rem;\n  font-size: 0.8rem;\n}\n\n.presets-types nav.active {\n  color: #0099ff;\n}\n\n.search {\n  position: relative;\n  box-sizing: border-box;\n  border-bottom: 1px solid #f1f1f1;\n  width: 100%;\n  height: 2em;\n  background-color: #f1f1f1;\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  padding-left: 0.5rem;\n}\n\n.search:has(input:focus) {\n  border: #0099ff 1px solid;\n}\n\n.search input {\n  position: absolute;\n  width: calc(100% - 2rem);\n  height: 1.5rem;\n  background-color: #f1f1f1;\n  border: none;\n  outline: none;\n  margin-left: 1rem;\n}\n\n.search i {\n  position: absolute;\n  font-size: 0.8rem;\n  color: #888;\n}\n\n.add-contactor {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400px;\n  height: 500px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  overflow: hidden;\n}\n\n.head {\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #f1f1f1;\n  font-size: 0.8rem;\n  padding-left: 1rem;\n}\n\n.close-icon {\n  width: 1.5rem;\n  font-size: 0.8rem;\n  height: 100%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close-icon:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n@media (max-width: 600px) {\n  .add-contactor {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0;\n  }\n}\n</style>\n<style>\n.loading,\n.loading > div {\n  position: relative;\n  box-sizing: border-box;\n}\n\n.loading {\n  display: block;\n  font-size: 0;\n  color: #000;\n}\n\n.loading.la-dark {\n  color: #333;\n}\n\n.loading > div {\n  display: inline-block;\n  float: none;\n  background-color: currentColor;\n  border: 0 solid currentColor;\n}\n\n.loading {\n  margin-top: 1rem;\n  width: 16px;\n  min-height: 1rem;\n}\n\n.loading > div {\n  position: absolute;\n  top: 0;\n  left: -100%;\n  display: block;\n  width: 16px;\n  width: 100%;\n  height: 16px;\n  height: 100%;\n  border-radius: 100%;\n  opacity: 0.5;\n  animation:\n    ball-circus-position 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1),\n    ball-circus-size 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1);\n}\n\n.loading > div:nth-child(1) {\n  animation-delay:\n    0s,\n    -0.5s;\n}\n\n.loading > div:nth-child(2) {\n  animation-delay:\n    -0.5s,\n    -1s;\n}\n\n.loading > div:nth-child(3) {\n  animation-delay:\n    -1s,\n    -1.5s;\n}\n\n.loading > div:nth-child(4) {\n  animation-delay:\n    -1.5s,\n    -2s;\n}\n\n.loading > div:nth-child(5) {\n  animation-delay:\n    -2s,\n    -2.5s;\n}\n\n@keyframes ball-circus-position {\n  50% {\n    left: 100%;\n  }\n}\n\n@keyframes ball-circus-size {\n  50% {\n    transform: scale(0.3, 0.3);\n  }\n}\n</style>\n","<script>\nimport { client, config } from \"@/lib/runtime.js\";\nimport AddContactor from \"@/components/AddContactor.vue\";\nimport ContextMenu from \"@/components/ContextMenu.vue\";\n\nexport default {\n  components: {\n    AddContactor,\n    ContextMenu,\n  },\n  data() {\n    return {\n      contactorList: [],\n      showAddOptions: false,\n      showAddWindow: false,\n      showMenu: false,\n      menuX: 0,\n      menuY: 0,\n      selectedFriend: null,\n    };\n  },\n  computed: {\n    sortedList() {\n      return [...this.contactorList].sort((a, b) =>\n        b.priority - a.priority == -1 ? 1 : b.lastUpdate - a.lastUpdate,\n      );\n    },\n    avaliableProvideres() {\n      return config.getLLMProviders().map((item) => item.value);\n    },\n  },\n  created() {\n    if (client.getContactors().length == 0) {\n      client.on(\n        \"loaded\",\n        () => {\n          this.contactorList = client.getContactors();\n          this.addReactiveListener();\n        },\n        false,\n      );\n    } else {\n      this.contactorList = client.getContactors();\n      this.addReactiveListener();\n    }\n  },\n  methods: {\n    genBotByPreset() {\n      this.showAddOptions = false;\n      this.showAddWindow = true;\n    },\n    showChat(id) {\n      // 如果当前路径 name 是 blank 或者 chat_view ，跳转到 /chat/:id\n      if (this.$route.name == \"blank\" || this.$route.name == \"chat_view\") {\n        this.$router.push({ name: \"chat_view\", params: { id: id } });\n      } else if (\n        this.$route.name == \"contactors\" ||\n        this.$route.name == \"profile_view\"\n      ) {\n        this.$router.push({ name: \"profile_view\", params: { id: id } });\n      } else {\n        // 否则，直接跳转到 /chat/:id\n        this.$router.replace({ name: \"chat_view\", params: { id: id } });\n      }\n    },\n    getId(item) {\n      // 获取当前页面的id\n      let currentId = this.$route.params.id;\n      // 获取当前页面的contactorId\n      let contactorId = item.id;\n      // 如果当前页面的id和contactorId相同，则返回active\n      if (currentId == contactorId) {\n        return \"active\";\n      } else {\n        return item.priority == 0 ? \"important\" : \"\";\n      }\n    },\n    async genBotByProvider(provider) {\n      const options = config.getLLMDefaultConfig(provider);\n      const blankConfig = {\n        id: this.genFakeId(),\n        title: options.default_model,\n        avatarPolicy: 0,\n        namePolicy: 2,\n        priority: 1,\n        options: options,\n      };\n\n      this.showAddOptions = false;\n      await client.addConcator(\"openai\", blankConfig);\n      this.addReactiveListener();\n    },\n    startResize(event) {\n      this.isResizing = true;\n      this.startX = event.clientX;\n      this.startWidth = this.$refs.friendlists.offsetWidth;\n      document.addEventListener(\"mousemove\", this.resize);\n      document.addEventListener(\"mouseup\", this.stopResize);\n    },\n    resize(event) {\n      if (this.isResizing) {\n        // debugger;\n        let newWidth = this.startWidth + (event.clientX - this.startX);\n        const remSize = document.documentElement.style.fontSize\n          ? parseFloat(document.documentElement.style.fontSize)\n          : 16;\n        const maxWidth = 20 * remSize;\n        const minWidth = 12 * remSize;\n        newWidth =\n          newWidth > maxWidth\n            ? maxWidth\n            : newWidth < minWidth\n              ? minWidth\n              : newWidth;\n        this.$refs.friendlists.style.minWidth = newWidth + \"px\";\n        this.$refs.friendlists.style.maxWidth = newWidth + \"px\";\n      }\n    },\n    stopResize() {\n      this.isResizing = false;\n      document.removeEventListener(\"mousemove\", this.resize);\n      document.removeEventListener(\"mouseup\", this.stopResize);\n    },\n    genFakeId() {\n      // 生成5位随机数\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      // 将随机数转换为字符串\n      const randomNumStr = `1${randomNum}`;\n      if (!this.id) {\n        // 将拼接后的字符串转换为数字并返回\n        return parseInt(randomNumStr);\n      } else {\n        // 生成5位随机数\n        const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n        // 将随机数转换为字符串\n        const randomNumStr = `${this.id}${subRandomNum}`;\n        return parseInt(randomNumStr);\n      }\n    },\n    manageAddMenu() {\n      this.showAddOptions = !this.showAddOptions;\n    },\n    mergeOptions(options) {\n      const defaultOptions = config.getLLMDefaultConfig();\n      if (options.history)\n        defaultOptions.presetSettings.history = options.history;\n      if (options.tools) defaultOptions.toolCallSettings.tools = options.tools;\n      if (options.opening)\n        defaultOptions.presetSettings.opening = options.opening;\n\n      if (options.model) {\n        // 先获取可用的 provider 列表\n        const availableProviders = config\n          .getLLMProviders()\n          .map((item) => item.value);\n        // 看看哪个 provider 里面有这个 model\n        const provider = availableProviders.find((provider) =>\n          config.isModelAvailable(provider, options.model),\n        );\n        if (provider) {\n          // 如果找到了 provider，就使用这个 provider\n          defaultOptions.provider = provider;\n          defaultOptions.base.model = options.model;\n        } else {\n          // 如果没有找到 provider，就使用默认的 provider\n          defaultOptions.base.model = options.model;\n          this.$message({\n            message: \"预设模型不存在, 已使用默认模型\",\n            type: \"error\",\n          });\n        }\n      }\n      return defaultOptions;\n    },\n    async addPresetContactor(preset) {\n      const contactor = {\n        id: this.genFakeId(),\n        namePolicy: 1,\n        avatarPolicy: preset.avatar ? 1 : 0,\n        avatar: preset.avatar ? preset.avatar : undefined,\n        name: preset.name,\n        title: preset.title,\n        priority: 1,\n        options: this.mergeOptions(preset),\n      };\n      await client.addConcator(\"openai\", contactor);\n      this.addReactiveListener();\n    },\n    showFriendContextMenu(event, friend) {\n      this.selectedFriend = friend;\n      this.menuX = event.clientX;\n      this.menuY = event.clientY;\n      this.showMenu = true;\n\n      const closeMenu = () => {\n        this.showMenu = false;\n        document.removeEventListener(\"click\", closeMenu);\n      };\n      document.addEventListener(\"click\", closeMenu);\n    },\n\n    async handleFriendOption(option) {\n      switch (option) {\n        case \"enter\":\n          this.showChat(this.selectedFriend.id);\n          break;\n        case \"priority\":\n          this.selectedFriend.priority =\n            this.selectedFriend.priority === 0 ? 1 : 0;\n          client.setLocalStorage();\n          break;\n        case \"share\": {\n          const shareResult = await client.shareContactor(\n            this.selectedFriend.id,\n          );\n          if (shareResult) {\n            this.$message({\n              message: \"分享链接已复制\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"分享失败\",\n              type: \"error\",\n            });\n          }\n          break;\n        }\n        case \"delete\": {\n          let index;\n          index = this.contactorList.findIndex(\n            (c) => c.id === this.selectedFriend.id,\n          );\n          if (index !== -1) {\n            this.contactorList.splice(index, 1);\n            client.setLocalStorage();\n          }\n          break;\n        }\n      }\n      this.showMenu = false;\n    },\n\n    addReactiveListener() {\n      console.log(\"addReactiveListener\");\n      this.contactorList.map((contactor) => {\n        contactor.on(\"updateMessageSummary\", () => {\n          console.log(\"updateMessageSummary\");\n          contactor.lastMessageSummary = contactor.getLastMessageSummary();\n          this.$forceUpdate();\n        });\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <div id=\"friendlists\" ref=\"friendlists\">\n    <div id=\"friends\" class=\"upsidebar\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\"></i>\n        <input id=\"main-search\" type=\"text\" placeholder=\"搜索\" />\n      </div>\n      <div class=\"bu-add\">\n        <button id=\"addcont\" title=\"Add Bot\" @click=\"manageAddMenu\">\n          <i class=\"iconfont add\"></i>\n        </button>\n        <div v-show=\"showAddOptions\" id=\"add-options\">\n          <ul>\n            <li v-for=\"(provider, index) in avaliableProvideres\" :key=\"index\">\n              <button @click=\"genBotByProvider(provider)\">\n                新建 {{ provider }} Bot\n              </button>\n            </li>\n            <li>\n              <button @click=\"genBotByPreset\">从预设新建Bot</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"people\">\n      <div\n        v-for=\"(item, index) of sortedList\"\n        :id=\"getId(item)\"\n        :key=\"index\"\n        class=\"lists\"\n        @click=\"showChat(item.id)\"\n        @contextmenu.prevent=\"showFriendContextMenu($event, item)\"\n      >\n        <div\n          class=\"avatar\"\n          :class=\"item.avatarPolicy == 1 ? 'custom' : 'model'\"\n        >\n          <img :src=\"item.avatar\" :alt=\"item.name\" />\n        </div>\n        <div class=\"info\">\n          <div class=\"name\">{{ item.name }}</div>\n          <div id=\"time\" class=\"msginfo\">{{ item.getLastTime() }}</div>\n          <div id=\"msgctt\" class=\"msginfo\">{{ item.lastMessageSummary }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"resizer\" @mousedown=\"startResize\"></div>\n    <AddContactor\n      v-if=\"showAddWindow\"\n      @close=\"showAddWindow = false\"\n      @add-bot=\"addPresetContactor\"\n    ></AddContactor>\n    <ContextMenu\n      v-if=\"showMenu\"\n      type=\"friend\"\n      :message=\"selectedFriend\"\n      :style=\"{\n        position: 'fixed',\n        left: menuX + 'px',\n        top: menuY + 'px',\n      }\"\n      @message-option=\"handleFriendOption\"\n      @close=\"showMenu = false\"\n    />\n  </div>\n</template>\n\n<style scoped>\n#add-options {\n  position: absolute;\n  top: 2.5rem;\n  background-color: white;\n  width: 8rem;\n  left: 0;\n  border: 0.0625rem solid rgba(161, 154, 154, 0.626);\n  border-radius: 0.3125rem;\n  z-index: 2;\n}\n#add-options li {\n  display: flex;\n  flex-direction: row-reverse;\n  padding: 0.1rem 0.5rem;\n}\n#add-options li:hover {\n  background-color: #f5f5f5;\n}\n#add-options ul {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.1);\n}\n#add-options button {\n  background-color: transparent;\n}\n#friendlists {\n  height: 100%;\n  display: flex;\n  min-width: 14rem;\n  max-width: 14rem;\n  flex-direction: column;\n  position: relative;\n  background-color: #fff;\n}\n\n.resizer {\n  width: 5px;\n  cursor: ew-resize;\n  background-color: transparent; /* 可视化的样式，你可以根据需求进行调整 */\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 100%;\n}\n\n.upsidebar {\n  justify-content: space-between;\n  display: flex;\n  flex-direction: row;\n  background-color: rgb(255, 255, 255);\n  flex: 0 0 4rem;\n  align-items: flex-end;\n}\n\n#main-search {\n  width: calc(100% - 1.125rem);\n  margin-top: 0.1875rem;\n  padding-left: 0.3125rem;\n  height: 1.125rem;\n  background-color: transparent;\n  border: 0rem;\n}\n\n#main-search:focus {\n  outline: none;\n  border: 0rem;\n}\n\nbutton#searchButton {\n  width: 1rem;\n  border: 0rem;\n  border-radius: 0.3125rem;\n  margin-left: 0.5rem;\n  text-wrap: nowrap;\n}\n\n.search {\n  flex-grow: 1;\n  flex-basis: 1rem;\n  border-radius: 0.3125rem;\n  background-color: rgb(245 245, 245);\n  height: 2rem;\n  display: flex;\n  padding: 0rem 0.5rem;\n  align-items: center;\n  margin: 0 0 0.5rem 0.5rem;\n}\n\n.bu-add {\n  flex-basis: 2rem;\n  font-size: 1rem;\n  margin: 0.5rem;\n  height: 2rem;\n  position: relative;\n}\n\n.listicon {\n  padding-top: 0.0625rem;\n  width: 1rem;\n  height: 1rem;\n}\n\nbutton#addcont {\n  border-radius: 0.3125rem;\n  width: 100%;\n  height: 100%;\n  border: none;\n}\n\n.lists {\n  align-items: center;\n  min-width: 10rem;\n  display: flex;\n  padding: 0.25rem 0.5rem;\n  height: 3.75rem;\n  max-height: 3.75rem;\n  min-height: 3.75rem;\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important {\n  background-color: rgb(240, 240, 240);\n}\n\n.lists:hover {\n  background-color: rgb(240, 240, 240);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important:hover {\n  background-color: rgb(231, 231, 231);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#active {\n  background-color: rgb(0, 153, 255);\n}\n\n.lists > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: white;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n}\n\n.avatar.model > img {\n  scale: 0.9;\n}\n\n.info {\n  height: 100%;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  flex: 0 0 calc(100% - 2.65rem);\n  max-width: calc(100% - 2.65rem);\n  flex-wrap: wrap;\n}\n\n.lists#active * {\n  color: #f0f8ff;\n}\n\n.lists .name {\n  flex-basis: 4rem;\n  flex-grow: 1;\n  margin-top: 0.75rem;\n  font-size: 0.875rem;\n  margin-left: 0.5rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.info #time {\n  font-size: 0.625rem;\n  flex-grow: 1;\n  text-align: right;\n}\n\n.info #msgctt {\n  flex-basis: 100%;\n  padding-right: 1rem;\n  font-size: 0.625rem;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.people {\n  overflow-y: auto;\n}\n\n@media screen and (max-width: 600px) {\n  #friendlists {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: none;\n  }\n\n  #add-options {\n    left: -6rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"presets-list\">\n    <div\n      v-for=\"(message, index) of presetMessages\"\n      :key=\"index\"\n      class=\"preset-message\"\n    >\n      <div class=\"preset-message-block\">\n        <div\n          class=\"message-avatar\"\n          @mouseover=\"hoveredIndex = index\"\n          @mouseleave=\"hoveredIndex = null\"\n        >\n          <div v-if=\"hoveredIndex != index\" class=\"avatar-emoji\">\n            {{ getMessageAvatar(message.role) }}\n          </div>\n          <div\n            v-else\n            title=\"删除消息\"\n            class=\"avatar-emoji hovered\"\n            @click=\"delPresetMessage\"\n          >\n            🗑️\n          </div>\n        </div>\n        <div\n          :ref=\"`message-${index}`\"\n          class=\"message-content\"\n          contenteditable=\"true\"\n          @blur=\"handleMessageUpdate(index)\"\n        >\n          {{ presetMessages[index].content }}\n        </div>\n      </div>\n    </div>\n    <div class=\"messages-buttons\">\n      <el-button title=\"添加系统消息\" plain @click=\"addPresetMessage('system')\"\n        >➕ ⚙️</el-button\n      >\n      <el-button\n        title=\"添加助手消息\"\n        plain\n        @click=\"addPresetMessage('assistant')\"\n        >➕ 🤖</el-button\n      >\n      <el-button title=\"添加用户消息\" plain @click=\"addPresetMessage('user')\"\n        >➕ 👤</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    presetsHistory: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  emits: [\"updatePresets\"],\n  data() {\n    const presetMessages = [...this.presetsHistory];\n    return {\n      presetMessages,\n      hoveredIndex: undefined,\n    };\n  },\n  watch: {\n    presetsHistory(newVal) {\n      this.presetMessages = [...newVal];\n    },\n  },\n  methods: {\n    delPresetMessage() {\n      this.presetMessages.splice(this.hoveredIndex, 1);\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    addPresetMessage(role) {\n      if (role == \"system\" && this.presetMessages.length > 0) {\n        this.$message.warning(\"系统消息必须是第一条消息\");\n        return;\n      }\n      this.presetMessages.push({\n        role,\n        content: \"\",\n      });\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    getMessageAvatar(role) {\n      return role == \"assistant\" ? \"🤖\" : role == \"system\" ? \"⚙️\" : \"👤\";\n    },\n    handleMessageUpdate(index) {\n      this.presetMessages[index].content =\n        this.$refs[`message-${index}`][0].innerText;\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n  },\n};\n</script>\n<style scoped>\n.presets-list {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.messages-buttons {\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin: 0.5rem;\n}\n\n.preset-message {\n  width: 100%;\n}\n\n.preset-message-block {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0.5rem;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.preset-message-block .message-avatar {\n  flex-basis: 2rem;\n  font-size: 2rem;\n  border: 1px solid #ccc;\n  border-radius: 10%;\n}\n\n.message-avatar .hovered {\n  cursor: pointer;\n  box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.493); /* 内阴影 */\n}\n\n.preset-message-block .message-content {\n  margin-left: 0.5rem;\n  font-size: 0.8rem;\n  border: 1px solid #5a9cf8;\n  border-radius: 0.5rem;\n  flex-grow: 1;\n  max-height: 10rem;\n  overflow-y: auto;\n  padding: 0.5rem;\n  min-height: 2rem;\n}\n\n.message-content input {\n  width: 100%;\n  border: none;\n  outline: none;\n}\n</style>\n"],"names":["EventEmitter","constructor","this","events","on","eventName","listener","refresh","off","push","emit","data","forEach","numberString","length","result","characters","i","charAt","Math","floor","random","randomString","Socket","id","code","available","url","getURL","socket","requests","pendingRequests","Set","URL","window","location","href","host","initEventListeners","handleConnect","reason","handleDisconnect","error","handleConnectError","message","messageHandler","hasAttemptedPollingFallback","isAttemptingWebSocket","io","disconnect","setTimeout","_connectWithTransport","transports","path","auth","token","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","timeout","forceNew","connect","connected","e","JSON","parse","protocol","request_id","type","delete","sendMessage","Promise","reject","Error","has","add","stringify","resolve","fetch","pathArray","split","filter","Boolean","request","metaData","contactorId","timeOut","_","response","res","race","then","catch","finally","streamCompletions","Adapter","client","Onebot","convertMessage","element","index","base64Data","file","replace","messages","node","rplMessage","midMessage","role","time","Date","getTime","content","message_id","status","send","Openai","config","getMessagesSummary","messageChain","query","settings","getLLMDefaultConfig","base","stream","handleMessageEvent","chunk","messageId","emitEvent","detail","updateHandlers","reasoningContent","reasoning_content","toolCall","tool_call","handler","includes","complete","failed","AVATAR_BASE_PATH","AVATAR_MAP","OpenAI","Cohere","Anthropic","Google","DeepSeek","avatarPolicy","namePolicy","Contactor","EventEmmiter","platform","options","title","name","avatar","priority","firstMessageIndex","active","lastUpdate","now","createTime","lastMessageSummary","getLastMessageSummary","kernel","enableOpenaiListener","toJSON","rawMessage","getMessageById","existingReasonIndex","findIndex","msgElm","text","startTime","endTime","lastMsgElm","isFirstElement","concat","previousCall","find","updatedCall","action","parameters","indexOf","updateLastUpdate","errElem","some","elm","handleLLMMessageEvent","_getFilePrompt","fileElms","join","_getValidOpenaiMessage","start","end","max_messages_num","mergedMessages","slice","msg","map","fileList","subArray","formatedMsg","_content_type","tool_calls","function","arguments","tool_call_id","textElm","finalMessages","imageElm","fileElm","filePrompt","image_url","presetHistory","presetSettings","history","updateMessageSummary","webSend","revMessage","retryMessage","webMessage","delMessage","acting","splice","makeSystemMessage","container","getLastTime","last","currentTime","lastTime","timeDiff","toinit","getHours","toString","padStart","getMinutes","getDay","getFullYear","getMonth","getDate","getShownTime","timestamp","weekdays","weekday","hours","minutes","getMessageText","updateFirstMessage","loadAvatar","model","getAvatarByModel","loadName","modelOwner","getModelOwner","Object","keys","localforage","TOOL_CALL_MODEDS","AUTO","ANY","NONE","GEMINI_SAFETY_BLOCK_SETTINGS","LOW","MEDIUM","HIGH","DEFAULT","GEMINI_SAFETY_SETTINGS_TYPE","HARASSMENT","HATE_SPEECH","SEXUALLY_EXPLICIT","DANGEROUS_CONTENT","CIVIC_INTEGRITY","CONFIG_KEY","localPresets","toolsConfig","llmTools","onebotConfig","llmModels","safetyConfig","baseConfig","LLMDefaultConfig","_loadStrogeConfig","initLLMDefaultConfig","loadllmTools","loadonebotConfig","_setLocalStorage","key","localStorage","setItem","_getLocalStorage","storedValue","getItem","_saveStrogeConfig","configToSave","assign","getLLMProviders","llm_providers","provider","value","label","setBaseConfig","default_model","defaultProvider","updateLLMDefaultConfig","baseConfigCallback","setBaseConfigCallback","callback","updateBaseConfig","patch","displayConfig","getToolCallModes","values","getBaseConfig","getDefaultModel","setLlmModels","models","getLlmModels","getDefaultLLMModel","getSafetySettingsParams","isModelAvailable","modelGroup","group","owner","initSafetyConfig","init","hasIncrorectKeys","hasIncrorectValues","safetySettings","setSafetyConfig","getSafetyConfig","chatParams","temperature","top_p","frequency_penalty","presence_penalty","toolCallSettings","mode","tools","opening","copiedConfig","json","onebotOptionsData","onebotOptionsJson","inited","isConnected","contactList","qq","bot_qq","onPhone","setLocalStorage","debounce","bind","preInit","localBaseInfo","loadOriginBaseInfo","loadBaseInfo","localStroge","getLocalStorage","loadLocalStorage","genDefaultConctor","info","onebot_enabled","genFakeId","addConcator","allTools","bot","reactive","rmContactor","list","item","loadOriginalContactors","shareId","contactor","getContactor","shareContactor","uploadResult","setOriginalContactor","previewImage","shareUrl","originalUrl","document","origin","clipboard","navigator","writeText","body","method","headers","reset","clear","resetCache","serviceWorker","controller","messageChannel","MessageChannel","port1","onmessage","event","onerror","postMessage","port2","registrations","getRegistrations","registration","unregister","everLogin","setEverLogin","login","getContactors","onebotId","subRandomNum","parseInt","randomNum","async","addMsgListener","onebotContactors","onebotContactor","logout","admin_qq","uploadFile","fileOrImage","isImage","onProgress","startsWith","uploadImage","chunkSize","md5Hash","uploadChunk","totalChunks","formData","FormData","append","xhr","XMLHttpRequest","open","upload","onprogress","lengthComputable","chunkProgress","loaded","total","overallProgress","round","onload","statusText","uploadFileChunks","ceil","size","currentChunk","min","md5","filename","ok","finalizeUpload","worker","UploadWorker","hash","terminate","_convertBlobToBase64","blob","reader","FileReader","onloadend","readAsDataURL","PageStatus","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_5","_hoisted_6","processedImage","activePage","computed","isChatActive","isProfileActive","watch","$route","newRoute","getPageStatusFromRoute","immediate","mounted","adminId","methods","imageUrl","canvas","createElement","ctx","getContext","img","Image","src","width","height","drawImage","centerX","centerY","radius","beginPath","arc","PI","clip","clearRect","toBlob","createObjectURL","toChat","$router","toProfile","toConfig","adminAvatar","processImage","route","_openBlock","_createElementBlock","_createElementVNode","$data","alt","_hoisted_4","_normalizeClass","$options","onClick","args","target","props","fullScreen","default","emits","preview","created","URLSearchParams","search","get","waiting","$message","configFullScreen","$emit","$props","$event","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","components","MdPreview","Array","showBox","innerWidth","_Fragment","_cache","_renderList","_toDisplayString","_createBlock","_component_MdPreview","_createCommentVNode","_component_el_image","style","margin","fit","_hoisted_13","activeContactor","required","userInput","selectedOption","cursorPosition","showemoji","openaiModels","onebotPresets","uploaded","files","images","isPasting","extraOptions","loadSelected","textareaRef","$refs","textarea","addEventListener","adjustTextareaHeight","handleDragOver","preventDefault","backgroundColor","handleDragLeave","handleDrop","dataTransfer","handleDroppedFile","handlePaste","items","clipboardData","getAsFile","handleUploadImage","originalEvent","getData","execCommand","innerText","textwraper","unmounted","removeEventListener","unsupportedTip","warning","ctrlEmojiPanel","focus","File","handleFileUpload","fileInput","accept","format","handleChange","click","uploadDocumentFile","success","maxSizeByte","maxSizeMB","fileType","toLowerCase","insertImageToTextarea","mimeType","quality","imageName","imageElement","maxWidth","maxHeight","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","fragment","createContextualFragment","outerHTML","insertNode","newRange","newSelection","initLLMExtraOptions","allModels","entries","children","getOpenaiModelArray","wrapText","rawText","preset","getOnebotPreset","reduce","acc","child","scrollHeight","getWraperName","getemoji","inputer","sel","unicode","startPos","endPos","textBeforeCursor","substring","textAfterCursor","innerHTML","setStart","firstChild","setEnd","updateCursorPosition","rangeCount","getRangeAt","startOffset","endOffset","presend","querySelectorAll","ImageSrcs","from","getSafeText","wrappedMessage","imgUrl","unshift","repliedMessageId","replyData","cleanScreen","currentChange","level","parent","selectedValues","seletedProvider","isValidInput","input","trim","handleKeyDown","ctrlKey","handleInput","ref","onEmojiClick","_withModifiers","_createVNode","_component_el_tree_select","modelValue","accordion","placement","onNodeClick","_ctx","_component_el_popconfirm","onConfirm","reference","contenteditable","placeholder","onKeydown","onInput","disabled","fileUrl","String","file_name","file_type","formated_file_size","iconClass","params","bits","formatFileSize","unitIndex","toFixed","toUpperCase","_hoisted_14","showExtraInfo","toolCallSuccess","toolCallFail","call_status","viewBox","xmlns","points","t","version","d","Number","show","getReasonInfo","updateMaxHeight","updated","toggleShow","reasonContent","_normalizeStyle","seletedText","seletedImage","copySeletedImage","copyImageToClipboard","saveSeletedImage","downloadImage","copyText","copyTextToClipboard","copySeletedText","replyMessage","deleteMessage","enterChat","togglePriority","shareBot","deleteBot","position","left","appendChild","select","setSelectionRange","err","removeChild","imgSrc","pngBlob","ClipboardItem","write","revokeObjectURL","link","download","_hoisted_15","_hoisted_16","AddContactor","presetsList","recommendPresets","recentPresets","systemPresets","searchPresets","systemShownNum","recommendShownNum","keyWord","activeTypeIndex","buttonTranslate","avaliablePresetTypes","moreSystemPresets","moreRecommendPresets","observer","showPresetsLoader","shownPrestsList","getAddHistory","loadSpecificType","entry","isIntersecting","loadMoreData","IntersectionObserver","presetsLoader","loader","observe","handleScroll","beforeUnmount","addBot","strogeAddHistory","existingItem","pop","changeShownType","close","getPresetList","loadSystemPresets","loadRecommendedPresets","loadSerachPresets","load","searchTimer","clearTimeout","rect","getBoundingClientRect","top","bottom","innerHeight","documentElement","clientHeight","right","clientWidth","_component_el_button","_withCtx","_createTextVNode","_withDirectives","_hoisted_17","_hoisted_18","_component_el_empty","ContextMenu","contactorList","showAddOptions","showAddWindow","showMenu","menuX","menuY","selectedFriend","sortedList","sort","a","b","avaliableProvideres","addReactiveListener","genBotByPreset","showChat","getId","genBotByProvider","blankConfig","startResize","isResizing","startX","clientX","startWidth","friendlists","offsetWidth","resize","stopResize","newWidth","remSize","fontSize","parseFloat","minWidth","randomNumStr","manageAddMenu","mergeOptions","defaultOptions","addPresetContactor","showFriendContextMenu","friend","clientY","closeMenu","handleFriendOption","option","c","$forceUpdate","onContextmenu","onMousedown","_component_AddContactor","onClose","onAddBot","_component_ContextMenu","onMessageOption","presetsHistory","presetMessages","hoveredIndex","newVal","delPresetMessage","addPresetMessage","getMessageAvatar","handleMessageUpdate","onMouseover","onMouseleave","ref_for","onBlur","plain"],"mappings":"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"}