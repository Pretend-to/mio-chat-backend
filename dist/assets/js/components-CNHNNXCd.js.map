{"version":3,"file":"components-CNHNNXCd.js","sources":["../../../src/lib/event.js","../../../src/utils/generate.js","../../../src/lib/retry-manager.js","../../../src/lib/websocket.js","../../../src/lib/adapter/adapter.js","../../../src/lib/adapter/onebot.js","../../../src/lib/adapter/openai.js","../../../src/lib/contactor.js","../../../src/lib/client.js","../../../src/lib/runtime.js","../../../src/lib/config.js","../../../src/components/SideBar.vue","../../../src/components/DisplayButtons.vue","../../../src/components/ForwardMsg.vue","../../../src/components/InputEditor.vue","../../../src/components/FileBlock.vue","../../../src/components/ToolCallBar.vue","../../../src/components/ReasonBlock.vue","../../../src/components/ContextMenu.vue","../../../src/components/AddContactor.vue","../../../src/components/FriendList.vue","../../../src/components/PresetsList.vue"],"sourcesContent":["export default class EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n  on(eventName, listener, refresh = true) {\n    // 如果 refresh 为真，删除之前的回调函数\n    if (refresh) {\n      this.off(eventName);\n    }\n    // 如果事件名不存在，则初始化为一个空数组\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n    // 添加新的回调函数到数组中\n    this.events[eventName].push(listener);\n  }\n  emit(eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach((listener) => {\n        listener(data);\n      });\n    }\n  }\n  off(eventName) {\n    if (this.events[eventName]) {\n      delete this.events[eventName];\n    }\n  }\n}\n","export function uuidString() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function numberString(length) {\n  let result = \"\";\n  const characters = \"0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function randomString(length) {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","/**\n * 重试管理器类\n * 实现指数退避算法的重连机制\n */\nexport default class RetryManager {\n  constructor(options = {}) {\n    this.maxRetries = options.maxRetries || 10;\n    this.baseDelay = options.baseDelay || 1000;\n    this.maxDelay = options.maxDelay || 30000;\n    this.retryCount = 0;\n    this.timer = null;\n  }\n\n  /**\n   * 计算下一次重试的延迟时间\n   * @returns {number} 延迟时间（毫秒）\n   */\n  getNextDelay() {\n    const delay = Math.min(\n      this.maxDelay,\n      this.baseDelay * Math.pow(2, this.retryCount),\n    );\n    return delay + Math.random() * 1000; // 添加随机抖动\n  }\n\n  /**\n   * 重置重试计数器\n   */\n  reset() {\n    this.retryCount = 0;\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n\n  /**\n   * 检查是否可以继续重试\n   * @returns {boolean} 是否可以继续重试\n   */\n  canRetry() {\n    return this.retryCount < this.maxRetries;\n  }\n\n  /**\n   * 执行重试操作\n   * @param {Function} retryFn 重试函数\n   * @returns {Promise} 重试操作的Promise\n   */\n  async retry(retryFn) {\n    if (!this.canRetry()) {\n      throw new Error(\"已达到最大重试次数\");\n    }\n\n    const delay = this.getNextDelay();\n    this.retryCount++;\n\n    await new Promise((resolve) => {\n      this.timer = setTimeout(resolve, delay);\n    });\n\n    return retryFn();\n  }\n}\n","import EventEmitter from \"./event.js\";\nimport { randomString } from \"../utils/generate.js\";\nimport RetryManager from \"./retry-manager.js\";\n\n/**\n * WebSocket Connection Class\n * 处理WebSocket连接、消息收发、心跳检测和断线重连\n */\nexport default class Socket extends EventEmitter {\n  /**\n   * 创建Socket实例\n   * @param {String} id - 机器人QQ号\n   * @param {String} code - 登录令牌\n   */\n  constructor(id, code) {\n    super();\n    this.available = null;\n    this.url = this.getURL();\n    this.socket = null;\n    this.code = code;\n    this.id = id;\n    this.requests = [];\n    this.heartBeat = null;\n    this.delay = null;\n    this.retryManager = new RetryManager({\n      maxRetries: 10,\n      baseDelay: 1000,\n      maxDelay: 30000,\n    });\n    this.connectionState = \"disconnected\";\n    this.hasSuccessfulWebSocket = false;\n  }\n\n  /**\n   * 获取WebSocket URL\n   * @returns {String} WebSocket URL\n   */\n  getURL() {\n    const url = new URL(window.location.href);\n    return url.host;\n  }\n\n  /**\n   * 初始化WebSocket事件监听器\n   */\n  initEventListeners() {\n    this.socket.on(\"connect\", () => this.handleConnect());\n    this.socket.on(\"disconnect\", () => this.handleDisconnect());\n    this.socket.on(\"connect_error\", (error) => this.handleConnectError(error));\n    this.socket.on(\"message\", (message) => this.messageHandler(message));\n  }\n\n  /**\n   * 处理连接成功事件\n   */\n  handleConnect() {\n    this.available = true;\n    this.connectionState = \"connected\";\n    if (this.socket?.io?.engine?.transport?.name === \"websocket\") {\n      this.hasSuccessfulWebSocket = true;\n    }\n    this.retryManager.reset();\n    console.log(\"SocketIO连接成功\");\n    this.startHeartbeat();\n  }\n\n  /**\n   * 处理断开连接事件\n   */\n  handleDisconnect() {\n    this.available = false;\n    this.connectionState = \"disconnected\";\n    this.stopHeartbeat();\n    console.error(\"SocketIO连接断开\");\n    this.attemptReconnect();\n  }\n\n  /**\n   * 处理连接错误事件\n   */\n  handleConnectError(error) {\n    console.error(\"SocketIO连接出错\", error);\n    if (this.socket?.io?.engine?.transport?.name === \"websocket\") {\n      if (!this.hasSuccessfulWebSocket) {\n        this.switchToPolling();\n      } else {\n        console.log(\"之前WebSocket连接成功过，继续尝试WebSocket重连\");\n        this.attemptReconnect();\n      }\n    } else {\n      this.connectionState = \"failed\";\n      console.log(\"已经在轮询模式，放弃重连\");\n      this.disconnect();\n    }\n  }\n\n  /**\n   * 切换到轮询模式\n   */\n  switchToPolling() {\n    console.log(\"WebSocket 连接失败，切换到轮询模式...\");\n    this.disconnect();\n    const socket = io(this.url, {\n      path: \"/socket.io\",\n      transports: [\"polling\"],\n      auth: { id: this.id, token: this.code },\n    });\n    this.socket = socket;\n    this.initEventListeners();\n  }\n\n  /**\n   * 尝试重新连接\n   */\n  async attemptReconnect() {\n    if (this.connectionState === \"reconnecting\") return;\n    this.connectionState = \"reconnecting\";\n\n    try {\n      await this.retryManager.retry(() => this.connect());\n    } catch (error) {\n      console.error(\"重连失败，已达到最大重试次数\", error);\n      this.connectionState = \"failed\";\n      this.emit(\"reconnect_failed\");\n    }\n  }\n\n  /**\n   * 连接到SocketIO服务器\n   */\n  async connect() {\n    this.socket = io(this.url, {\n      path: \"/socket.io\",\n      transports: [\"websocket\", \"polling\"],\n      auth: { id: this.id, token: this.code },\n      reconnectionAttempts: 0, // 禁用socket.io的自动重连，使用我们自己的重连机制\n    });\n    console.log(\"SocketIO连接中...\");\n    this.initEventListeners();\n  }\n\n  /**\n   * 启动心跳检测\n   */\n  startHeartbeat() {\n    this.heartBeat = setInterval(async () => {\n      if (this.socket?.connected) {\n        try {\n          const res = await this.fetch(\"/api/system/heartbeat\", {\n            timestamp: Date.now(),\n          });\n          this.updateDelay(res);\n        } catch (error) {\n          if (this.connectionState === \"failed\") {\n            console.error(\"心跳检测失败\", error);\n          }\n        }\n      }\n    }, 3000);\n  }\n\n  /**\n   * 更新延迟信息\n   */\n  updateDelay(res) {\n    const serverRevTime = res.revTime;\n    const currentTime = Date.now();\n    const delayTo = res.delay;\n    const delayBack = currentTime - serverRevTime;\n    this.delay = delayTo + delayBack;\n  }\n\n  /**\n   * 停止心跳检测\n   */\n  stopHeartbeat() {\n    if (this.heartBeat) {\n      clearInterval(this.heartBeat);\n      this.heartBeat = null;\n    }\n  }\n\n  /**\n   * 断开WebSocket连接\n   */\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n      this.available = false;\n      this.stopHeartbeat();\n      console.log(\"WebSocket连接已断开\");\n    }\n  }\n\n  /**\n   * 处理接收到的消息\n   * @param {String} message - 接收到的消息\n   */\n  messageHandler(message) {\n    try {\n      const e = JSON.parse(message);\n      if (e.protocol === \"llm\") {\n        this.emit(e.request_id, e);\n      }\n      if (e.protocol === \"onebot\") {\n        this.emit(\"onebot_message\", e);\n      } else if (e.protocol === \"system\") {\n        if (e.type === \"login\") this.emit(\"connect\", e.data);\n        this.emit(\"system_message\", e);\n      }\n    } catch (error) {\n      console.error(\"JSON解析失败:\", error);\n    }\n  }\n\n  /**\n   * 发送消息\n   * @param {Object} message - 要发送的消息对象\n   */\n  sendMessage(message) {\n    if (this.available) {\n      this.socket.emit(\"message\", JSON.stringify(message));\n    } else {\n      console.log(\"SocketIO 连接不可用\");\n    }\n  }\n\n  /**\n   * 发送请求并等待响应\n   * @param {String} url - API端点\n   * @param {Object} data - 请求数据\n   * @returns {Promise<any>} 响应数据\n   */\n  fetch(url, data) {\n    return new Promise((resolve, reject) => {\n      const pathArray = url.split(\"/\").filter(Boolean);\n      const request = {\n        request_id: randomString(16),\n        protocol: pathArray[1],\n        type: pathArray[2],\n        id: pathArray[3],\n        data: data,\n      };\n\n      this.requests.push(request.request_id);\n\n      const timeOut = new Promise((_, reject) => {\n        setTimeout(() => reject(\"timeout\"), 60000);\n      });\n\n      const response = new Promise((resolve) => {\n        this.on(request.request_id, (res) => {\n          this.requests.splice(this.requests.indexOf(request.request_id), 1);\n          resolve(res.data);\n        });\n      });\n\n      Promise.race([timeOut, response]).then(resolve).catch(reject);\n\n      this.sendMessage(request);\n      if (request.type !== \"heartbeat\") {\n        console.log(\"WebSocket发送请求\", url, request);\n      }\n    });\n  }\n\n  /**\n   * 流式获取补全数据\n   * @param {Object} data - 补全请求数据\n   * @returns {AsyncGenerator<any>} - 补全数据生成器\n   */\n  async *streamCompletions(data) {\n    console.log(\"WebSocket开始流式获取补全数据\");\n    const request = {\n      request_id: randomString(16),\n      protocol: \"llm\",\n      type: \"completions\",\n      data: data,\n    };\n\n    this.requests.push(request.request_id);\n    this.sendMessage(request);\n    console.log(\"WebSocket发送请求\", request);\n\n    try {\n      while (true) {\n        const chunk = await new Promise((resolve, reject) => {\n          this.on(request.request_id, (data) => {\n            if (data.message === \"update\") {\n              resolve(data);\n            } else if (\n              data.message === \"complete\" ||\n              data.message === \"failed\"\n            ) {\n              this.off(request.request_id);\n              reject({ done: true, data: data });\n            }\n          });\n        });\n        yield chunk;\n      }\n    } catch (e) {\n      if (e.done) {\n        console.log(\"WebSocket流式获取补全数据结束\", e.data.message);\n        yield e.data;\n        return;\n      }\n      throw e;\n    }\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport EventEmitter from \"../event.js\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default class Adapter extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  async fetch(url, data) {\n    return await client.socket.fetch(url, data);\n  }\n}\n","import Adapter from \"./adapter.js\";\n\nexport default class Onebot extends Adapter {\n  constructor() {\n    super();\n  }\n\n  convertMessage(data) {\n    console.log(data);\n    data.message.forEach((element, index) => {\n      if (element.type === \"image\") {\n        const base64Data = element.data.file.replace(\n          /^base64:\\/\\//,\n          \"data:image/jpeg;base64,\",\n        );\n        data.message[index].data.file = base64Data;\n        console.log(data.message[index]);\n      } else if (element.type === \"nodes\") {\n        element.data.messages.forEach((node) => {\n          if (node.type === \"image\") {\n            const base64Data = node.data.file.replace(\n              /^base64:\\/\\//,\n              \"data:image/jpeg;base64,\",\n            );\n            node.data.file = base64Data;\n          }\n        });\n      }\n    });\n\n    const rplMessage = data.message.filter(\n      (element) => element.type === \"reply\",\n    );\n    const midMessage = data.message.filter(\n      (element) => element.type !== \"reply\",\n    );\n    if (rplMessage.length > 0) {\n      midMessage.push(rplMessage[0]);\n    }\n\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: midMessage,\n      id: data.message_id,\n      status: \"completed\",\n    };\n    return webMessage;\n  }\n\n  /**\n   * Send message to server\n   * @param {id} string\n   * @param {WebMessage} message\n   * @returns {Promise<number>} message_id\n   */\n  async send(id, message) {\n    const response = await this.fetch(\n      \"/api/onebot/message\" + `/${id}`,\n      message,\n    );\n    return response.message_id;\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Adapter from \"./adapter.js\";\nimport { client, config } from \"../runtime.js\";\nimport { numberString } from \"../../utils/generate.js\";\n\nexport default class Openai extends Adapter {\n  constructor(config) {\n    super();\n    this.settings = config.settings || {};\n  }\n\n  convertMessage(message) {\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: [{ type: \"blank\", data: {} }],\n      status: \"pending\",\n      id: numberString(16),\n    };\n    const mergedMessage = { ...webMessage, ...message };\n    return mergedMessage;\n  }\n\n  async getMessagesSummary(messageChain) {\n    const query = `请你根据以下对话的内容\\n${JSON.stringify(messageChain)}\\n，总结出一个简短的对话主题,不得超出10个字。`;\n    const messages = {\n      model: config.openaiDefaultConfig.model,\n      messages: [{ role: \"user\", content: query }],\n    };\n\n    const response = await this.fetch(`/api/llm/completions`, messages);\n    const { chunk } = response;\n    return chunk;\n  }\n\n  async send(messages, messageId, settings) {\n    console.log(\"send message to openai\");\n\n    const emitEvent = (eventName, detail) => {\n      this.emit(eventName, { ...detail, messageId });\n    };\n\n    const handleUpdateChunk = (chunk) => {\n      const updateHandlers = {\n        reasoningContent: (content) =>\n          emitEvent(\"updateReasoning\", { reasoning_content: content }),\n        content: (content) => emitEvent(\"updateMessage\", { chunk: content }),\n        toolCall: (tool_call) => emitEvent(\"updateToolCall\", { tool_call }),\n      };\n\n      const data = chunk.data;\n      const handler = updateHandlers[data.type];\n      if (handler) {\n        handler(data.content);\n      }\n    };\n\n    const handleCompletionChunk = (chunk) => {\n      const completionHandlers = {\n        complete: () => emitEvent(\"completeMessage\", {}),\n        failed: () => emitEvent(\"failedMessage\", { error: chunk.data }),\n      };\n\n      const handler = completionHandlers[chunk.message];\n      if (handler) {\n        handler();\n      }\n    };\n\n    const filterValidSettings = (settings) => {\n      const validSettingKeys = [\n        \"top_p\",\n        \"temperature\",\n        \"stream\",\n        \"model\",\n        \"frequency_penalty\",\n        \"presence_penalty\",\n      ];\n\n      const extraSettingKeys = [\"tools\", \"provider\"];\n\n      return settings\n        ? Object.fromEntries(\n            Object.entries(settings).filter(\n              ([key]) =>\n                validSettingKeys.includes(key) ||\n                extraSettingKeys.includes(key),\n            ),\n          )\n        : {};\n    };\n\n    try {\n      // Apply settings defaults\n      const data = {\n        ...filterValidSettings(settings || {}), // Default to empty object\n        messages,\n      };\n\n      if (!settings?.enable_tool_call) {\n        // Use optional chaining\n        data.tools = [];\n      }\n\n      console.log(\"Data sent to OpenAI:\", data);\n\n      for await (const chunk of client.socket.streamCompletions(data)) {\n        console.log(\"Received chunk from OpenAI:\", chunk);\n        if (chunk.message === \"update\") {\n          handleUpdateChunk(chunk);\n        } else if ([\"complete\", \"failed\"].includes(chunk.message)) {\n          handleCompletionChunk(chunk);\n          break;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error in send:\", error);\n      emitEvent(\"failedMessage\", { error: \"Stream processing error\" });\n    }\n  }\n\n  updateSettings(settings) {\n    this.settings = settings;\n  }\n}\n","import Onebot from \"./adapter/onebot.js\";\nimport Openai from \"./adapter/openai.js\";\nimport EventEmmiter from \"./event.js\";\nimport { numberString } from \"../utils/generate.js\";\nimport { config } from \"@/lib/runtime.js\";\nimport { reactive } from \"vue\";\n\nconst AVATAR_BASE_PATH =\n  \"https://registry.npmmirror.com/@lobehub/icons-static-svg/latest/files/icons\";\n\nconst AVATAR_MAP = {\n  OpenAI: \"openai.svg\",\n  Cohere: \"cohere-color.svg\",\n  Anthropic: \"claude-color.svg\",\n  Google: \"gemini-color.svg\",\n  \"X.AI\": \"grok.svg\",\n  DeepSeek: \"deepseek-color.svg\",\n  智谱清言: \"zhipu-color.svg\",\n  豆包: \"doubao-color.svg\",\n  \"月之暗面 (kimi)\": \"moonshot.svg\",\n  科大讯飞: \"spark-color.svg\",\n  通义千问: \"qwen-color.svg\",\n  腾讯混元: \"hunyuan-color.svg\",\n};\n\nconst avatarPolicy = [\"MODEL\", \"CUSTOM\"];\n\nconst namePolicy = [\"MODEL\", \"CUSTOM\", \"SUMMARY\"];\n\nexport default class Contactor extends EventEmmiter {\n  /**\n   * Constructor of Contactor class\n   * @param {string} platform - Platform of contactor\n   * @param {object} config - Configuration of contactor\n   * @param {string} config.id - ID of the contactor\n   * @param {string} config.name - Name of the contactor\n   * @param {string} config.avatar - Avatar of the contactor\n   * @param {string} config.title - Title of the contactor\n   * @param {object} config.options - Options of the contactor\n   * @param {number} config.priority - Priority of the contactor,from 0 to 1, 0 means highest priority\n   */\n  constructor(platform, config) {\n    super();\n    this.platform = platform;\n    this.id = config.id;\n    this.options = config.options;\n    this.namePolicy = config.namePolicy || 0;\n    this.avatarPolicy = config.avatarPolicy || 0;\n    this.title = config.title;\n    this.name = config.name;\n    this.avatar = config.avatar;\n    this.priority = config.priority;\n    this.firstMessageIndex = 0;\n    this.messageChain = config.messageChain || [];\n    this.active = false;\n    this.lastUpdate = config.lastUpdate || new Date().getTime();\n    this.createTime = config.createTime || new Date().getTime();\n    this.lastMessageSummary = this.getLastMessageSummary();\n\n    this.kernel =\n      this.platform == \"onebot\" ? new Onebot(config) : new Openai(config);\n\n    if (this.platform == \"openai\") this.enableOpenaiListener();\n\n    // 使对象具有响应性\n    return reactive(this);\n  }\n\n  enableOpenaiListener() {\n    this.kernel.on(\"updateReasoning\", (e) => {\n      const { reasoning_content, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      // 查找现有的 reason 块\n      const existingReasonIndex = rawMessage.content.findIndex(\n        (msgElm) => msgElm.type === \"reason\",\n      );\n\n      const msgElm = {\n        type: \"reason\",\n        data: {\n          text: reasoning_content,\n          startTime: new Date().getTime(),\n          endTime: 0,\n        },\n      };\n\n      if (existingReasonIndex !== -1) {\n        // 如果已存在 reason 块，更新其内容\n        msgElm.data.text =\n          rawMessage.content[existingReasonIndex].data.text + reasoning_content;\n        msgElm.data.startTime =\n          rawMessage.content[existingReasonIndex].data.startTime;\n        rawMessage.content[existingReasonIndex] = msgElm;\n      } else if (rawMessage.content[0].type === \"blank\") {\n        // 如果是 blank 状态，直接更新第一个元素\n        rawMessage.content[0] = msgElm;\n      } else {\n        // 其他情况，追加到末尾\n        rawMessage.content.push(msgElm);\n      }\n\n      this.emit(\"updateMessage\");\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateMessage\", (e) => {\n      const { chunk, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      rawMessage.content.forEach((msgElm) => {\n        if (msgElm.type == \"reason\" && !msgElm.data.endTime)\n          msgElm.data.endTime = new Date().getTime();\n      });\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const isFirstElement = [\"blank\", \"text\"].includes(lastMsgElm.type);\n\n      const msgElm = {\n        type: \"text\",\n        data: {\n          text: (lastMsgElm.type == \"text\" ? lastMsgElm.data.text : \"\").concat(\n            chunk,\n          ),\n        },\n      };\n\n      if (isFirstElement)\n        rawMessage.content[rawMessage.content.length - 1] = msgElm;\n      else rawMessage.content.push(msgElm);\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateToolCall\", (e) => {\n      const { tool_call, messageId } = e;\n      console.log(tool_call);\n\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const msgElm = {\n        type: \"tool_call\",\n        data: tool_call,\n      };\n\n      if (lastMsgElm.type == \"blank\") {\n        // 这种情况一定是第一条空白消息，直接更新成 toolCall 消息\n        rawMessage.content[0] = msgElm;\n      } else {\n        const previousCall = rawMessage.content.find(\n          (msgElm) => msgElm.data.id == tool_call.id,\n        );\n        if (previousCall) {\n          // 这种情况就是更新之前的 toolCall 消息\n          previousCall.data = tool_call;\n          if (tool_call.action == \"pending\") {\n            previousCall.data.params += tool_call.params;\n          }\n        } else {\n          // 这种情况就是新增一条 toolCall 消息\n          rawMessage.content.push(msgElm);\n        }\n      }\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"completeMessage\", (e) => {\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          messageId,\n        });\n      }\n    });\n\n    this.kernel.on(\"failedMessage\", (e) => {\n      console.error(e);\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          text: \"请求发生错误！\\n```json\\n\" + e.error + \"\\n```\\n\",\n          messageId,\n          error: true,\n        });\n      }\n    });\n  }\n\n  /**\n   * Send message to contactor\n   * @param {OnebotMessage} message\n   */\n  async send(message) {\n    await this.kernel.send(message);\n  }\n\n  _getFilePrompt(fileElms) {\n    const start = \"以下是用户上传的文件：\\n\";\n    return start + fileElms.join(\"\\n\");\n  }\n\n  _getValidOpenaiMessage(\n    start = this.firstMessageIndex,\n    end = this.messageChain.length,\n    length = this.options.max_messages_num,\n  ) {\n    const cuttedMessageList = this.messageChain\n      .slice(start, end)\n      .slice(-length);\n\n    const validMessageList = cuttedMessageList.filter(\n      (msg) => msg.role != \"mio_system\",\n    );\n\n    const mergedMessages = validMessageList.map((message) => {\n      const fileList = [];\n      const subArray = [];\n      message.content.forEach((elm) => {\n        const role =\n          elm.type == \"tool_call\"\n            ? \"tool\"\n            : message.role == \"user\"\n              ? \"user\"\n              : \"assistant\";\n        const formatedMsg = {\n          role: role,\n          content: \"none\",\n          _content_type: undefined,\n        };\n        if (role == \"tool\") {\n          formatedMsg.role = \"assistant\";\n          formatedMsg.content = null;\n          formatedMsg.tool_calls = [\n            {\n              id: elm.data.id,\n              function: {\n                name: elm.data.name,\n                arguments: elm.data.params,\n              },\n              type: \"function\",\n            },\n          ];\n          subArray.push({ ...formatedMsg });\n\n          delete formatedMsg.tool_calls;\n          formatedMsg.role = \"tool\";\n          formatedMsg.content = JSON.stringify(elm.data.result);\n          formatedMsg.tool_call_id = elm.data.id;\n          subArray.push({ ...formatedMsg });\n\n          formatedMsg.role = role;\n        } else if (role == \"user\" || role == \"assistant\") {\n          if (elm.type == \"text\") {\n            formatedMsg.content = elm.data.text;\n            formatedMsg._content_type = \"text\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"image\") {\n            formatedMsg.content = elm.data.file;\n            formatedMsg._content_type = \"image\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"file\") {\n            fileList.push(elm.data.file);\n          }\n        }\n      });\n      if (fileList.length > 0) {\n        const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n        textElm[0].content = textElm[0].content + this._getFilePrompt(fileList);\n      }\n      return subArray;\n    });\n    let finalMessages = [];\n\n    mergedMessages.forEach((subArray) => {\n      const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n      const imageElm = subArray.filter((elm) => elm._content_type == \"image\");\n      const fileElm = subArray.filter((elm) => elm._content_type == \"file\");\n      const filePrompt = fileElm.length > 0 ? this._getFilePrompt(fileElm) : \"\";\n      let message = null;\n      if (\n        textElm.length > 0 &&\n        imageElm.length > 0 &&\n        imageElm[0].role == \"user\"\n      ) {\n        message = {\n          role: \"user\",\n          content: [\n            ...textElm.map((elm) => {\n              return {\n                type: \"text\",\n                text: elm.content + filePrompt,\n              };\n            }),\n            ...imageElm.map((elm) => {\n              return {\n                type: \"image_url\",\n                image_url: {\n                  url: elm.content,\n                },\n              };\n            }),\n          ],\n        };\n      }\n      if (message?.content.length == subArray.length) {\n        finalMessages.push(message);\n      } else {\n        subArray.forEach((elm) => {\n          delete elm._content_type;\n        });\n        finalMessages.push(...subArray);\n      }\n    });\n\n    if (this.options.history) {\n      finalMessages = this.options.history.concat(finalMessages);\n    }\n\n    return finalMessages;\n  }\n  updateMessageSummary() {\n    this.lastMessageSummary = this.getLastMessageSummary();\n  }\n\n  /**\n   * 从网页前端发来的消息\n   */\n  async webSend(message) {\n    this.updateLastUpdate();\n    this.messageChain.push(message);\n    this.updateMessageSummary();\n    if (this.platform == \"onebot\") {\n      const messageId = await this.kernel.send(this.id, message.content);\n      return messageId;\n    } else {\n      // 截取从this.firstMessageIndex到结尾的消息\n      const finalMessages = this._getValidOpenaiMessage();\n\n      const messageId = numberString(16);\n\n      this.revMessage({\n        id: messageId,\n      });\n\n      this.kernel.send(finalMessages, messageId, this.options);\n      return numberString(16);\n    }\n  }\n\n  async retryMessage(id) {\n    const message = this.getMessageById(id);\n    if (message) {\n      message.content = [\n        {\n          type: \"blank\",\n        },\n      ];\n      this.updateLastUpdate();\n      const index = this.messageChain.indexOf(message);\n      const finalMessages = this._getValidOpenaiMessage(0, index);\n      this.kernel.send(finalMessages, id, this.options);\n      return true;\n    }\n  }\n\n  /**\n   * 接收到消息\n   * @param {string} id - ID of the contactor\n   * @param {object} message - Message received from contactor\n   */\n  revMessage(message) {\n    this.updateLastUpdate();\n\n    const webMessage = this.kernel.convertMessage(message);\n\n    if (!this.active) this.messageChain.push(webMessage);\n    else this.emit(\"revMessage\", webMessage);\n\n    this.emit(\"updateMessageSummary\");\n    return webMessage;\n  }\n\n  /**\n   * 删除消息\n   * @param {string} message_id - ID of the message to be deleted\n   * @returns {boolean} - Whether the message is successfully deleted\n   */\n  delMessage(message_id) {\n    for (let i = 0; i < this.messageChain.length; i++) {\n      if (this.messageChain[i].id === message_id) {\n        if (this.active) this.emit(\"delMessage\", i);\n        else this.acting.messageChain.splice(i, 1);\n        this.makeSystemMessage(`${this.name}撤回了一条消息`);\n        return true; // 删除成功\n      }\n    }\n    return false; // 没有找到要删除的消息\n  }\n\n  makeSystemMessage(text) {\n    const container = {\n      role: \"mio_system\",\n      time: new Date().getTime(),\n      id: new Date().getTime(),\n      content: [\n        {\n          type: \"text\",\n          data: {\n            text: text,\n          },\n        },\n      ],\n    };\n    if (this.active) this.emit(\"revMessage\", container);\n    else this.messageChain.push(container);\n  }\n\n  getLastTime() {\n    const last = this.messageChain[this.messageChain.length - 1];\n    if (!last) {\n      return \"\";\n    }\n\n    const currentTime = new Date().getTime();\n    const lastTime = new Date(last.time);\n    const timeDiff = currentTime - lastTime.getTime();\n\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      this.toinit = false;\n      // 小于24小时，返回 xx:xx (小时:分钟)\n      const hours = lastTime.getHours().toString().padStart(2, \"0\");\n      const minutes = lastTime.getMinutes().toString().padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天\n      return \"昨天\";\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = lastTime.getDay();\n      return `星期${weekdays[weekday]}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）\n      const year = lastTime.getFullYear();\n      const month = (lastTime.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = lastTime.getDate().toString().padStart(2, \"0\");\n      return `${year}/${month}/${day}`;\n    }\n  }\n\n  getShownTime(timestamp) {\n    const currentTime = new Date().getTime();\n    // 如果传入时间和当前时间差在24h以内，则显示时间\n\n    const timeDiff = currentTime - timestamp;\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天+时间\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `昨天${hours}:${minutes}`;\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x+时间\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = new Date(timestamp).getDay();\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `星期${weekdays[weekday]}${hours}:${minutes}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）+时间\n      const year = new Date(timestamp).getFullYear();\n      const month = (new Date(timestamp).getMonth() + 1)\n        .toString()\n        .padStart(2, \"0\");\n      const day = new Date(timestamp).getDate().toString().padStart(2, \"0\");\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${year}/${month}/${day} ${hours}:${minutes}`;\n    }\n  }\n\n  getLastMessageSummary(message) {\n    const getMessageText = (element) => {\n      switch (element.type) {\n        case \"text\":\n          return element.data.text;\n        case \"image\":\n          return \"[图片]\";\n        case \"record\":\n          return \"[语音]\";\n        case \"video\":\n          return \"[视频]\";\n        case \"file\":\n          return \"[文件]\";\n        case \"tool_call\":\n          return `[调用工具] ${element.data.name}`;\n        case \"reason\":\n          return element.data.text;\n        case \"blank\":\n          return \"正在思考中...\";\n        case \"reply\":\n          return \"\"; // 空字符串处理\n        case \"nodes\":\n          return \"[转发消息]\";\n        default:\n          return \"[未知消息类型] \" + element.type;\n      }\n    };\n\n    const msg = message || this.messageChain[this.messageChain.length - 1];\n    if (!msg) return \"\";\n    console.log(msg);\n\n    return getMessageText(msg.content ? msg.content[0] : msg);\n  }\n\n  updateFirstMessage() {\n    this.firstMessageIndex = this.messageChain.length;\n  }\n\n  updateLastUpdate() {\n    this.lastUpdate = new Date().getTime();\n  }\n\n  getMessageById(id) {\n    return this.messageChain.find((msg) => msg.id === id);\n  }\n\n  loadAvatar() {\n    let avatar = \"/static/avatar/miobot.png\";\n    if (avatarPolicy[this.avatarPolicy] == \"MODEL\") {\n      const model = this.options.model;\n      avatar = Contactor.getAvatarByModel(model);\n    } else if (avatarPolicy[this.avatarPolicy] == \"CUSTOM\") {\n      avatar = this.avatar;\n    }\n    this.avatar = avatar;\n    return avatar;\n  }\n\n  async loadName() {\n    let name = this.name ?? \"未命名 Bot\";\n    if (namePolicy[this.namePolicy] == \"MODEL\") {\n      const model = this.options.model;\n      name = model;\n    } else if (namePolicy[this.namePolicy] == \"CUSTOM\") {\n      name = this.name;\n    } else if (namePolicy[this.namePolicy] == \"SUMMARY\") {\n      if (this.messageChain.length < 2) {\n        name = \"新建的 Bot\";\n      } else if (\n        this.messageChain.length == 2 ||\n        this.messageChain.length % 6 == 0\n      ) {\n        name = await this.getMessagesSummary();\n      }\n    }\n    this.name = name;\n    return name;\n  }\n\n  getMessagesSummary() {\n    if (this.platform == \"openai\") {\n      return this.kernel.getMessagesSummary(\n        this._getValidOpenaiMessage().slice(-4),\n      );\n    } else {\n      return \"仅支持 OpenAI Chat Bot\";\n    }\n  }\n\n  static getAvatarByModel(model) {\n    const modelOwner = config.getOpenaiModelOwner(model);\n    if (Object.keys(AVATAR_MAP).includes(modelOwner)) {\n      return `${AVATAR_BASE_PATH}/${AVATAR_MAP[modelOwner]}`;\n    }\n\n    return `${AVATAR_BASE_PATH}/openai.svg`;\n  }\n}\n","import Socket from \"./websocket.js\";\nimport Contactor from \"./contactor.js\";\nimport localforage from \"localforage\";\nimport EventEmitter from \"./event.js\";\nimport { reactive } from \"vue\";\nimport UploadWorker from \"../worker/fileUpload.js?worker\";\n\n// Configure localforage\nlocalforage.config({\n  name: \"mio-chat\",\n});\n\nexport default class Client extends EventEmitter {\n  constructor(config) {\n    super();\n    this.inited = false;\n    this.everLogin = false; // Loaded from storage\n    this.id = null; // Loaded from storage\n    this.code = null; // Loaded from storage\n    this.isConnected = false; // Dynamic\n    this.contactList = []; // Loaded from storage\n    this.socket = null; // Dynamic\n    this.qq = null; // Web\n    this.bot_qq = null; // Web\n    this.avatar = null; // Web\n    this.onPhone = null; // Dynamic\n    this.title = \"Mio\"; // Fixed\n    this.name = \"user\"; // Fixed\n    this.displaySettings = null; // Web\n    this.config = config; // Parameter\n  }\n\n  /**\n   * Prepare initialization\n   * @returns {object} Initialization information\n   */\n  async beforeInit() {\n    this.setBaseInfo();\n    const localConfig = await this.getLocalStorage();\n    await this.config.loadOnebotDefaultConfig();\n\n    if (localConfig) {\n      localConfig.isConnected = false;\n      this.loadLocalStorage(localConfig);\n    } else {\n      // First-time user\n      this.id = this.genFakeId();\n      this.code = null;\n    }\n    this.inited = true;\n    this.emit(\"loaded\");\n  }\n\n  async genDefaultConctor() {\n    // Create default OneBot contactor\n    const onebotDefaultConfig = {\n      id: this.genFakeId(),\n      name: \"OneBot\",\n      namePolicy: 1,\n      avatarPolicy: 1,\n      avatar: `/api/qava?q=${this.bot_qq}`,\n      title: \"云崽\",\n      priority: 0,\n      options: this.config.onebotDefaultConfig,\n      lastUpdate: -Infinity,\n    };\n    this.addConcator(\"onebot\", onebotDefaultConfig);\n\n    // Update and create OpenAI contactor\n    this.config.updateOpenaiDefaultConfig({\n      model: this.default_model,\n    });\n\n    const openaiDefaultConfig = {\n      id: this.genFakeId(),\n      name: \"MioBot\",\n      avatar: \"/static/avatar/miobot.png\",\n      namePolicy: 1,\n      avatarPolicy: 1,\n      title: \"chat\",\n      priority: 0,\n      lastUpdate: -Infinity,\n      options: { ...this.config.openaiDefaultConfig },\n    };\n\n    openaiDefaultConfig.options.tools = this.config.openaiTools.map(\n      (tool) => tool.name,\n    );\n    openaiDefaultConfig.options.enable_tool_call = true;\n    this.addConcator(\"openai\", openaiDefaultConfig);\n  }\n\n  async addConcator(platform, config) {\n    const bot = new Contactor(platform, config);\n    bot.loadName();\n    bot.loadAvatar();\n\n    const list = reactive(this.contactList);\n    list.push(bot);\n    await this.setLocalStorage();\n    return bot;\n  }\n\n  rmContactor(id) {\n    const list = reactive(this.contactList);\n    const index = list.findIndex((item) => item.id == id);\n\n    if (index != -1) {\n      list.splice(index, 1);\n      this.setLocalStorage();\n    }\n  }\n\n  async loadOriginalContactors(shareId) {\n    const path = `/api/share?id=${shareId}`;\n    let contactor = null;\n    try {\n      const res = await fetch(path);\n      const data = await res.json();\n      if (data.code == 0) {\n        contactor = data.data.contactor;\n        // 检查是否已经存在\n        if (!this.getContactor(contactor.id)) {\n          this.addConcator(contactor.platform, contactor);\n        }\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Failed to load original contactors:\", error);\n      return false;\n    }\n  }\n\n  async shareContactor(id) {\n    const uploadResult = await this.setOriginalContactor(id);\n    if (uploadResult) {\n      const { previewImage, shareUrl } = uploadResult;\n      console.log(shareUrl);\n      console.log(previewImage);\n      // 拼接完整链接\n      const originalUrl = document.location.origin;\n      // 复制链接到剪贴板\n      const clipboard = navigator.clipboard;\n      if (clipboard) {\n        clipboard.writeText(originalUrl + shareUrl);\n      }\n      return uploadResult;\n    } else {\n      return null;\n    }\n  }\n\n  async setOriginalContactor(id) {\n    const path = `/api/share/set`;\n    const body = {\n      contactor: this.getContactor(id),\n    };\n    try {\n      const res = await fetch(path, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      const data = await res.json();\n      if (data.code == 0) {\n        return data.data;\n      }\n    } catch (error) {\n      console.error(\"Failed to set original contactor:\", error);\n      return null;\n    }\n  }\n\n  reset() {\n    localforage.clear();\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  async init() {\n    await this.beforeInit();\n    if (this.everLogin) {\n      console.log(\"Detected cache, attempting automatic reconnection\");\n      this.isConnected = false;\n      this.login(this.code);\n    } else {\n      console.log(\"Not logged in before, please login first\");\n    }\n  }\n\n  getContactors() {\n    return this.contactList;\n  }\n\n  getContactor(id, onebotId = null) {\n    if (onebotId) {\n      // TODO: 拓展 Onebot 协议功能，实现 IM\n      return this.contactList.find((item) => item.platform == \"onebot\");\n    } else {\n      return this.contactList.find((item) => item.id == id);\n    }\n  }\n\n  /**\n   * Generate a random 5-digit ID starting with 1\n   * @returns {number} 5-digit random ID starting with 1\n   */\n  genFakeId() {\n    if (!this.id) {\n      // Generate 5-digit random number starting with 1\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`1${randomNum}`);\n    } else {\n      // Generate 4-digit random number and append to existing ID\n      const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`${this.id}${subRandomNum}`);\n    }\n  }\n\n  /**\n   * Get user information from localStorage\n   * @returns {object|false} User information or false if not found\n   */\n  async getLocalStorage() {\n    const client = await localforage.getItem(\"client\");\n    return client ? JSON.parse(client) : false;\n  }\n\n  /**\n   * Load user information from localStorage\n   * @param {object} client User information\n   */\n  loadLocalStorage(client) {\n    this.everLogin = client.everLogin;\n    this.id = client.id;\n    this.code = client.code;\n\n    // If contact list exists, instantiate as contact objects\n    if (client.contactList && client.contactList.length != 0) {\n      this.contactList = client.contactList.map(\n        (item) => new Contactor(item.platform, item),\n      );\n    } else {\n      this.contactList = [];\n    }\n  }\n\n  /**\n   * Save user information to localStorage\n   */\n  async setLocalStorage() {\n    // await localforage.setItem(\"client\", JSON.stringify(this));\n    const client = {\n      everLogin: this.everLogin,\n      id: this.id,\n      code: this.code,\n      contactList: this.contactList,\n    };\n    await localforage.setItem(\"client\", JSON.stringify(client));\n    console.log(\"Client saved\");\n  }\n\n  /**\n   * Login\n   * @param {string} code Access code\n   * @returns {Promise} Login result\n   */\n  async login(code) {\n    this.code = code;\n\n    return new Promise((resolve) => {\n      const socket = new Socket(this.id, this.code);\n\n      socket.on(\"connect\", async (info) => {\n        console.log(\"Login successful\");\n        this.default_model = info.default_model;\n        this.everLogin = true;\n        this.isConnected = true;\n        this.socket = socket;\n\n        this.config.setOpenaiModels(info.models);\n        this.addMsgListener();\n        this.config.updateOpenaiDefaultConfig({\n          model: info.default_model,\n        });\n\n        if (this.contactList.length == 0) {\n          await this.genDefaultConctor();\n        }\n\n        this.setLocalStorage();\n        resolve(info);\n      });\n\n      socket.connect();\n    });\n  }\n\n  addMsgListener() {\n    this.socket.on(\"onebot_message\", (e) => {\n      console.log(e);\n      const data = e.data;\n      const id = data.id;\n      const content = data.content;\n      const type = data.type;\n\n      if (type == \"message\") {\n        const contactor = this.getContactor(id, 10000);\n        if (contactor) {\n          contactor.revMessage(content);\n          this.setLocalStorage();\n        } else {\n          console.log(\"Contactor not found\");\n        }\n      } else if (type == \"del_msg\") {\n        const onebotContactors = this.contactList.filter(\n          (item) => item.platform == \"onebot\",\n        );\n        for (const onebotContactor of onebotContactors) {\n          const deleted = onebotContactor.delMessage(content.message_id);\n          if (deleted) {\n            this.setLocalStorage();\n            console.log(\"Message deleted successfully\");\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Logout\n   */\n  async logout() {\n    this.isConnected = false;\n    this.socket.disconnect();\n    this.socket = null;\n    this.setLocalStorage();\n  }\n\n  /**\n   * Get a contactor by ID\n   * @param {number} id Contactor ID\n   * @returns {Contactor} Contactor object or first contactor if not found\n   */\n\n  async setBaseInfo() {\n    const res = await fetch(\"/api/base_info\");\n    const { data } = await res.json();\n    const stored = this.config.getDisplayConfig();\n\n    if (!stored) {\n      this.config.setDisplayConfig(data);\n    }\n\n    this.admin_qq = data.admin_qq;\n    this.bot_qq = data.bot_qq;\n\n    this.avatar = `/api/qava?q=${this.admin_qq}`;\n    this.displaySettings = data;\n\n    const onebotContactor = this.getContactor(10000);\n    if (onebotContactor) {\n      onebotContactor.avatar = `/api/qava?q=${this.bot_qq}`;\n    }\n\n    const keyWidth = 600;\n    this.onPhone = window.innerWidth < keyWidth;\n\n    return null;\n  }\n\n  getDisplaySettings() {\n    return this.displaySettings;\n  }\n\n  async getLoginHistory() {\n    const myclient = await this.getLocalStorage();\n    return myclient.everLogin;\n  }\n\n  /**\n   * Upload file or image\n   * @param {File|Blob|string} fileOrImage - File object, Blob, or base64 string for images\n   * @param {Object} options - Upload options\n   * @param {boolean} options.isImage - Indicates if upload is an image\n   * @param {Function} options.onProgress - Progress callback (percent complete)\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadFile(fileOrImage, options = {}) {\n    const { isImage = false, onProgress = null } = options;\n\n    // Handle image upload (base64 string or blob)\n    if (\n      isImage ||\n      (typeof fileOrImage === \"string\" && fileOrImage.startsWith(\"data:\"))\n    ) {\n      return this.uploadImage(fileOrImage);\n    }\n\n    const file = fileOrImage;\n    return new Promise((resolve, reject) => {\n      const chunkSize = 1024 * 1024; // 1MB\n      let md5Hash = null;\n\n      const finalizeUpload = async (totalChunks) => {\n        try {\n          const response = await fetch(\"/api/upload/finalize\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              totalChunks,\n              md5: md5Hash,\n              filename: file.name,\n            }),\n          });\n\n          if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n          }\n\n          const data = await response.json();\n          resolve(data);\n        } catch (error) {\n          reject({ error: `Finalization error: ${error.message}` });\n        }\n      };\n\n      const uploadChunk = async (chunk, index, totalChunks) => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          formData.append(\"file\", chunk);\n          formData.append(\"md5\", md5Hash);\n          formData.append(\"chunkIndex\", index);\n          formData.append(\"totalChunks\", totalChunks);\n          formData.append(\"filename\", file.name);\n\n          const xhr = new XMLHttpRequest();\n          xhr.open(\"POST\", \"/api/upload/chunk\", true);\n\n          // Track progress if callback provided\n          if (onProgress) {\n            xhr.upload.onprogress = (event) => {\n              if (event.lengthComputable) {\n                // Calculate overall progress based on chunks\n                const chunkProgress = event.loaded / event.total;\n                const overallProgress =\n                  (index / totalChunks + (1 / totalChunks) * chunkProgress) *\n                  100;\n                onProgress(Math.round(overallProgress));\n              }\n            };\n          }\n\n          xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n              resolve(); // Successful upload\n            } else {\n              reject(xhr.statusText); // Failed upload\n            }\n          };\n\n          xhr.onerror = () => {\n            reject(\"Network Error\");\n          };\n\n          xhr.send(formData);\n        });\n      };\n\n      const uploadFileChunks = async () => {\n        if (!file || !md5Hash) {\n          return reject({ error: \"Invalid file or missing hash\" });\n        }\n\n        const totalChunks = Math.ceil(file.size / chunkSize);\n\n        try {\n          for (\n            let currentChunk = 0;\n            currentChunk < totalChunks;\n            currentChunk++\n          ) {\n            const start = currentChunk * chunkSize;\n            const end = Math.min(start + chunkSize, file.size);\n            const chunk = file.slice(start, end);\n\n            await uploadChunk(chunk, currentChunk, totalChunks);\n          }\n\n          // All chunks uploaded, finalize\n          await finalizeUpload(totalChunks);\n        } catch (error) {\n          reject({ error: `Upload error: ${error}` });\n        }\n      };\n\n      // Start worker to calculate MD5\n      const worker = new UploadWorker();\n      worker.postMessage({ file, chunkSize });\n\n      worker.onmessage = (e) => {\n        if (e.data.hash) {\n          md5Hash = e.data.hash;\n          console.log(\"MD5 calculated. Starting upload...\");\n          uploadFileChunks();\n        } else if (e.data.error) {\n          reject({ error: e.data.error });\n          worker.terminate();\n        }\n      };\n\n      worker.onerror = (error) => {\n        console.error(\"Worker error:\", error);\n        reject({ error: `Worker error: ${error.message}` });\n        worker.terminate();\n      };\n    });\n  }\n\n  /**\n   * Upload image (now integrated into uploadFile)\n   * @param {string|Blob} image - Base64 string or Blob\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadImage(formData) {\n    try {\n      const response = await fetch(\"/api/upload/image\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      throw error; // Re-throw to be handled by caller\n    }\n  }\n\n  /**\n   * Convert Blob to base64 string\n   * @param {Blob} blob - Image blob\n   * @returns {Promise<string>} Base64 string\n   */\n  async _convertBlobToBase64(blob) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Client from \"./client.js\";\nimport Config from \"./config.js\";\n\nconst config = new Config();\nconst client = new Client(config);\n\nclient.init();\n\nexport { config, client };\n","export default class Config {\n  constructor() {\n    this.localPresets = [];\n    this.openaiDefaultConfig = {\n      model: \"gpt-4o-mini\",\n      provider: \"openai\",\n      stream: true,\n      temperature: 1,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0,\n      history: [],\n      tools: [],\n      enable_tool_call: false,\n      opening: \"\",\n      max_messages_num: 10,\n    };\n    this.openaiTools = [];\n    this.onebotDefaultConfig = null;\n    this.displayConfig = {};\n    this.loadOpenaiTools();\n    this._loadStrogeConfig();\n  }\n\n  setDisplayConfig(config) {\n    this.displayConfig = config;\n    localStorage.setItem(\"display_config\", JSON.stringify(config));\n  }\n\n  setOpenaiModels(models) {\n    this.openaiModels = models;\n    this._saveStrogeConfig();\n  }\n\n  getOpenaiModels() {\n    return this.openaiModels;\n  }\n\n  getOpenaiModelOwner(model) {\n    const group = this.openaiModels.find((modelGroup) =>\n      modelGroup.models.includes(model),\n    );\n    return group?.owner;\n  }\n\n  updateDisplayConfig(patch) {\n    this.displayConfig = {\n      ...this.displayConfig,\n      ...patch,\n    };\n    localStorage.setItem(\"display_config\", JSON.stringify(this.displayConfig));\n  }\n\n  getDisplayConfig() {\n    const config = localStorage.getItem(\"display_config\");\n    if (config) {\n      return JSON.parse(config);\n    }\n  }\n\n  updateOpenaiDefaultConfig(patch) {\n    this.openaiDefaultConfig = {\n      ...this.openaiDefaultConfig,\n      ...patch,\n    };\n    this._saveStrogeConfig();\n  }\n\n  async loadOpenaiTools() {\n    const res = await fetch(\"/api/openai/tools\");\n    const data = await res.json();\n    this.openaiTools = Object.values(data.data.tools);\n    this._saveStrogeConfig();\n  }\n\n  async loadOnebotDefaultConfig() {\n    const onebotOptionsData = await fetch(`/api/onebot/plugins`);\n    const onebotOptionsJson = await onebotOptionsData.json();\n    this.onebotDefaultConfig = onebotOptionsJson.data.options;\n    this._saveStrogeConfig();\n  }\n\n  _loadStrogeConfig() {\n    const config = localStorage.getItem(\"config\");\n    if (config) {\n      Object.assign(this, JSON.parse(config));\n    } else {\n      this._saveStrogeConfig();\n    }\n  }\n\n  _saveStrogeConfig() {\n    localStorage.setItem(\"config\", JSON.stringify(this));\n  }\n}\n","<script>\nimport { client } from \"@/lib/runtime.js\";\n\nconst PageStatus = {\n  CHAT: \"chat\",\n  PROFILE: \"profile\",\n  SETTINGS: \"settings\",\n  NONE: \"none\",\n};\nexport default {\n  data() {\n    return {\n      defaultAvatar: \"/api/qava?q=1099834705\",\n      processedImage: \"\",\n      activePage: PageStatus.NONE,\n      adminAvatar: \"\",\n    };\n  },\n  computed: {\n    isChatActive() {\n      return this.activePage === PageStatus.CHAT;\n    },\n    isProfileActive() {\n      return this.activePage === PageStatus.PROFILE;\n    },\n  },\n  watch: {\n    $route: {\n      handler(newRoute) {\n        this.activePage = this.getPageStatusFromRoute(newRoute);\n      },\n      immediate: true,\n    },\n  },\n  mounted() {\n    this.activePage = this.getPageStatusFromRoute();\n    const adminId = client.admin_qq;\n    if (adminId) {\n      this.loadAvatar(adminId);\n    } else {\n      client.on(\n        \"loaded\",\n        () => {\n          const adminId = client.admin_qq;\n          this.loadAvatar(adminId);\n        },\n        false,\n      );\n    }\n  },\n  methods: {\n    async processImage(imageUrl) {\n      return new Promise((resolve, reject) => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.crossOrigin = \"anonymous\"; // 设置跨域属性\n        img.src = imageUrl;\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          // 绘制原始图片\n          ctx.drawImage(img, 0, 0);\n          // 创建透明的缺口\n          let centerX = img.width * 0.8; // 圆心X坐标\n          let centerY = img.height * 0.86; // 圆心Y坐标\n          let radius = (5 / 24) * img.width; // 圆的半径\n          ctx.beginPath();\n          ctx.arc(centerX, centerY, radius, 0, Math.PI * 2, true);\n          ctx.clip();\n          ctx.clearRect(0, 0, img.width, img.height);\n          // 将处理后的图片转换为base64\n          canvas.toBlob((blob) => {\n            const url = URL.createObjectURL(blob);\n            resolve(url);\n          }, \"image/png\");\n        };\n        img.onerror = (error) => reject(error);\n      });\n    },\n    async toChat() {\n      this.activePage = PageStatus.CHAT;\n      this.$router.push({ name: \"blank\" });\n    },\n    async toProfile() {\n      this.activePage = PageStatus.PROFILE;\n      this.$router.push({ name: \"contactors\" });\n    },\n    async toConfig() {\n      this.activePage = PageStatus.SETTINGS;\n      this.$router.push({ name: \"settings\" });\n    },\n    async loadAvatar(adminId) {\n      this.adminAvatar = `/api/qava?q=${adminId}`;\n      try {\n        this.processedImage = await this.processImage(this.adminAvatar);\n      } catch (error) {\n        console.error(\"Error loading avatar:\", error);\n      }\n    },\n    getPageStatusFromRoute(route = this.$route) {\n      if (route.path === \"/\" || route.path.includes(\"/chat/\")) {\n        return PageStatus.CHAT;\n      } else if (\n        route.path === \"/contactors\" ||\n        route.path.includes(\"/profile/\")\n      ) {\n        return PageStatus.PROFILE;\n      } else if (route.path === \"/settings\") {\n        return PageStatus.SETTINGS;\n      }\n      return PageStatus.NONE;\n    },\n  },\n};\n</script>\n<template>\n  <div id=\"sidebar\">\n    <div class=\"admin-avatar\">\n      <div class=\"status\"></div>\n      <img :src=\"processedImage\" alt=\"admin-avatar\" />\n    </div>\n    <div id=\"side\" class=\"options\">\n      <div class=\"up-half\">\n        <div class=\"icon-back\" :class=\"{ active: isChatActive }\">\n          <div id=\"chatting\" @click=\"toChat\">\n            <i class=\"iconfont chat\"></i>\n          </div>\n        </div>\n        <div class=\"icon-back\" :class=\"{ active: isProfileActive }\">\n          <div id=\"editing\" @click=\"toProfile\">\n            <i class=\"iconfont user\"></i>\n          </div>\n        </div>\n      </div>\n      <div class=\"down-half\">\n        <a\n          href=\"https://github.com/Pretend-to/mio-chat-backend\"\n          target=\"_blank\"\n          class=\"side-icon\"\n        >\n          <i class=\"iconfont github\"></i>\n        </a>\n        <div class=\"side-icon\" @click=\"toConfig\">\n          <i class=\"iconfont menu\"></i>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped>\n#sidebar {\n  display: flex;\n  flex-basis: 4.5rem;\n  flex-direction: column;\n  background-color: hsla(0, 0%, 100%, 0.8);\n  backdrop-filter: blur(0.5rem);\n  /* 添加模糊效果，值可以根据需要调整 */\n}\n.options {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n  /* margin: 1.2rem 1.2rem; */\n}\n.up-half,\n.down-half {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-basis: 8rem;\n  justify-content: center;\n}\n.icon-back {\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0.5rem 0rem;\n  border-radius: 0.5rem;\n}\n.icon-back.active {\n  background-color: rgba(113, 113, 113, 0.1);\n}\n.icon-back i,\n.down-half i {\n  margin: 0.5rem 0rem;\n  width: 1.8rem;\n  height: 1.8rem;\n  font-size: 1.6rem;\n  color: black;\n}\n.admin-avatar {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  height: 4.5rem;\n  position: relative;\n  z-index: 10;\n}\n.admin-avatar img {\n  border-radius: 50%;\n  width: 60%;\n}\n.status {\n  position: absolute;\n  left: 68%;\n  top: 71%;\n  transform: translate(-50%, -50%);\n  width: 0.7rem;\n  height: 0.7rem;\n  border-radius: 50%;\n  background: linear-gradient(to bottom, rgb(52, 238, 143), rgb(54, 221, 150));\n}\n.side-icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.icon-back.active i {\n  color: #007bff;\n}\n\n@media screen and (max-width: 600px) {\n  .options {\n    justify-content: space-evenly;\n  }\n  #sidebar {\n    width: 100%;\n    flex-direction: row;\n    flex-basis: 4rem;\n    background-color: #f5f4f9;\n  }\n  .admin-avatar {\n    display: none;\n  }\n  .options {\n    flex-direction: row;\n    width: 100%;\n  }\n  .up-half,\n  .down-half {\n    flex-basis: 50%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n  }\n  .icon-back.active {\n    background-color: transparent;\n  }\n}\n</style>\n","<template>\n  <ul\n    :class=\"{\n      'window-controls': true,\n      fullscreen: fullScreen,\n      preview: preview,\n    }\"\n  >\n    <li class=\"button\" @click=\"waiting()\">\n      <span class=\"window-min\">—</span>\n    </li>\n    <li v-if=\"fullScreen\" class=\"button\" @click=\"configFullScreen(false)\">\n      <span class=\"window-inmax\">\n        <i class=\"iconfont chuangkouhua\"></i>\n      </span>\n    </li>\n    <li v-else class=\"button\" @click=\"configFullScreen(true)\">\n      <span class=\"window-max\">▢</span>\n    </li>\n    <li id=\"close\" class=\"button\" @click=\"waiting()\">\n      <span class=\"window-close\">&times;</span>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  props: {\n    fullScreen: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"set-screen\"],\n  data() {\n    return {\n      preview: false,\n    };\n  },\n  created() {\n    // 检查查询字符串中是否存在preview参数\n    const urlParams = new URLSearchParams(window.location.search);\n    const preview = urlParams.get(\"preview\");\n    if (preview) {\n      this.preview = true;\n    }\n  },\n  methods: {\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    configFullScreen(fullScreen) {\n      this.$emit(\"set-screen\", fullScreen);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"sass\">\n.window-controls\n    position: absolute\n    display: flex\n    width: 6rem\n    height: 2rem\n    z-index: 100\n    right: 0\n\n    &.preview\n        display: none\n\n    &.fullscreen\n        position: fixed\n\n    .button\n        display: flex\n        justify-content: center\n        align-items: flex-start\n        flex-grow: 1\n        height: 100%\n        align-items: center\n        .window-min\n            font-size: .6rem\n            margin-top: .2rem\n        .window-max\n            font-size: .9rem\n        .window-close\n            margin-top: -.15rem\n        &:hover\n            background-color: rgb(231, 231, 231)\n        &#close:hover\n            background-color: rgb(255, 0, 0)\n            color: white\n</style>\n","<template>\n  <div\n    id=\"forward-msg-preview\"\n    :class=\"onPhone ? 'on-phone' : ''\"\n    @click=\"showBox = true\"\n  >\n    <div id=\"forward-msg-head\">转发的聊天消息</div>\n    <div id=\"forward-msg-body\">\n      <div\n        v-for=\"(message, index) in messages\"\n        id=\"forward-msg-summary\"\n        :key=\"index\"\n      >\n        {{ contactor.name }}: {{ contactor.getLastMessageSummary(message) }}\n      </div>\n    </div>\n    <div id=\"forward-msg-foot\">查看{{ messages.length }}条转发消息</div>\n  </div>\n  <div v-if=\"showBox\" id=\"forward-msg-box\" :class=\"onPhone ? 'on-phone' : ''\">\n    <div class=\"head\">\n      <span>转发消息</span>\n      <span class=\"close\" @click=\"showBox = false\">&times;</span>\n    </div>\n    <div class=\"body\">\n      <div\n        v-for=\"(message, index) of messages\"\n        :key=\"index\"\n        class=\"message-container\"\n      >\n        <div id=\"other\" class=\"message-body\">\n          <div class=\"avatar\">\n            <img :src=\"contactor.avatar\" :alt=\"contactor.name\" />\n          </div>\n          <div class=\"msg\">\n            <div class=\"wholename\">\n              <div class=\"title\">{{ contactor.title }}</div>\n              <div class=\"name\">{{ contactor.name }}</div>\n            </div>\n            <div class=\"content\">\n              <div>\n                <MdPreview\n                  v-if=\"message.type === 'text'\"\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"message.data.text\"\n                />\n                <el-image\n                  v-else-if=\"message.type === 'image'\"\n                  :key=\"index\"\n                  style=\"margin: 8px 0; max-width: 20rem; border-radius: 1rem\"\n                  :src=\"message.data.file\"\n                  :zoom-rate=\"1.2\"\n                  :preview-teleported=\"true\"\n                  :max-scale=\"7\"\n                  :min-scale=\"0.2\"\n                  :preview-src-list=\"[message.data.file]\"\n                  :initial-index=\"4\"\n                  fit=\"cover\"\n                />\n                <MdPreview\n                  v-else\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"`尚未支持的消息类型：${message.type}`\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MdPreview } from \"md-editor-v3\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default {\n  components: {\n    MdPreview,\n  },\n  // ForwardMsg.vue\n  props: {\n    messages: {\n      type: Array,\n      default: () => [], // 对于数组，使用函数返回一个新的空数组\n    },\n    contactor: {\n      type: Object,\n      default: () => {}, // 对于字符串，使用空字符串\n    },\n  },\n  data() {\n    return {\n      showBox: false,\n      onPhone: false,\n    };\n  },\n  created() {\n    this.onPhone = window.innerWidth < 600;\n\n    client.on(\n      \"device-change\",\n      (type) => {\n        if (type == \"mobile\") {\n          this.onPhone = true;\n        } else {\n          this.onPhone = false;\n        }\n      },\n      false,\n    );\n  },\n};\n</script>\n\n<style>\n#forward-msg-preview {\n  width: 15rem;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem;\n}\n\n#forward-msg-preview.on-phone {\n  transform: translateX(-0.35rem);\n}\n\n#forward-msg-body {\n  margin: 0.5rem 0;\n  width: 100%;\n  text-overflow: ellipsis;\n}\n\n#forward-msg-summary {\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  font-size: 0.8rem;\n  font-weight: 300;\n}\n\n#forward-msg-foot {\n  border-top: 1px solid #ccc;\n  padding-top: 0.2rem;\n  width: 100%;\n  font-size: 0.7rem;\n  color: rgb(150, 150, 150);\n}\n\n#forward-msg-box {\n  border: 1px solid black;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24rem;\n  height: 30rem;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  border-radius: 0.25rem;\n  overflow: hidden;\n}\n\n.message-body > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n\n#forward-msg-box.on-phone {\n  border: null;\n  border-radius: null;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  overflow: hidden;\n}\n\n.head {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 2rem;\n  padding-left: 1rem;\n  border-bottom: 1px solid #ccc;\n  color: black;\n}\n\n.close {\n  width: 1.5rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n.body {\n  height: auto;\n  max-height: calc(100% - 2rem);\n  overflow: auto;\n}\n</style>\n","<template>\n  <div class=\"input-bar\">\n    <div class=\"options\">\n      <div class=\"bu-emoji\">\n        <emoji-picker\n          v-show=\"showemoji\"\n          ref=\"emojiPicker\"\n          @emoji-click=\"getemoji\"\n        ></emoji-picker>\n        <p class=\"ho-emoji\">表情</p>\n        <i class=\"iconfont smile\" @click.prevent=\"ctrlEmojiPanel\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">\n          {{ activeContactor.platform == \"openai\" ? \"模型选择\" : \"工具选择\" }}\n        </p>\n        <el-tree-select\n          id=\"wraper-selector\"\n          v-model=\"selectedOption\"\n          :data=\"extraOptions\"\n          @change=\"activeBotTools\"\n        />\n        <i class=\"iconfont robot\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">重置人格</p>\n        <i class=\"iconfont reset\" @click=\"$emit('cleanHistory')\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">清除记录</p>\n        <i class=\"iconfont shanchu\" @click=\"$emit('cleanScreen')\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">上传</p>\n        <i class=\"iconfont upload\" @click=\"uploadFile\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">滑到底部</p>\n        <i class=\"iconfont down\" @click=\"$emit('toButtom', 1)\"></i>\n      </div>\n    </div>\n    <div class=\"input-box\">\n      <div class=\"input-content\">\n        <div\n          ref=\"textarea\"\n          class=\"input-area\"\n          :v-html=\"userInput\"\n          contenteditable=\"true\"\n          placeholder=\"按 Ctrl + Enter 以发送消息\"\n          @keydown=\"handleKeyDown\"\n          @input=\"handleInput\"\n          @click=\"updateCursorPosition\"\n        ></div>\n      </div>\n      <button\n        id=\"sendButton\"\n        :disabled=\"!userInput || !isValidInput(userInput)\"\n        @click.prevent=\"send\"\n      >\n        发送{{ getWraperName() ? ` | ${getWraperName()}` : \"\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { client, config } from \"@/lib/runtime.js\";\n\nexport default {\n  props: {\n    activeContactor: {\n      type: Object,\n      required: true,\n    },\n  },\n  emits: [\"toButtom\", \"cleanHistory\", \"cleanScreen\", \"setModel\", \"stroge\"],\n  data() {\n    return {\n      userInput: \"\",\n      selectedOption: null,\n      cursorPosition: [],\n      showemoji: false,\n      openaiModels: null,\n      onebotPresets: null,\n      host: \"\",\n      uploaded: { files: [], images: [] }, // Keep original data structure\n      isPasting: false,\n    };\n  },\n  computed: {\n    extraOptions() {\n      if (this.activeContactor.platform == \"openai\") {\n        return this.openaiModels;\n      } else {\n        return this.onebotPresets;\n      }\n    },\n  },\n  watch: {\n    \"$route.params.id\"() {\n      this.loadSelected();\n    },\n  },\n  created() {\n    this.initExtraOptions();\n  },\n  mounted() {\n    this.textareaRef = this.$refs.textarea;\n    this.textareaRef.addEventListener(\"input\", this.adjustTextareaHeight);\n    // 添加拖拽事件监听器\n    this.handleDragOver = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#e0e0e0\";\n    };\n    this.handleDragLeave = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n    };\n    this.handleDrop = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n      const files = e.dataTransfer.files;\n      if (files.length > 0) {\n        this.handleDroppedFile(files[0]);\n      }\n    };\n    this.textareaRef.addEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.addEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.addEventListener(\"drop\", this.handleDrop);\n    // 将paste事件的处理函数定义为一个方法\n    this.handlePaste = (e) => {\n      e.preventDefault();\n      this.isPasting = true;\n      // 获取剪贴板的数据\n      var items = (e.clipboardData || window.clipboardData).items;\n      for (var i = 0; i < items.length; i++) {\n        // 检查是否为文件类型\n        if (items[i].type.indexOf(\"image\") !== -1) {\n          var blob = items[i].getAsFile();\n          this.handleUploadImage(blob);\n        } else if (items[i].type === \"text/plain\") {\n          var text = (e.originalEvent || e).clipboardData.getData(\"text/plain\");\n          document.execCommand(\"insertText\", false, text);\n          this.userInput = this.textareaRef.innerText;\n        }\n      }\n      this.isPasting = false;\n    };\n    // 添加paste事件监听器\n    this.textareaRef.addEventListener(\"paste\", this.handlePaste);\n    this.host = window.location.origin;\n  },\n  unmounted() {\n    this.textareaRef.removeEventListener(\"input\", this.adjustTextareaHeight);\n    this.textareaRef.removeEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.removeEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.removeEventListener(\"drop\", this.handleDrop);\n    this.textareaRef.removeEventListener(\"paste\", this.handlePaste);\n    this.textareaRef = null;\n  },\n  methods: {\n    handleDroppedFile(file) {\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadFile(file);\n      }\n    },\n    ctrlEmojiPanel() {\n      this.showemoji = !this.showemoji;\n      const editor = this.textareaRef;\n      editor.focus();\n    },\n    uploadFile(file) {\n      if (file instanceof File) {\n        this.handleFileUpload(file);\n        return;\n      }\n      const availableImageFormats = [\n        \"png\",\n        \"jpg\",\n        \"jpeg\",\n        \"webp\",\n        \"gif\",\n        \"bmp\",\n      ];\n      const availableDocFormats = [\"docx\", \"txt\", \"pdf\", \"pptx\", \"xlsx\"];\n      const fileInput = document.createElement(\"input\");\n      fileInput.type = \"file\";\n      fileInput.accept = [...availableDocFormats, ...availableImageFormats]\n        .map((format) => `.${format}`)\n        .join(\",\");\n\n      const handleChange = async (e) => {\n        fileInput.removeEventListener(\"change\", handleChange);\n        const file = e.target.files[0];\n        if (!file) return;\n        this.handleFileUpload(file);\n      };\n      fileInput.addEventListener(\"change\", handleChange);\n      fileInput.click();\n    },\n    handleFileUpload(file) {\n      if (file.size > 50 * 1024 * 1024) {\n        this.$message.error(\"文件大小超过50MB，无法上传\");\n        return;\n      }\n      this.$message.info(\"文件上传中...\");\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadDocumentFile(file);\n      }\n    },\n    async uploadDocumentFile(file) {\n      try {\n        const upload = await client.uploadFile(file);\n        this.$message.success(\"文件上传成功\");\n        this.uploaded.files.push(\n          `${upload.data.url}?size=${file.size}&name=${file.name}`,\n        );\n      } catch (error) {\n        console.error(\"文件上传失败:\", error);\n        this.$message.error(\"文件上传失败，请稍后再试\");\n      }\n    },\n    handleUploadImage(file) {\n      const maxSizeMB = 5;\n      const maxSizeByte = maxSizeMB * 1024 * 1024;\n\n      const img = new Image();\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        img.src = event.target.result;\n      };\n\n      img.onload = () => {\n        const fileType = file.type.toLowerCase();\n\n        // 处理 GIF 类型，上传原文件\n        if (fileType === \"image/gif\") {\n          // GIF 检查大小\n          if (file.size > maxSizeByte) {\n            this.$message.error(`图片大小不能超过 ${maxSizeMB}MB`);\n            return;\n          }\n          const formData = new FormData();\n          formData.append(\"image\", file, file.name);\n          client\n            .uploadImage(formData)\n            .then((upload) => {\n              const imageUrl = upload.data.url;\n              this.uploaded.images.push(imageUrl);\n              this.insertImageToTextarea(imageUrl, file.name);\n              this.$message.success(\"上传图片成功\");\n            })\n            .catch((error) => {\n              console.error(\"Error handling uploaded image:\", error);\n              this.$message.error(\"上传图片失败\");\n            });\n          return;\n        }\n\n        // 非GIF类型，使用Canvas处理\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // 根据文件类型确定mimeType和quality, for toBlob\n        let mimeType, quality;\n\n        if (fileType === \"image/png\") {\n          mimeType = \"image/png\";\n          quality = undefined; // PNG的质量参数无效\n        } else if (fileType === \"image/webp\") {\n          mimeType = \"image/webp\";\n          quality = 0.7;\n        } else {\n          // 默认为jpeg（处理jpg or其他类型）\n          mimeType = \"image/jpeg\";\n          quality = 0.7;\n        }\n\n        canvas.toBlob(\n          (blob) => {\n            if (blob.size > maxSizeByte) {\n              this.$message.error(\n                `图片压缩后仍然超过 ${maxSizeMB}MB，请选择更小的图片`,\n              );\n              return;\n            }\n\n            const formData = new FormData();\n            formData.append(\"image\", blob, file.name);\n            client\n              .uploadImage(formData)\n              .then((upload) => {\n                const imageUrl = upload.data.url;\n                this.uploaded.images.push(imageUrl);\n                this.insertImageToTextarea(imageUrl, file.name);\n                this.$message.success(\"上传图片成功\");\n              })\n              .catch((error) => {\n                console.error(\"上传图片失败\", error);\n                this.$message.error(\"上传图片失败\");\n              });\n          },\n          mimeType,\n          quality, // 对于不能使用quality参数的mime类型，此参数被忽略\n        );\n      };\n      reader.readAsDataURL(file);\n    },\n    // 插入图片到文本域的方法\n    insertImageToTextarea(imageUrl, imageName) {\n      const imageElement = document.createElement(\"img\");\n      imageElement.src = imageUrl;\n      imageElement.alt = imageName;\n      imageElement.style.maxWidth = \"10rem\";\n      imageElement.style.maxHeight = \"10rem\";\n\n      const range = document.createRange();\n      range.selectNodeContents(this.textareaRef);\n      range.collapse(false); // 将范围折叠到末尾\n\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      const fragment = range.createContextualFragment(\n        `<span>${imageElement.outerHTML}</span>`,\n      );\n      range.insertNode(fragment);\n\n      // 保持光标在插入的图片之后\n      setTimeout(() => {\n        const newRange = document.createRange();\n        newRange.selectNodeContents(this.textareaRef);\n        newRange.collapse(false); // 将范围折叠到末尾\n\n        const newSelection = window.getSelection();\n        newSelection.removeAllRanges();\n        newSelection.addRange(newRange);\n      }, 0);\n    },\n    initExtraOptions() {\n      const models = client.config.getOpenaiModels();\n      this.openaiModels = models.map((modelGroup) => {\n        return {\n          value: modelGroup.owner,\n          label: modelGroup.owner,\n          children: modelGroup.models.map((model) => {\n            return {\n              value: model,\n              label: model,\n            };\n          }),\n        };\n      });\n      this.onebotPresets = config.onebotDefaultConfig.textwraper.options;\n      this.loadSelected();\n    },\n    getOpenaiModelArray(model) {\n      const owner = client.config.getOpenaiModelOwner(model);\n      return [owner, model];\n    },\n    wrapText(rawText) {\n      const preset = this.getOnebotPreset();\n      if (!this.selectedOption || !preset) return rawText;\n      const testText = \"{xxx}\";\n      console.log(this.onebotPresets);\n\n      const result = preset.replace(testText, rawText);\n      return result;\n    },\n    getOnebotPreset() {\n      const preset = this.onebotPresets\n        .reduce((acc = [], item) => {\n          const arr = item.children ?? [item];\n          return [...acc, ...arr];\n        }, [])\n        .find((child) => child.value == this.selectedOption)?.preset;\n\n      return preset;\n    },\n    loadSelected() {\n      if (this.activeContactor.platform === \"onebot\") {\n        if (this.activeContactor.preset) {\n          this.selectedOption = this.activeContactor.preset;\n        }\n      } else {\n        this.selectedOption = this.activeContactor.options.model;\n      }\n    },\n    adjustTextareaHeight() {\n      const textarea = this.textareaRef;\n      textarea.style.height = \"auto\";\n      textarea.style.height = textarea.scrollHeight + \"px\";\n    },\n    getWraperName() {\n      const preset = this.getOnebotPreset();\n      if (this.activeContactor.platform === \"onebot\" && preset) {\n        if (!this.selectedOption) return \"\";\n        const name = preset.replace(\"#\", \"\").replace(\"{xxx}\", \"\");\n        return name;\n      } else {\n        return \"\";\n      }\n    },\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    getemoji(e) {\n      const inputer = this.textareaRef;\n      inputer.focus();\n      const range = document.createRange();\n      const sel = window.getSelection();\n      if (!sel) return;\n      const unicode = e.detail.unicode;\n      const startPos = this.cursorPosition[0];\n      const endPos = this.cursorPosition[1];\n      const textBeforeCursor = this.userInput.substring(0, startPos);\n      const textAfterCursor = this.userInput.substring(endPos);\n      this.userInput = textBeforeCursor + unicode + textAfterCursor;\n      inputer.innerHTML = this.userInput;\n      // 移动光标位置到表情符号之后\n      setTimeout(() => {\n        range.setStart(inputer.firstChild, startPos + unicode.length);\n        range.setEnd(inputer.firstChild, startPos + unicode.length);\n        sel.removeAllRanges();\n        sel.addRange(range);\n      }, 0);\n      this.ctrlEmojiPanel();\n    },\n    updateCursorPosition() {\n      const selection = window.getSelection();\n      if (!selection) return;\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        this.cursorPosition[0] = range.startOffset;\n        this.cursorPosition[1] = range.endOffset;\n      }\n    },\n    presend() {\n      this.textareaRef.focus();\n      // 获取textarea中的所有img元素\n      const images = this.textareaRef.querySelectorAll(\"img\");\n      const ImageSrcs = Array.from(images).map((img) => img.src);\n      // let msg = this.getSafeText(this.textareaRef.innerText);  // Use innerText, not userInput\n      let msg = this.getSafeText(this.userInput);\n      const wrappedMessage =\n        this.activeContactor.platform === \"onebot\" ? this.wrapText(msg) : msg;\n      this.userInput = this.textareaRef.innerHTML = \"\"; // Clear the textarea\n      this.adjustTextareaHeight();\n\n      const container = {\n        role: \"user\",\n        time: new Date().getTime(),\n        status: \"completed\",\n        content: [\n          {\n            type: \"text\",\n            data: {\n              text: wrappedMessage,\n            },\n          },\n        ],\n      };\n\n      ImageSrcs.forEach((imgUrl) => {\n        container.content.push({\n          type: \"image\",\n          data: {\n            file: imgUrl,\n          },\n        });\n      });\n      this.uploaded.files.forEach((file) => {\n        container.content.push({\n          type: \"file\",\n          data: {\n            file: this.host + file,\n          },\n        });\n      });\n\n      if (this.repliedMessageId) {\n        const replyData = {\n          type: \"reply\",\n          data: {\n            id: this.repliedMessageId,\n          },\n        };\n        container.content.push(replyData);\n      }\n      return container;\n    },\n    async send() {\n      this.$emit(\"toButtom\");\n      const container = this.presend();\n      // this.userInput = \"\";  // Already cleared in presend\n      const message_id = await this.activeContactor.webSend(container); //发送消息\n      container.id = message_id;\n      this.$emit(\"stroge\");\n      this.uploaded.images = [];\n      this.uploaded.files = [];\n    },\n    getSafeText(text) {\n      // return text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n      return text;\n    },\n    cleanScreen() {\n      this.$emit(\"cleanScreen\");\n    },\n    activeBotTools() {\n      if (this.activeContactor.platform === \"onebot\") {\n        if (this.getOnebotPreset() && !this.getOnebotPreset().includes(\"xxx\")) {\n          this.send();\n        }\n      } else {\n        this.$emit(\"setModel\", this.selectedOption);\n        this.$message({\n          message: \"已切换到 \" + this.selectedOption + \" 模型\",\n          type: \"success\",\n        });\n      }\n    },\n    isValidInput(input) {\n      return input.trim().length > 0;\n    },\n    handleKeyDown(event) {\n      if (event.key === \"Enter\") {\n        if (event.ctrlKey) {\n          // Send only if there's text OR files.\n          if (this.userInput && this.isValidInput(this.userInput)) {\n            this.send();\n          } else {\n            this.$message({ message: \"不能发送空消息\", type: \"warning\" });\n          }\n        } else {\n          this.userInput += \"\\n\";\n        }\n      }\n      setTimeout(() => {\n        this.updateCursorPosition();\n      }, 0);\n    },\n    handleInput() {\n      if (!this.isPasting) this.userInput = this.textareaRef.innerText;\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n$mobile: 600px\n$icon-hover: #09f\n\ni:hover\n  color: $icon-hover\n\n.input-bar\n  flex-shrink: 0\n  display: flex\n  flex-direction: column\n  border: 0 solid rgba(161, 154, 154, 0.626)\n  flex-basis: 11rem\n  @media (max-width: $mobile)\n    flex-basis: 7rem\n    width: 100%\n    flex-direction: column-reverse\n    position: fixed\n    bottom: 0\n    z-index: 1000\n    background-color: hsla(0, 0%, 100%, 0.8)\n    backdrop-filter: blur(0.5rem)\n\n  .options\n    display: flex\n    border-top: 0.0625rem solid rgba(128, 128, 128, 0.502)\n    padding: 0.25rem 0.5rem\n    @media (max-width: $mobile)\n      border: none\n      justify-content: space-around\n\n.bu-emoji\n  position: relative\n  white-space: nowrap\n  @media screen and (min-width: $mobile)\n    &:hover p.ho-emoji\n      display: block\n\nemoji-picker\n  position: absolute\n  top: -25.75rem\n  right: -20rem\n\np.ho-emoji\n    text-wrap: nowrap\n    display: none\n    font-size: .75rem\n    padding: .125rem .25rem\n    background-color: #fff\n    border: none\n    box-shadow: 0 .125rem .25rem #0003\n    position: absolute\n    top: 80%\n    left: 50%\n    transform: translate(-60%)\ni\n  display: block\n  padding: 0.25rem 0.5rem 0 0\n  font-size: 1.25rem\n  width: 1.5rem\n  height: 1.5rem\n\n.input-box\n    flex-grow: 1\n    padding: 0 .5rem\n    display: flex\n    flex-direction: column\n    align-items: end\n\n    @media screen and (max-width: $mobile)\n      flex-direction: row\n      align-items: flex-end\n      flex-wrap: nowrap\n\n    .input-content\n      flex-wrap: wrap\n      display: flex\n      background-color: #f1f1f1\n      border: 0\n      flex-grow: 1\n      width: 100%\n\n      @media screen and (max-width: $mobile)\n        margin: 0.5rem 0.5rem 0.8rem 0\n        min-height: 2rem\n        flex-basis: calc( 100% - 4rem )\n        max-width: calc( 100% - 4rem )\n        flex-grow: 0\n        background-color: #fff\n\n      .input-area\n        overflow-y: auto\n        max-height: 20rem\n        resize: none\n        font-size: 1rem\n        background-color: #f1f1f1\n        border: 0\n        flex-grow: 1\n        width: 100%\n        moz-user-select: -moz-none\n        -moz-user-select: none\n        -o-user-select: none\n        -khtml-user-select: none\n        -webkit-user-select: none\n        -ms-user-select: none\n        user-select: none\n        &:focus\n          border: 0\n          outline: none\n\n        @media screen and (max-width: $mobile)\n          background-color: transparent\n          margin: 0.2rem\n          caret-color: #14C1EB\n\n    button\n        white-space: nowrap\n        color: #f0f8ff\n        border-radius: .3125rem\n        border: 0\n        background-color: $icon-hover\n        padding: .25rem 1rem\n        margin-bottom: .8rem\n        margin-right: .5rem\n        cursor: pointer\n\n        @media screen and (max-width: $mobile)\n          height: 2rem\n          margin-right: 0rem\n</style>\n","<template>\n  <div class=\"file-block\">\n    <div class=\"file-block-icon\">\n      <div class=\"file-icon\" :class=\"iconClass\">\n        <!-- Dynamic class binding -->\n        <span v-if=\"file_type\"> {{ file_type.toUpperCase() }}</span>\n      </div>\n    </div>\n    <div class=\"file-block-text\">\n      <div class=\"file-name\" :title=\"file_name\">{{ file_name }}</div>\n      <div class=\"file-info\">\n        {{ file_type.toUpperCase() }}, {{ formated_file_size }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    fileUrl: {\n      // 修改为 camelCase\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      file_name: \"\",\n      file_type: \"\",\n      formated_file_size: \"\",\n    };\n  },\n  computed: {\n    iconClass() {\n      //Use lower case for comparison, easier to manage\n      const type = this.file_type.toLowerCase();\n\n      if (type === \"pdf\") {\n        return \"file-icon-pdf\";\n      } else if ([\"xls\", \"xlsx\", \"csv\"].includes(type)) {\n        // Spreadsheet (Excel, CSV)\n        return \"file-icon-spreadsheet\";\n      } else if ([\"doc\", \"docx\"].includes(type)) {\n        // Word\n        return \"file-icon-word\";\n      } else if ([\"ppt\", \"pptx\"].includes(type)) {\n        // PowerPoint\n        return \"file-icon-ppt\";\n      } else {\n        return \"file-icon-other\"; // Default (gray)\n      }\n    },\n  },\n  created() {\n    // 从查询参数中获取文件大小\n    const url = this.fileUrl.split(\"?\");\n    const params = new URLSearchParams(url[1]);\n    const bits = params.get(\"size\");\n    this.file_name = params.get(\"name\");\n    this.formated_file_size = this.formatFileSize(bits);\n    // 从url中获取文件类型\n    const file_type = url[0].split(\".\");\n    this.file_type = file_type[file_type.length - 1];\n  },\n  methods: {\n    formatFileSize(bits) {\n      const units = [\"B\", \"KB\", \"MB\"];\n      let unitIndex = 0;\n      while (bits >= 1024) {\n        bits /= 1024;\n        unitIndex++;\n      }\n      return bits.toFixed(2) + \" \" + units[unitIndex];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.file-block {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 5px;\n  background-color: #f5f5f5;\n  margin-bottom: 8px;\n  width: 12rem;\n  position: relative;\n}\n\n.file-block-icon {\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n}\n\n.file-icon {\n  width: 40px;\n  height: 40px;\n  /*  Remove default background  */\n  /* background-color: #4285f4; */\n  color: #fff;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n}\n/* Add specific styles for each file type */\n.file-icon-pdf {\n  background-color: #e70012;\n}\n\n.file-icon-spreadsheet {\n  background-color: #138147;\n}\n\n.file-icon-word {\n  background-color: #144eb3;\n}\n.file-icon-ppt {\n  background-color: #ca4b27;\n}\n\n.file-icon-other {\n  background-color: gray;\n}\n\n.file-block-text {\n  flex: 1;\n  overflow: hidden;\n}\n\n.file-name {\n  font-weight: bold;\n  font-size: 12px;\n  color: #333;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.file-info {\n  font-size: 10px;\n  color: #777;\n}\n</style>\n","<template>\n  <div class=\"tool-call-bar\">\n    <div class=\"status-icon\">\n      <span v-if=\"toolCallSuccess\" class=\"call-success-icon\">\n        <div class=\"checkmark-container\">\n          <svg\n            class=\"checkmark\"\n            viewBox=\"0 0 52 36\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <polyline points=\"1 20 15 36 51 1\" />\n          </svg>\n        </div>\n      </span>\n      <span v-else-if=\"toolCallFail\" class=\"call-fail-icon\">❌</span>\n      <span v-else class=\"call-pend-icon\"></span>\n    </div>\n    <div class=\"tool-info\">\n      <div>\n        <span class=\"tool-name\">{{ toolCall.name }}</span>\n      </div>\n      <div class=\"tool-status\">\n        {{ call_status }}\n      </div>\n    </div>\n    <div class=\"extra-info\">\n      <button\n        ref=\"show-extra-info\"\n        :class=\"{ active: showExtraInfo, 'extra-info-button': true }\"\n        @click=\"showExtraInfo = !showExtraInfo\"\n      >\n        <svg\n          t=\"1731677922196\"\n          class=\"icon\"\n          viewBox=\"0 0 1024 1024\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          p-id=\"5948\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <path\n            d=\"M778.965749 128.759549l-383.064442 383.063419 388.097062 388.096039-0.070608 0.033769c12.709463 13.137205 20.529569 31.024597 20.529569 50.731428 0 40.376593-32.736589 73.112158-73.115228 73.112158-19.705807 0-37.591153-7.819083-50.730405-20.528546l-0.034792 0.035816L241.890654 564.622498l0.035816-0.035816c-13.779841-13.281491-22.3838-31.915897-22.3838-52.585659 0-0.071631 0-0.106424 0-0.178055 0-0.072655 0-0.10847 0-0.144286 0-20.669762 8.603959-39.341007 22.3838-52.622498l-0.035816-0.034792L680.573835 20.337187l0.180102 0.179079c13.139252-12.5662 30.950919-20.313651 50.587142-20.313651 40.378639 0 73.115228 32.736589 73.115228 73.114205C804.455283 95.485725 794.567076 115.334795 778.965749 128.759549z\"\n            p-id=\"5949\"\n          ></path>\n        </svg>\n      </button>\n    </div>\n    <div :class=\"{ active: showExtraInfo, 'extra-info-bar': true }\">\n      <div class=\"extra-detail\">\n        <div class=\"detail-params\">\n          <div class=\"detail-title\">参数</div>\n          <div class=\"detail-content\">\n            {{ toolCall.params }}\n          </div>\n        </div>\n\n        <div class=\"detail-result\">\n          <div class=\"detail-title\">返回值</div>\n          <div class=\"detail-content\">\n            {{ toolCall.result }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    toolCall: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      showExtraInfo: false,\n    };\n  },\n  computed: {\n    toolCallSuccess() {\n      return (\n        this.toolCall.action === \"finished\" &&\n        this.toolCall?.result?.error === null\n      );\n    },\n    toolCallFail() {\n      return (\n        this.toolCall.action === \"finished\" &&\n        !this.toolCall?.result?.error !== null\n      );\n    },\n    call_status() {\n      if (this.toolCall.action == \"started\") return \"开始运行\";\n      if (this.toolCall.action == \"pending\") return \"函数构建中\";\n      if (this.toolCall.action == \"running\") return \"函数运行中\";\n      if (this.toolCallSuccess) return \"函数运行成功\";\n      if (this.toolCallFail) return \"函数运行失败\";\n      else return \"未知状态\";\n    },\n  },\n  mounted() {},\n};\n</script>\n<style scoped>\n.extra-detail {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 20rem;\n  max-height: 25rem;\n  flex-grow: 1;\n  padding-bottom: 1rem;\n}\n\n.detail-params,\n.detail-result {\n  margin-top: 1rem;\n  width: calc(100% - 2rem);\n  background-color: #fff;\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n}\n\n.detail-title {\n  padding-top: 0.5rem;\n  flex-basis: 2rem;\n  width: 90%;\n  border-bottom: 1px solid #5c5c5c;\n}\n\n.detail-content {\n  user-select: text;\n  margin: 0.5rem 0rem;\n  font-size: 0.8rem;\n  color: #5c5c5c;\n  width: 90%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: 8rem;\n  flex-grow: 1;\n}\n\n.extra-info-bar {\n  position: absolute;\n  overflow: hidden;\n  z-index: 2;\n  max-height: 0px;\n  transition: 0.3s;\n  top: 4rem;\n  position: absolute;\n  background-color: #f5f5f5;\n  border-radius: 0.5rem;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n}\n\n.extra-info-bar.active {\n  max-height: 50rem;\n}\n\n.tool-info {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n}\n\n.extra-info {\n  flex-basis: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nbutton.extra-info-button {\n  transition: transform 0.3s ease;\n  transform: rotate(90deg);\n}\n\nbutton.extra-info-button.active {\n  transform: rotate(-90deg);\n}\n\nbutton.extra-info-button:hover svg {\n  transition: transform 0.3s ease;\n  transform: scale(1.2);\n}\n\n.tool-name {\n  font-weight: bolder;\n}\n\n.tool-call-bar {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  width: 15rem;\n  height: 4rem;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  display: flex;\n  position: relative;\n}\n\n.status-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-basis: 4rem;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #f5f5f5;\n}\n\n.call-pend-icon {\n  transform: rotateZ(45deg);\n  perspective: 1000px;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  color: #fff;\n}\n\n.call-pend-icon:before,\n.call-pend-icon:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: inherit;\n  height: inherit;\n  border-radius: 50%;\n  transform: rotateX(70deg);\n  animation: 1s spin linear infinite;\n}\n\n.call-pend-icon:after {\n  color: #ff3d00;\n  transform: rotateY(70deg);\n  animation-delay: 0.4s;\n}\n\n@keyframes rotate {\n  0% {\n    transform: translate(-50%, -50%) rotateZ(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotateZ(360deg);\n  }\n}\n\n@keyframes rotateccw {\n  0% {\n    transform: translate(-50%, -50%) rotate(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotate(-360deg);\n  }\n}\n\n@keyframes spin {\n  0%,\n  100% {\n    box-shadow: 0.2em 0px 0 0px currentcolor;\n  }\n\n  12% {\n    box-shadow: 0.2em 0.2em 0 0 currentcolor;\n  }\n\n  25% {\n    box-shadow: 0 0.2em 0 0px currentcolor;\n  }\n\n  37% {\n    box-shadow: -0.2em 0.2em 0 0 currentcolor;\n  }\n\n  50% {\n    box-shadow: -0.2em 0 0 0 currentcolor;\n  }\n\n  62% {\n    box-shadow: -0.2em -0.2em 0 0 currentcolor;\n  }\n\n  75% {\n    box-shadow: 0px -0.2em 0 0 currentcolor;\n  }\n\n  87% {\n    box-shadow: 0.2em -0.2em 0 0 currentcolor;\n  }\n}\n\n.checkmark-container {\n  width: 2.25rem;\n  height: 2rem;\n}\n\n.checkmark {\n  width: 100%;\n  height: 100%;\n}\n\n.checkmark polyline {\n  fill: none;\n  stroke: green;\n  /* 设置颜色为绿色 */\n  stroke-width: 10;\n  /* 设置线条的粗细 */\n  stroke-dasharray: 60;\n  /* 总长度 */\n  stroke-dashoffset: 60;\n  /* 起始偏移量 */\n  animation: draw 1s forwards;\n  /* 动画定义 */\n}\n\n@keyframes draw {\n  to {\n    stroke-dashoffset: 0;\n    /* 结束时偏移量为0，显示完整的对勾 */\n  }\n}\n</style>\n","<template>\n  <div class=\"reason-block\">\n    <div class=\"head-bar\">\n      <div class=\"reason-info\">{{ getReasonInfo }}</div>\n      <button\n        :class=\"{ active: show, 'extra-info-button': true }\"\n        @click=\"toggleShow\"\n      >\n        <i class=\"iconfont icon-return\" />\n      </button>\n    </div>\n    <div\n      ref=\"reasonContent\"\n      class=\"reason-content\"\n      :style=\"{ 'max-height': maxHeight }\"\n    >\n      {{ content }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    content: {\n      required: true,\n      type: String,\n      default: \"\",\n    },\n    startTime: {\n      required: true,\n      type: Number,\n    },\n    endTime: {\n      required: false,\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      show: true,\n      maxHeight: \"auto\", // 初始值\n    };\n  },\n  computed: {\n    getReasonInfo() {\n      if (this.endTime) {\n        const timeDiff = this.endTime - this.startTime;\n        return `已深度思考（耗时 ${(timeDiff / 1000).toFixed(2)} 秒）`;\n      } else {\n        return `正在深度思考......`;\n      }\n    },\n  },\n  mounted() {\n    this.updateMaxHeight(); //初始展开\n  },\n  updated() {\n    this.updateMaxHeight(); //防止内容更新,导致高度计算错误\n  },\n  methods: {\n    toggleShow() {\n      this.show = !this.show;\n      this.updateMaxHeight();\n    },\n    updateMaxHeight() {\n      if (this.show) {\n        // 展开时，设置为内容实际高度 + 一些额外空间 (如 padding)\n        this.maxHeight = this.$refs.reasonContent.scrollHeight + 20 + \"px\";\n      } else {\n        // 收起时，设置为 0\n        this.maxHeight = \"0px\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reason-block {\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n.reason-info {\n  margin: 0.5rem 0;\n  font-size: 0.8rem;\n  min-width: 8rem;\n  flex-basis: 10rem;\n  text-wrap: nowrap;\n}\n\n.head-bar {\n  flex-basis: 1rem;\n  margin: 0.5rem 0;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: fit-content;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  padding: 0px 0.5rem;\n}\n\n.head-bar:hover {\n  background-color: #ededed;\n}\n\n.head-bar button {\n  flex-basis: 1rem;\n  margin-left: 0.5rem;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n  /* 使用 ease-in-out */\n  display: flex;\n  align-items: center;\n  gap: 2px;\n}\n\n.head-bar button i {\n  font-size: 0.8rem;\n}\n\n.head-bar button.active {\n  transform: rotate(-90deg);\n}\n\n.reason-content {\n  max-width: 100%;\n  /* max-height 在 JavaScript 中动态控制 */\n  overflow: hidden;\n  /* 隐藏超出部分 */\n  user-select: text;\n  font-size: 0.8rem;\n  color: #6f6f6f;\n  white-space: pre-line;\n  border-left: 2px solid #ccc;\n  transition: max-height 0.3s ease-in-out;\n  /* 对 max-height 应用过渡 */\n  padding-left: 1rem;\n}\n</style>\n","<template>\n  <div id=\"message-menu\">\n    <template v-if=\"type === 'friend'\">\n      <div @click.stop=\"enterChat\">\n        <i class=\"iconfont chat\"></i>\n        <span>进入对话</span>\n      </div>\n      <div @click.stop=\"togglePriority\">\n        <i class=\"iconfont star\"></i>\n        <span>{{ message.priority === 0 ? \"取消置顶\" : \"置顶\" }}</span>\n      </div>\n      <div @click.stop=\"shareBot\">\n        <i class=\"iconfont icon-share\"></i>\n        <span>分享</span>\n      </div>\n      <div @click.stop=\"deleteBot\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除</span>\n      </div>\n    </template>\n    <template v-else>\n      <div v-if=\"seletedText\" @click.stop=\"copySeletedText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制选中</span>\n      </div>\n      <div @click.stop=\"copyText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制消息</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"copySeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制图片</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"saveSeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>保存图片</span>\n      </div>\n      <div @click.stop=\"retryMessage\">\n        <i class=\"iconfont reset\"></i>\n        <span>重试消息</span>\n      </div>\n      <div @click.stop=\"replyMessage\">\n        <i class=\"iconfont yinyong\"></i>\n        <span>引用消息</span>\n      </div>\n      <div @click.stop=\"deleteMessage\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除消息</span>\n      </div>\n    </template>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"MessageMenu\", // 建议添加组件 name，方便调试\n  props: {\n    type: {\n      type: String,\n      default: \"message\",\n    },\n    message: {\n      type: Object,\n      default: () => ({}),\n    },\n    seletedText: {\n      type: String,\n      default: \"\",\n    },\n    seletedImage: {\n      type: String,\n      default: \"\",\n    },\n  },\n  emits: [\"close\", \"message-option\"], //显式声明emit的事件\n  methods: {\n    async copySeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.copyImageToClipboard(this.seletedImage);\n      } catch (error) {\n        console.error(\"复制选择图片失败：\", error);\n      }\n    },\n    async saveSeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.downloadImage(this.seletedImage);\n      } catch (error) {\n        console.error(\"保存选择图片失败：\", error);\n      }\n    },\n\n    copyText() {\n      let text = \"\";\n      this.message.content.forEach((element) => {\n        if (element.type === \"text\") {\n          text += element.data.text;\n        } else if (element.type === \"image\") {\n          text += `\\n![图片](${element.data.file})`;\n        }\n      });\n      this.copyTextToClipboard(text);\n      this.$emit(\"close\");\n    },\n\n    copySeletedText() {\n      this.copyTextToClipboard(this.seletedText);\n      this.$emit(\"close\");\n    },\n\n    retryMessage() {\n      this.$emit(\"message-option\", \"retry\");\n      this.$emit(\"close\");\n    },\n\n    replyMessage() {\n      this.$emit(\"message-option\", \"reply\");\n      this.$emit(\"close\");\n    },\n\n    deleteMessage() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n    enterChat() {\n      this.$emit(\"message-option\", \"enter\");\n      this.$emit(\"close\");\n    },\n    togglePriority() {\n      this.$emit(\"message-option\", \"priority\");\n      this.$emit(\"close\");\n    },\n    shareBot() {\n      this.$emit(\"message-option\", \"share\");\n      this.$emit(\"close\");\n    },\n    deleteBot() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n\n    // 封装复制文本到剪贴板的函数\n    async copyTextToClipboard(text) {\n      let textarea;\n      try {\n        textarea = document.createElement(\"textarea\");\n        textarea.style.position = \"absolute\";\n        textarea.style.left = \"-9999px\";\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        textarea.setSelectionRange(0, 99999); // For mobile devices\n        await document.execCommand(\"copy\");\n        this.$message({ message: \"复制成功\", type: \"success\" });\n      } catch (err) {\n        console.error(\"复制失败:\", err);\n        this.$message({ message: \"复制失败\", type: \"error\" });\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    },\n    // 封装复制图片到剪贴板的函数\n    async copyImageToClipboard(imgSrc) {\n      try {\n        const response = await fetch(imgSrc);\n        if (!response.ok) {\n          throw new Error(\"网络错误，无法获取图片\");\n        }\n        const blob = await response.blob();\n        const img = new Image();\n        const url = URL.createObjectURL(blob);\n\n        img.onload = async () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          // 使用 Promise 包装 toBlob\n          const pngBlob = await new Promise((resolve) => {\n            canvas.toBlob(resolve, \"image/png\");\n          });\n\n          if (pngBlob) {\n            const item = new ClipboardItem({ \"image/png\": pngBlob });\n            await navigator.clipboard.write([item]); // 使用 await\n            this.$message({\n              message: \"图片已复制到剪贴板\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"转换为 PNG 失败\",\n              type: \"error\",\n            });\n          }\n          URL.revokeObjectURL(url);\n        };\n        img.onerror = () => {\n          this.$message({ message: \"加载图片失败\", type: \"error\" });\n          URL.revokeObjectURL(url); // 确保在错误时也释放 URL\n        };\n        img.src = url;\n      } catch (err) {\n        console.error(\"复制图片失败:\", err);\n        this.$message({ message: \"复制图片失败\", type: \"error\" });\n      }\n    },\n    // 封装下载图片的函数\n    async downloadImage(imgSrc) {\n      try {\n        const link = document.createElement(\"a\");\n        link.href = imgSrc;\n        link.download = \"image.png\";\n        link.click();\n      } catch (err) {\n        console.error(\"保存图片失败：\", err);\n        this.$message({ message: \"保存图片失败\", type: \"error\" });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n#message-menu\n    position: fixed\n    display: flex\n    flex-direction: column\n    justify-content: center\n    background-color: hsla(0, 0%, 100%, .78)\n    backdrop-filter: blur(0.5rem)\n    border-radius: 0.5rem\n    padding: .5rem\n    z-index: 9999\n\n    @keyframes pop-up\n        0%\n            transform: scale(1)\n        50%\n            transform: scale(1.2)\n        100%\n            transform: scale(1)\n\n    & div\n        margin: 0.4rem 0\n        padding: .2rem .4rem\n        border-radius: .2rem\n        display: flex\n        justify-content: space-between\n        align-items: center\n        cursor: pointer\n\n    & div:hover\n        background-color: hsla(0, 0%, 90%, .88)\n\n    & div:hover > i\n        animation: pop-up 0.5s ease-in-out 1 forwards\n\n    & i\n        position: absolute\n        display: flex\n        justify-content: center\n        align-items: center\n        transform-origin: center\n\n\n    & span\n        font-size: 0.8rem\n        color: rgb(120, 124, 127)\n        margin-left: 1.8rem\n</style>\n","<template>\n  <div class=\"add-contactor\">\n    <div class=\"head\">\n      <div class=\"title\">添加机器人</div>\n      <div class=\"close-icon\" @click=\"close\">✕</div>\n    </div>\n    <div class=\"body\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\" />\n        <input\n          v-model=\"keyWord\"\n          type=\"text\"\n          placeholder=\"输入搜索关键词\"\n          @input=\"loadSerachPresets\"\n        />\n      </div>\n      <div class=\"info\">\n        <header class=\"presets-types\">\n          <nav\n            v-for=\"(type, index) in avaliablePresetTypes\"\n            :key=\"index\"\n            :class=\"activeTypeIndex === index ? 'active' : ''\"\n            @click=\"changeShownType(index)\"\n          >\n            {{ type }}\n          </nav>\n        </header>\n        <div :style=\"{ left: buttonTranslate }\" class=\"slide-button\"></div>\n        <div\n          v-if=\"shownPrestsList.length > 0 || [0, 3].includes(activeTypeIndex)\"\n          class=\"presets-list\"\n        >\n          <div\n            v-for=\"(preset, index) in shownPrestsList\"\n            :key=\"index\"\n            class=\"presets-item\"\n          >\n            <div v-if=\"preset.avatar\" class=\"preset-avatar custom\">\n              <img :src=\"preset.avatar\" />\n            </div>\n            <div v-else-if=\"preset.model\" class=\"preset-avatar model\">\n              <img :src=\"Contactor.getAvatarByModel(preset.model)\" />\n            </div>\n            <div v-else class=\"preset-avatar\">\n              {{ preset.name.slice(0, 2) }}\n            </div>\n            <div class=\"preset-info\">\n              <div class=\"preset-name\">{{ preset.name }}</div>\n              <div :title=\"preset.opening\" class=\"preset-description\">\n                {{ preset.opening }}\n              </div>\n            </div>\n            <el-button @click=\"addBot(preset)\">添加</el-button>\n          </div>\n          <div v-show=\"showPresetsLoader\" ref=\"loader\" class=\"loading\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n        <div v-else class=\"empty-list\">\n          <el-empty :image-size=\"200\" />\n        </div>\n      </div>\n      <div class=\"options\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Contactor from \"../lib/contactor\";\nexport default {\n  emits: [\"addBot\", \"close\"],\n  data() {\n    const avaliablePresetTypes = [\"推荐\", \"最近\", \"本地\", \"系统\"];\n    return {\n      show: false,\n      presetsList: [],\n      recommendPresets: [],\n      recentPresets: [],\n      localPresets: [],\n      systemPresets: [],\n      searchPresets: [],\n      systemShownNum: 0,\n      recommendShownNum: 0,\n      keyWord: \"\",\n      activeTypeIndex: 0,\n      buttonTranslate: 0,\n      avaliablePresetTypes,\n      moreSystemPresets: true,\n      moreRecommendPresets: true,\n      observer: null, // Store the observer instance\n      Contactor,\n    };\n  },\n  computed: {\n    showPresetsLoader() {\n      return this.activeTypeIndex == 3\n        ? this.moreSystemPresets\n        : this.activeTypeIndex == 0\n          ? this.moreRecommendPresets\n          : false;\n    },\n    shownPrestsList() {\n      // 如果 keyWord 不为空，返回 searchPresets\n      if (this.keyWord) {\n        return this.searchPresets;\n      }\n      return this.activeTypeIndex === 2\n        ? this.localPresets\n        : this.activeTypeIndex === 1\n          ? this.recentPresets\n          : this.activeTypeIndex === 0\n            ? this.recommendPresets\n            : this.activeTypeIndex === 3\n              ? this.systemPresets\n              : null; // 或者返回默认值\n    },\n  },\n  async mounted() {\n    this.getAddHistory();\n\n    await this.loadSpecificType();\n\n    if (\"IntersectionObserver\" in window) {\n      const callback = (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.loadMoreData();\n          }\n        });\n      };\n\n      this.observer = new IntersectionObserver(callback);\n      const presetsLoader = this.$refs.loader;\n      if (presetsLoader) {\n        this.observer.observe(presetsLoader);\n      }\n    } else {\n      // Fallback for browsers that do not support IntersectionObserver\n      // Use scroll event to detect when the loader is visible.\n      window.addEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  beforeUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    } else {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  methods: {\n    async addBot(preset) {\n      this.strogeAddHistory(preset);\n      this.$emit(\"addBot\", preset);\n      this.$message.success(\"添加成功\");\n    },\n    strogeAddHistory(preset) {\n      // 先检查现有列表中是否有重复项\n      const existingItem = this.recentPresets.find(\n        (item) => item.name === preset.name,\n      );\n      if (existingItem) {\n        // 如果有重复项，将其从数组中移除\n        this.recentPresets.splice(this.recentPresets.indexOf(existingItem), 1);\n      }\n      // 添加新项目到数组的最前面\n      this.recentPresets.unshift(preset);\n      // 检查数组长度并保持在小于或等于6\n      if (this.recentPresets.length > 6) {\n        this.recentPresets.pop(); // 移除最后一个元素，即最旧的元素\n      }\n      // 更新到 localStorage\n      localStorage.setItem(\"addHistory\", JSON.stringify(this.recentPresets));\n    },\n    getAddHistory() {\n      const data = localStorage.getItem(\"addHistory\");\n      if (data) {\n        this.recentPresets = JSON.parse(data);\n      }\n    },\n    async changeShownType(index) {\n      this.activeTypeIndex = index;\n      this.buttonTranslate = `${49.6 * index}px`;\n      await this.loadSpecificType();\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    async loadSpecificType() {\n      const type = this.avaliablePresetTypes[this.activeTypeIndex];\n      this.presetsList = await this.getPresetList(type);\n    },\n    async getPresetList(type) {\n      if (type === \"系统\") {\n        return await this.loadSystemPresets();\n      } else if (type === \"推荐\") {\n        return await this.loadRecommendedPresets();\n      } else if (type === \"最近\") {\n        return this.recentPresets;\n      } else if (type === \"本地\") {\n        return this.localPresets;\n      }\n    },\n    async loadRecommendedPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=recommended&start=${this.recommendShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.recommendPresets.push(res.data[i]);\n      }\n      this.recommendShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreRecommendPresets = false;\n      }\n      return this.recommendPresets;\n    },\n    async loadSystemPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=system&start=${this.systemShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.systemPresets.push(res.data[i]);\n      }\n      this.systemShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreSystemPresets = false;\n      }\n      return this.systemPresets;\n    },\n    async loadSerachPresets() {\n      const load = async () => {\n        const res = await fetch(\n          `/api/openai/presets?type=search&keyword=${this.keyWord}`,\n        ).then((res) => res.json());\n        this.searchPresets = res.data;\n      };\n      // 添加节流逻辑\n      if (this.searchTimer) {\n        clearTimeout(this.searchTimer);\n      }\n      this.searchTimer = setTimeout(() => {\n        load();\n      }, 500);\n    },\n    loadMoreData() {\n      if (this.showPresetsLoader && this.activeTypeIndex === 3) {\n        this.loadSystemPresets();\n      } else if (this.showPresetsLoader && this.activeTypeIndex === 0) {\n        this.loadRecommendedPresets();\n      }\n    },\n    handleScroll() {\n      const loader = this.$refs.loader;\n      if (!loader) return;\n\n      const rect = loader.getBoundingClientRect();\n      const isVisible =\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <=\n          (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <=\n          (window.innerWidth || document.documentElement.clientWidth);\n\n      if (isVisible) {\n        this.loadMoreData();\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.empty-list {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.presets-list {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1rem;\n  height: calc(100% - 3rem);\n  overflow-y: auto;\n}\n\n.preset-description {\n  white-space: nowrap;\n  /* 不换行 */\n  overflow: hidden;\n  /* 内容超出隐藏 */\n  text-overflow: ellipsis;\n  /* 使用省略号 */\n  font-size: 0.8rem;\n  color: #888;\n  width: 100%;\n}\n\n.presets-item button {\n  flex-basis: 60px;\n}\n\n.presets-loader {\n  width: 100%;\n  height: 1rem;\n}\n\n.presets-item {\n  position: relative;\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-basis: 3rem;\n  justify-content: space-around;\n}\n\n.preset-avatar {\n  min-width: 2.8rem;\n  max-width: 2.8rem;\n  height: 2.8rem;\n  background-color: #0099ff;\n  color: #fff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preset-avatar.model {\n  background-color: #ffffff;\n  border-radius: 50%;\n}\n\n.preset-avatar.custom img {\n  width: 100%;\n  border-radius: 50%;\n}\n\n.preset-avatar.model img {\n  width: 90%;\n}\n\n.preset-info {\n  position: relative;\n  margin-left: 0.5rem;\n  width: calc(100% - 7.5rem);\n}\n\n.slide-button {\n  width: 2rem;\n  border-top: #0099ff 2px solid;\n  margin-left: 0.3rem;\n  position: relative;\n  left: 0;\n  transition: left 0.3s;\n}\n\n.body {\n  margin-top: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  overflow: hidden;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.info {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.presets-types {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  width: 100%;\n  margin-top: 1rem;\n  position: relative;\n}\n\n.presets-types nav {\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  margin-right: 0.5rem;\n  border-radius: 0.5rem;\n  font-size: 0.8rem;\n}\n\n.presets-types nav.active {\n  color: #0099ff;\n}\n\n.search {\n  position: relative;\n  box-sizing: border-box;\n  border-bottom: 1px solid #f1f1f1;\n  width: 100%;\n  height: 2em;\n  background-color: #f1f1f1;\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  padding-left: 0.5rem;\n}\n\n.search:has(input:focus) {\n  border: #0099ff 1px solid;\n}\n\n.search input {\n  position: absolute;\n  width: calc(100% - 2rem);\n  height: 1.5rem;\n  background-color: #f1f1f1;\n  border: none;\n  outline: none;\n  margin-left: 1rem;\n}\n\n.search i {\n  position: absolute;\n  font-size: 0.8rem;\n  color: #888;\n}\n\n.add-contactor {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400px;\n  height: 500px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  overflow: hidden;\n}\n\n.head {\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #f1f1f1;\n  font-size: 0.8rem;\n}\n\n.close-icon {\n  width: 1.5rem;\n  font-size: 0.8rem;\n  height: 100%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close-icon:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n@media (max-width: 600px) {\n  .add-contactor {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0;\n  }\n}\n</style>\n<style>\n.loading,\n.loading > div {\n  position: relative;\n  box-sizing: border-box;\n}\n\n.loading {\n  display: block;\n  font-size: 0;\n  color: #000;\n}\n\n.loading.la-dark {\n  color: #333;\n}\n\n.loading > div {\n  display: inline-block;\n  float: none;\n  background-color: currentColor;\n  border: 0 solid currentColor;\n}\n\n.loading {\n  margin-top: 1rem;\n  width: 16px;\n  min-height: 1rem;\n}\n\n.loading > div {\n  position: absolute;\n  top: 0;\n  left: -100%;\n  display: block;\n  width: 16px;\n  width: 100%;\n  height: 16px;\n  height: 100%;\n  border-radius: 100%;\n  opacity: 0.5;\n  animation:\n    ball-circus-position 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1),\n    ball-circus-size 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1);\n}\n\n.loading > div:nth-child(1) {\n  animation-delay:\n    0s,\n    -0.5s;\n}\n\n.loading > div:nth-child(2) {\n  animation-delay:\n    -0.5s,\n    -1s;\n}\n\n.loading > div:nth-child(3) {\n  animation-delay:\n    -1s,\n    -1.5s;\n}\n\n.loading > div:nth-child(4) {\n  animation-delay:\n    -1.5s,\n    -2s;\n}\n\n.loading > div:nth-child(5) {\n  animation-delay:\n    -2s,\n    -2.5s;\n}\n\n@keyframes ball-circus-position {\n  50% {\n    left: 100%;\n  }\n}\n\n@keyframes ball-circus-size {\n  50% {\n    transform: scale(0.3, 0.3);\n  }\n}\n</style>\n","<script>\nimport { client, config } from \"@/lib/runtime.js\";\nimport AddContactor from \"@/components/AddContactor.vue\";\nimport ContextMenu from \"@/components/ContextMenu.vue\";\n\nexport default {\n  components: {\n    AddContactor,\n    ContextMenu,\n  },\n  data() {\n    let list = client.getContactors();\n    const onPhone = window.innerWidth < 600;\n\n    return {\n      onPhone,\n      contactorList: list,\n      showAddOptions: false,\n      showAddWindow: false,\n      showMenu: false,\n      menuX: 0,\n      menuY: 0,\n      selectedFriend: null,\n    };\n  },\n  computed: {\n    sortedList() {\n      return [...this.contactorList].sort((a, b) =>\n        b.priority - a.priority == -1 ? 1 : b.lastUpdate - a.lastUpdate,\n      );\n    },\n  },\n  mounted() {\n    this.addReactiveListener();\n  },\n  beforeCreate() {\n    if (client.getContactors().length == 0) {\n      client.on(\n        \"loaded\",\n        () => {\n          this.contactorList = client.getContactors();\n        },\n        false,\n      );\n    }\n  },\n  methods: {\n    genBotByPreset() {\n      this.showAddOptions = false;\n      this.showAddWindow = true;\n    },\n    showChat(id) {\n      // 如果当前路径 name 是 blank 或者 chat_view ，跳转到 /chat/:id\n      if (this.$route.name == \"blank\" || this.$route.name == \"chat_view\") {\n        this.$router.push({ name: \"chat_view\", params: { id: id } });\n      } else if (\n        this.$route.name == \"contactors\" ||\n        this.$route.name == \"profile_view\"\n      ) {\n        this.$router.push({ name: \"profile_view\", params: { id: id } });\n      } else {\n        // 否则，直接跳转到 /chat/:id\n        this.$router.replace({ name: \"chat_view\", params: { id: id } });\n      }\n    },\n    getId(item) {\n      // 获取当前页面的id\n      let currentId = this.$route.params.id;\n      // 获取当前页面的contactorId\n      let contactorId = item.id;\n      // 如果当前页面的id和contactorId相同，则返回active\n      if (currentId == contactorId) {\n        return \"active\";\n      } else {\n        return item.priority == 0 ? \"important\" : \"\";\n      }\n    },\n    async genBlankBot() {\n      const options = {\n        ...config.openaiDefaultConfig,\n      };\n      const openaiDefaultConfig = {\n        id: this.genFakeId(),\n        title: options.default_model,\n        avatarPolicy: 0,\n        namePolicy: 2,\n        priority: 1,\n        options: options,\n      };\n\n      this.showAddOptions = false;\n      await client.addConcator(\"openai\", openaiDefaultConfig);\n      this.addReactiveListener();\n    },\n    startResize(event) {\n      this.isResizing = true;\n      this.startX = event.clientX;\n      this.startWidth = this.$refs.friendlists.offsetWidth;\n      document.addEventListener(\"mousemove\", this.resize);\n      document.addEventListener(\"mouseup\", this.stopResize);\n    },\n    resize(event) {\n      if (this.isResizing) {\n        // debugger;\n        let newWidth = this.startWidth + (event.clientX - this.startX);\n        const remSize = document.documentElement.style.fontSize\n          ? parseFloat(document.documentElement.style.fontSize)\n          : 16;\n        const maxWidth = 20 * remSize;\n        const minWidth = 12 * remSize;\n        newWidth =\n          newWidth > maxWidth\n            ? maxWidth\n            : newWidth < minWidth\n              ? minWidth\n              : newWidth;\n        this.$refs.friendlists.style.minWidth = newWidth + \"px\";\n        this.$refs.friendlists.style.maxWidth = newWidth + \"px\";\n      }\n    },\n    stopResize() {\n      this.isResizing = false;\n      document.removeEventListener(\"mousemove\", this.resize);\n      document.removeEventListener(\"mouseup\", this.stopResize);\n    },\n    genFakeId() {\n      // 生成5位随机数\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      // 将随机数转换为字符串\n      const randomNumStr = `1${randomNum}`;\n      if (!this.id) {\n        // 将拼接后的字符串转换为数字并返回\n        return parseInt(randomNumStr);\n      } else {\n        // 生成5位随机数\n        const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n        // 将随机数转换为字符串\n        const randomNumStr = `${this.id}${subRandomNum}`;\n        return parseInt(randomNumStr);\n      }\n    },\n    mergeOptions(options) {\n      let result = {};\n      const defaultOptions = config.openaiDefaultConfig;\n      for (const key in defaultOptions) {\n        if (options[key] === undefined) {\n          if (key == \"enable_tool_call\") {\n            if (options.tools) {\n              result[key] = true;\n            }\n            continue;\n          }\n          result[key] = defaultOptions[key];\n        } else {\n          result[key] = options[key];\n        }\n      }\n      return result;\n    },\n    async addPresetContactor(preset) {\n      const contactor = {\n        id: this.genFakeId(),\n        namePolicy: 1,\n        avatarPolicy: preset.avatar ? 1 : 0,\n        avatar: preset.avatar ? preset.avatar : undefined,\n        name: preset.name,\n        title: preset.title,\n        priority: 1,\n        options: this.mergeOptions(preset),\n      };\n      await client.addConcator(\"openai\", contactor);\n      this.addReactiveListener();\n    },\n    showFriendContextMenu(event, friend) {\n      this.selectedFriend = friend;\n      this.menuX = event.clientX;\n      this.menuY = event.clientY;\n      this.showMenu = true;\n\n      const closeMenu = () => {\n        this.showMenu = false;\n        document.removeEventListener(\"click\", closeMenu);\n      };\n      document.addEventListener(\"click\", closeMenu);\n    },\n\n    async handleFriendOption(option) {\n      switch (option) {\n        case \"enter\":\n          this.showChat(this.selectedFriend.id);\n          break;\n        case \"priority\":\n          this.selectedFriend.priority =\n            this.selectedFriend.priority === 0 ? 1 : 0;\n          client.setLocalStorage();\n          break;\n        case \"share\": {\n          const shareResult = await client.shareContactor(\n            this.selectedFriend.id,\n          );\n          if (shareResult) {\n            this.$message({\n              message: \"分享链接已复制\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"分享失败\",\n              type: \"error\",\n            });\n          }\n          break;\n        }\n        case \"delete\": {\n          let index;\n          index = this.contactorList.findIndex(\n            (c) => c.id === this.selectedFriend.id,\n          );\n          if (index !== -1) {\n            this.contactorList.splice(index, 1);\n            client.setLocalStorage();\n          }\n          break;\n        }\n      }\n      this.showMenu = false;\n    },\n\n    addReactiveListener() {\n      this.contactorList.map((contactor) => {\n        contactor.on(\"updateMessageSummary\", () => {\n          contactor.updateMessageSummary();\n        });\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <div id=\"friendlists\" ref=\"friendlists\" :class=\"onPhone ? 'mobile' : ''\">\n    <div id=\"friends\" class=\"upsidebar\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\"></i>\n        <input id=\"main-search\" type=\"text\" placeholder=\"搜索\" />\n      </div>\n      <div class=\"bu-add\">\n        <button\n          id=\"addcont\"\n          title=\"Add Bot\"\n          @click=\"showAddOptions = !showAddOptions\"\n        >\n          <i class=\"iconfont add\"></i>\n        </button>\n        <div\n          v-show=\"showAddOptions\"\n          id=\"add-options\"\n          :style=\"{ left: onPhone ? '-6rem' : '0px' }\"\n        >\n          <ul>\n            <li>\n              <button @click=\"genBlankBot\">新建空白Bot</button>\n            </li>\n            <li>\n              <button @click=\"genBotByPreset\">从预设新建Bot</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"people\">\n      <div\n        v-for=\"(item, index) of sortedList\"\n        :id=\"getId(item)\"\n        :key=\"index\"\n        class=\"lists\"\n        @click=\"showChat(item.id)\"\n        @contextmenu.prevent=\"showFriendContextMenu($event, item)\"\n      >\n        <div\n          class=\"avatar\"\n          :class=\"item.avatarPolicy == 1 ? 'custom' : 'model'\"\n        >\n          <img :src=\"item.avatar\" :alt=\"item.name\" />\n        </div>\n        <div class=\"info\">\n          <div class=\"name\">{{ item.name }}</div>\n          <div id=\"time\" class=\"msginfo\">{{ item.getLastTime() }}</div>\n          <div id=\"msgctt\" class=\"msginfo\">{{ item.lastMessageSummary }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"resizer\" @mousedown=\"startResize\"></div>\n    <AddContactor\n      v-if=\"showAddWindow\"\n      @close=\"showAddWindow = false\"\n      @add-bot=\"addPresetContactor\"\n    ></AddContactor>\n    <ContextMenu\n      v-if=\"showMenu\"\n      type=\"friend\"\n      :message=\"selectedFriend\"\n      :style=\"{\n        position: 'fixed',\n        left: menuX + 'px',\n        top: menuY + 'px',\n      }\"\n      @message-option=\"handleFriendOption\"\n      @close=\"showMenu = false\"\n    />\n  </div>\n</template>\n\n<style scoped>\n#add-options {\n  position: absolute;\n  top: 2.5rem;\n  background-color: white;\n  width: 8rem;\n  height: 3rem;\n  border: 0.0625rem solid rgba(161, 154, 154, 0.626);\n  border-radius: 0.3125rem;\n  z-index: 2;\n}\n#add-options li {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n#add-options ul {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.1);\n}\n#add-options button {\n  background-color: transparent;\n}\n#friendlists {\n  height: 100%;\n  display: flex;\n  min-width: 14rem;\n  max-width: 14rem;\n  flex-direction: column;\n  position: relative;\n}\n\n.resizer {\n  width: 5px;\n  cursor: ew-resize;\n  background-color: transparent; /* 可视化的样式，你可以根据需求进行调整 */\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 100%;\n}\n#friendlists.mobile {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: none;\n}\n\n.upsidebar {\n  justify-content: space-between;\n  display: flex;\n  flex-direction: row;\n  background-color: rgb(255, 255, 255);\n  flex: 0 0 4rem;\n  align-items: flex-end;\n}\n\n#main-search {\n  width: calc(100% - 1.125rem);\n  margin-top: 0.1875rem;\n  padding-left: 0.3125rem;\n  height: 1.125rem;\n  background-color: transparent;\n  border: 0rem;\n}\n\n#main-search:focus {\n  outline: none;\n  border: 0rem;\n}\n\nbutton#searchButton {\n  width: 1rem;\n  border: 0rem;\n  border-radius: 0.3125rem;\n  margin-left: 0.5rem;\n  text-wrap: nowrap;\n}\n\n.search {\n  flex-grow: 1;\n  flex-basis: 1rem;\n  border-radius: 0.3125rem;\n  background-color: rgb(245 245, 245);\n  height: 2rem;\n  display: flex;\n  padding: 0rem 0.5rem;\n  align-items: center;\n  margin: 0 0 0.5rem 0.5rem;\n}\n\n.bu-add {\n  flex-basis: 2rem;\n  font-size: 1rem;\n  margin: 0.5rem;\n  height: 2rem;\n  position: relative;\n}\n\n.listicon {\n  padding-top: 0.0625rem;\n  width: 1rem;\n  height: 1rem;\n}\n\nbutton#addcont {\n  border-radius: 0.3125rem;\n  width: 100%;\n  height: 100%;\n  border: none;\n}\n\n.lists {\n  align-items: center;\n  min-width: 10rem;\n  display: flex;\n  padding: 0.25rem 0.5rem;\n  height: 3.75rem;\n  max-height: 3.75rem;\n  min-height: 3.75rem;\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important {\n  background-color: rgb(240, 240, 240);\n}\n\n.lists:hover {\n  background-color: rgb(240, 240, 240);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important:hover {\n  background-color: rgb(231, 231, 231);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#active {\n  background-color: rgb(0, 153, 255);\n}\n\n.lists > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: white;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n}\n\n.avatar.model > img {\n  scale: 0.9;\n}\n\n.info {\n  height: 100%;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  flex: 0 0 calc(100% - 2.65rem);\n  max-width: calc(100% - 2.65rem);\n  flex-wrap: wrap;\n}\n\n.lists#active * {\n  color: #f0f8ff;\n}\n\n.lists .name {\n  flex-basis: 4rem;\n  flex-grow: 1;\n  margin-top: 0.75rem;\n  font-size: 0.875rem;\n  margin-left: 0.5rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.info #time {\n  font-size: 0.625rem;\n  flex-grow: 1;\n  text-align: right;\n}\n\n.info #msgctt {\n  flex-basis: 100%;\n  padding-right: 1rem;\n  font-size: 0.625rem;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.people {\n  overflow-y: auto;\n}\n</style>\n","<template>\n  <div class=\"presets-list\">\n    <div\n      v-for=\"(message, index) of presetMessages\"\n      :key=\"index\"\n      class=\"preset-message\"\n    >\n      <div class=\"preset-message-block\">\n        <div\n          class=\"message-avatar\"\n          @mouseover=\"hoveredIndex = index\"\n          @mouseleave=\"hoveredIndex = null\"\n        >\n          <div v-if=\"hoveredIndex != index\" class=\"avatar-emoji\">\n            {{ getMessageAvatar(message.role) }}\n          </div>\n          <div\n            v-else\n            title=\"删除消息\"\n            class=\"avatar-emoji hovered\"\n            @click=\"delPresetMessage\"\n          >\n            🗑️\n          </div>\n        </div>\n        <div\n          :ref=\"`message-${index}`\"\n          class=\"message-content\"\n          contenteditable=\"true\"\n          @blur=\"handleMessageUpdate(index)\"\n        >\n          {{ presetMessages[index].content }}\n        </div>\n      </div>\n    </div>\n    <div class=\"messages-buttons\">\n      <el-button title=\"添加系统消息\" plain @click=\"addPresetMessage('system')\"\n        >➕ ⚙️</el-button\n      >\n      <el-button\n        title=\"添加助手消息\"\n        plain\n        @click=\"addPresetMessage('assistant')\"\n        >➕ 🤖</el-button\n      >\n      <el-button title=\"添加用户消息\" plain @click=\"addPresetMessage('user')\"\n        >➕ 👤</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    presetsHistory: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  emits: [\"updatePresets\"],\n  data() {\n    const presetMessages = [...this.presetsHistory];\n    return {\n      presetMessages,\n      hoveredIndex: undefined,\n    };\n  },\n  watch: {\n    presetsHistory(newVal) {\n      this.presetMessages = [...newVal];\n    },\n  },\n  methods: {\n    delPresetMessage() {\n      this.presetMessages.splice(this.hoveredIndex, 1);\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    addPresetMessage(role) {\n      if (role == \"system\" && this.presetMessages.length > 0) {\n        this.$message.warning(\"系统消息必须是第一条消息\");\n        return;\n      }\n      this.presetMessages.push({\n        role,\n        content: \"\",\n      });\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    getMessageAvatar(role) {\n      return role == \"assistant\" ? \"🤖\" : role == \"system\" ? \"⚙️\" : \"👤\";\n    },\n    handleMessageUpdate(index) {\n      this.presetMessages[index].content =\n        this.$refs[`message-${index}`][0].innerText;\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n  },\n};\n</script>\n<style scoped>\n.presets-list {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.messages-buttons {\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin: 0.5rem;\n}\n\n.preset-message {\n  width: 100%;\n}\n\n.preset-message-block {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0.5rem;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.preset-message-block .message-avatar {\n  flex-basis: 2rem;\n  font-size: 2rem;\n  border: 1px solid #ccc;\n  border-radius: 10%;\n}\n\n.message-avatar .hovered {\n  cursor: pointer;\n  box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.493); /* 内阴影 */\n}\n\n.preset-message-block .message-content {\n  margin-left: 0.5rem;\n  font-size: 0.8rem;\n  border: 1px solid #5a9cf8;\n  border-radius: 0.5rem;\n  flex-grow: 1;\n  max-height: 10rem;\n  overflow-y: auto;\n  padding: 0.5rem;\n  min-height: 2rem;\n}\n\n.message-content input {\n  width: 100%;\n  border: none;\n  outline: none;\n}\n</style>\n"],"names":["EventEmitter","constructor","this","events","on","eventName","listener","refresh","off","push","emit","data","forEach","numberString","length","result","characters","i","charAt","Math","floor","random","randomString","RetryManager","options","maxRetries","baseDelay","maxDelay","retryCount","timer","getNextDelay","min","pow","reset","clearTimeout","canRetry","retry","retryFn","Error","delay","Promise","resolve","setTimeout","Socket","id","code","available","url","getURL","socket","requests","heartBeat","retryManager","connectionState","hasSuccessfulWebSocket","URL","window","location","href","host","initEventListeners","handleConnect","handleDisconnect","error","handleConnectError","message","messageHandler","io","engine","transport","name","startHeartbeat","stopHeartbeat","attemptReconnect","switchToPolling","disconnect","path","transports","auth","token","connect","reconnectionAttempts","setInterval","async","connected","res","fetch","timestamp","Date","now","updateDelay","serverRevTime","revTime","currentTime","delayTo","delayBack","clearInterval","close","e","JSON","parse","protocol","request_id","type","sendMessage","stringify","reject","pathArray","split","filter","Boolean","request","timeOut","_","response","splice","indexOf","race","then","catch","streamCompletions","chunk","done","Adapter","client","Onebot","convertMessage","element","index","base64Data","file","replace","messages","node","rplMessage","midMessage","role","time","getTime","content","message_id","status","send","Openai","config","settings","getMessagesSummary","messageChain","query","model","openaiDefaultConfig","messageId","emitEvent","detail","handleUpdateChunk","updateHandlers","reasoningContent","reasoning_content","toolCall","tool_call","handler","handleCompletionChunk","complete","failed","filterValidSettings","validSettingKeys","extraSettingKeys","Object","fromEntries","entries","key","includes","enable_tool_call","tools","updateSettings","AVATAR_BASE_PATH","AVATAR_MAP","OpenAI","Cohere","Anthropic","Google","DeepSeek","avatarPolicy","namePolicy","Contactor","EventEmmiter","platform","title","avatar","priority","firstMessageIndex","active","lastUpdate","createTime","lastMessageSummary","getLastMessageSummary","kernel","enableOpenaiListener","reactive","rawMessage","getMessageById","existingReasonIndex","findIndex","msgElm","text","startTime","endTime","lastMsgElm","isFirstElement","concat","previousCall","find","action","params","updateLastUpdate","_getFilePrompt","fileElms","join","_getValidOpenaiMessage","start","end","max_messages_num","mergedMessages","slice","msg","map","fileList","subArray","elm","formatedMsg","_content_type","tool_calls","function","arguments","tool_call_id","textElm","finalMessages","imageElm","fileElm","filePrompt","image_url","history","updateMessageSummary","webSend","revMessage","retryMessage","webMessage","delMessage","acting","makeSystemMessage","container","getLastTime","last","lastTime","timeDiff","toinit","getHours","toString","padStart","getMinutes","getDay","getFullYear","getMonth","getDate","getShownTime","weekdays","weekday","hours","minutes","getMessageText","updateFirstMessage","loadAvatar","getAvatarByModel","loadName","modelOwner","getOpenaiModelOwner","keys","localforage","localPresets","provider","stream","temperature","top_p","frequency_penalty","presence_penalty","opening","openaiTools","onebotDefaultConfig","displayConfig","loadOpenaiTools","_loadStrogeConfig","setDisplayConfig","localStorage","setItem","setOpenaiModels","models","openaiModels","_saveStrogeConfig","getOpenaiModels","group","modelGroup","owner","updateDisplayConfig","patch","getDisplayConfig","getItem","updateOpenaiDefaultConfig","json","values","loadOnebotDefaultConfig","onebotOptionsData","onebotOptionsJson","assign","inited","everLogin","isConnected","contactList","qq","bot_qq","onPhone","displaySettings","beforeInit","setBaseInfo","localConfig","getLocalStorage","loadLocalStorage","genFakeId","genDefaultConctor","Infinity","addConcator","default_model","tool","bot","setLocalStorage","rmContactor","list","item","loadOriginalContactors","shareId","contactor","getContactor","shareContactor","uploadResult","setOriginalContactor","previewImage","shareUrl","originalUrl","document","origin","clipboard","navigator","writeText","body","method","headers","clear","reload","init","login","getContactors","onebotId","subRandomNum","parseInt","randomNum","info","addMsgListener","onebotContactors","onebotContactor","logout","admin_qq","innerWidth","getDisplaySettings","getLoginHistory","uploadFile","fileOrImage","isImage","onProgress","startsWith","uploadImage","chunkSize","md5Hash","uploadChunk","totalChunks","formData","FormData","append","xhr","XMLHttpRequest","open","upload","onprogress","event","lengthComputable","chunkProgress","loaded","total","overallProgress","round","onload","statusText","onerror","uploadFileChunks","ceil","size","currentChunk","md5","filename","ok","finalizeUpload","worker","UploadWorker","postMessage","onmessage","hash","terminate","_convertBlobToBase64","blob","reader","FileReader","onloadend","readAsDataURL","PageStatus","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_5","_hoisted_6","defaultAvatar","processedImage","activePage","adminAvatar","computed","isChatActive","isProfileActive","watch","$route","newRoute","getPageStatusFromRoute","immediate","mounted","adminId","methods","imageUrl","canvas","createElement","ctx","getContext","img","Image","crossOrigin","src","width","height","drawImage","centerX","centerY","radius","beginPath","arc","PI","clip","clearRect","toBlob","createObjectURL","toChat","$router","toProfile","toConfig","processImage","route","_openBlock","_createElementBlock","_createElementVNode","$data","alt","_hoisted_4","_normalizeClass","$options","onClick","args","target","props","fullScreen","default","emits","preview","created","URLSearchParams","search","get","waiting","$message","configFullScreen","$emit","$props","$event","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","components","MdPreview","Array","showBox","_Fragment","_cache","_renderList","_toDisplayString","_createBlock","_component_MdPreview","_component_el_image","style","margin","fit","_createCommentVNode","_hoisted_13","activeContactor","required","userInput","selectedOption","cursorPosition","showemoji","onebotPresets","uploaded","files","images","isPasting","extraOptions","loadSelected","initExtraOptions","textareaRef","$refs","textarea","addEventListener","adjustTextareaHeight","handleDragOver","preventDefault","backgroundColor","handleDragLeave","handleDrop","dataTransfer","handleDroppedFile","handlePaste","items","clipboardData","getAsFile","handleUploadImage","originalEvent","getData","execCommand","innerText","unmounted","removeEventListener","ctrlEmojiPanel","focus","File","handleFileUpload","fileInput","accept","format","handleChange","click","uploadDocumentFile","success","maxSizeByte","maxSizeMB","fileType","toLowerCase","insertImageToTextarea","mimeType","quality","imageName","imageElement","maxWidth","maxHeight","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","fragment","createContextualFragment","outerHTML","insertNode","newRange","newSelection","value","label","children","textwraper","getOpenaiModelArray","wrapText","rawText","preset","getOnebotPreset","reduce","acc","child","scrollHeight","getWraperName","getemoji","inputer","sel","unicode","startPos","endPos","textBeforeCursor","substring","textAfterCursor","innerHTML","setStart","firstChild","setEnd","updateCursorPosition","rangeCount","getRangeAt","startOffset","endOffset","presend","querySelectorAll","ImageSrcs","from","getSafeText","wrappedMessage","imgUrl","repliedMessageId","replyData","cleanScreen","activeBotTools","isValidInput","input","trim","handleKeyDown","ctrlKey","handleInput","ref","onEmojiClick","_withModifiers","_createVNode","_component_el_tree_select","modelValue","onChange","_ctx","contenteditable","placeholder","onKeydown","onInput","disabled","fileUrl","String","file_name","file_type","formated_file_size","iconClass","bits","formatFileSize","unitIndex","toFixed","toUpperCase","_hoisted_14","showExtraInfo","toolCallSuccess","toolCallFail","call_status","viewBox","xmlns","points","t","version","d","Number","show","getReasonInfo","updateMaxHeight","updated","toggleShow","reasonContent","_normalizeStyle","seletedText","seletedImage","copySeletedImage","copyImageToClipboard","saveSeletedImage","downloadImage","copyText","copyTextToClipboard","copySeletedText","replyMessage","deleteMessage","enterChat","togglePriority","shareBot","deleteBot","position","left","appendChild","select","setSelectionRange","err","removeChild","imgSrc","pngBlob","ClipboardItem","write","revokeObjectURL","link","download","_hoisted_15","_hoisted_16","AddContactor","presetsList","recommendPresets","recentPresets","systemPresets","searchPresets","systemShownNum","recommendShownNum","keyWord","activeTypeIndex","buttonTranslate","avaliablePresetTypes","moreSystemPresets","moreRecommendPresets","observer","showPresetsLoader","shownPrestsList","getAddHistory","loadSpecificType","callback","entry","isIntersecting","loadMoreData","IntersectionObserver","presetsLoader","loader","observe","handleScroll","beforeUnmount","addBot","strogeAddHistory","existingItem","unshift","pop","changeShownType","getPresetList","loadSystemPresets","loadRecommendedPresets","loadSerachPresets","load","searchTimer","rect","getBoundingClientRect","top","bottom","innerHeight","documentElement","clientHeight","right","clientWidth","_component_el_button","_withCtx","_createTextVNode","_withDirectives","_hoisted_17","_hoisted_18","_component_el_empty","ContextMenu","contactorList","showAddOptions","showAddWindow","showMenu","menuX","menuY","selectedFriend","sortedList","sort","a","b","addReactiveListener","beforeCreate","genBotByPreset","showChat","getId","genBlankBot","startResize","isResizing","startX","clientX","startWidth","friendlists","offsetWidth","resize","stopResize","newWidth","remSize","fontSize","parseFloat","minWidth","randomNumStr","mergeOptions","defaultOptions","addPresetContactor","showFriendContextMenu","friend","clientY","closeMenu","handleFriendOption","option","c","onContextmenu","onMousedown","_component_AddContactor","onClose","onAddBot","_component_ContextMenu","onMessageOption","presetsHistory","presetMessages","hoveredIndex","newVal","delPresetMessage","addPresetMessage","warning","getMessageAvatar","handleMessageUpdate","onMouseover","onMouseleave","ref_for","onBlur","plain"],"mappings":"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"}