{"version":3,"file":"components-CXTeYlak.js","sources":["../../../src/lib/event.js","../../../src/utils/generate.js","../../../src/lib/retry-manager.js","../../../src/lib/websocket.js","../../../src/lib/adapter/adapter.js","../../../src/lib/adapter/onebot.js","../../../src/lib/adapter/openai.js","../../../src/lib/contactor.js","../../../src/lib/client.js","../../../src/lib/config.js","../../../src/lib/runtime.js","../../../src/components/SideBar.vue","../../../src/components/DisplayButtons.vue","../../../src/components/ForwardMsg.vue","../../../src/components/InputEditor.vue","../../../src/components/FileBlock.vue","../../../src/components/ToolCallBar.vue","../../../src/components/ReasonBlock.vue","../../../src/components/ContextMenu.vue","../../../src/components/AddContactor.vue","../../../src/components/FriendList.vue","../../../src/components/PresetsList.vue"],"sourcesContent":["export default class EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n  on(eventName, listener, refresh = true) {\n    // 如果 refresh 为真，删除之前的回调函数\n    if (refresh) {\n      this.off(eventName);\n    }\n    // 如果事件名不存在，则初始化为一个空数组\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n    // 添加新的回调函数到数组中\n    this.events[eventName].push(listener);\n  }\n  emit(eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach((listener) => {\n        listener(data);\n      });\n    }\n  }\n  off(eventName) {\n    if (this.events[eventName]) {\n      delete this.events[eventName];\n    }\n  }\n}\n","export function uuidString() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function numberString(length) {\n  let result = \"\";\n  const characters = \"0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function randomString(length) {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","/**\n * 重试管理器类\n * 实现指数退避算法的重连机制\n */\nexport default class RetryManager {\n  constructor(options = {}) {\n    this.maxRetries = options.maxRetries || 10;\n    this.baseDelay = options.baseDelay || 1000;\n    this.maxDelay = options.maxDelay || 30000;\n    this.retryCount = 0;\n    this.timer = null;\n  }\n\n  /**\n   * 计算下一次重试的延迟时间\n   * @returns {number} 延迟时间（毫秒）\n   */\n  getNextDelay() {\n    const delay = Math.min(\n      this.maxDelay,\n      this.baseDelay * Math.pow(2, this.retryCount),\n    );\n    return delay + Math.random() * 1000; // 添加随机抖动\n  }\n\n  /**\n   * 重置重试计数器\n   */\n  reset() {\n    this.retryCount = 0;\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n\n  /**\n   * 检查是否可以继续重试\n   * @returns {boolean} 是否可以继续重试\n   */\n  canRetry() {\n    return this.retryCount < this.maxRetries;\n  }\n\n  /**\n   * 执行重试操作\n   * @param {Function} retryFn 重试函数\n   * @returns {Promise} 重试操作的Promise\n   */\n  async retry(retryFn) {\n    if (!this.canRetry()) {\n      throw new Error(\"已达到最大重试次数\");\n    }\n\n    const delay = this.getNextDelay();\n    this.retryCount++;\n\n    await new Promise((resolve) => {\n      this.timer = setTimeout(resolve, delay);\n    });\n\n    return retryFn();\n  }\n}\n","import EventEmitter from \"./event.js\";\nimport { randomString } from \"../utils/generate.js\";\nimport RetryManager from \"./retry-manager.js\";\n\n/**\n * WebSocket Connection Class\n * 处理WebSocket连接、消息收发、心跳检测和断线重连\n */\nexport default class Socket extends EventEmitter {\n  /**\n   * 创建Socket实例\n   * @param {String} id - 机器人QQ号\n   * @param {String} code - 登录令牌\n   */\n  constructor(id, code) {\n    super();\n    this.available = null;\n    this.url = this.getURL();\n    this.socket = null;\n    this.code = code;\n    this.id = id;\n    this.requests = [];\n    this.heartBeat = null;\n    this.delay = null;\n    this.retryManager = new RetryManager({\n      maxRetries: 10,\n      baseDelay: 1000,\n      maxDelay: 30000,\n    });\n    this.connectionState = \"disconnected\";\n    this.hasSuccessfulWebSocket = false;\n  }\n\n  /**\n   * 获取WebSocket URL\n   * @returns {String} WebSocket URL\n   */\n  getURL() {\n    const url = new URL(window.location.href);\n    return url.host;\n  }\n\n  /**\n   * 初始化WebSocket事件监听器\n   */\n  initEventListeners() {\n    this.socket.on(\"connect\", () => this.handleConnect());\n    this.socket.on(\"disconnect\", () => this.handleDisconnect());\n    this.socket.on(\"connect_error\", (error) => this.handleConnectError(error));\n    this.socket.on(\"message\", (message) => this.messageHandler(message));\n  }\n\n  /**\n   * 处理连接成功事件\n   */\n  handleConnect() {\n    this.available = true;\n    this.connectionState = \"connected\";\n    if (this.socket?.io?.engine?.transport?.name === \"websocket\") {\n      this.hasSuccessfulWebSocket = true;\n    }\n    this.retryManager.reset();\n    console.log(\"SocketIO连接成功\");\n    this.startHeartbeat();\n  }\n\n  /**\n   * 处理断开连接事件\n   */\n  handleDisconnect() {\n    this.available = false;\n    this.connectionState = \"disconnected\";\n    this.stopHeartbeat();\n    console.error(\"SocketIO连接断开\");\n    this.attemptReconnect();\n  }\n\n  /**\n   * 处理连接错误事件\n   */\n  handleConnectError(error) {\n    console.error(\"SocketIO连接出错\", error);\n    if (this.socket?.io?.engine?.transport?.name === \"websocket\") {\n      if (!this.hasSuccessfulWebSocket) {\n        this.switchToPolling();\n      } else {\n        console.log(\"之前WebSocket连接成功过，继续尝试WebSocket重连\");\n        this.attemptReconnect();\n      }\n    } else {\n      this.connectionState = \"failed\";\n      console.log(\"已经在轮询模式，放弃重连\");\n      this.disconnect();\n    }\n  }\n\n  /**\n   * 切换到轮询模式\n   */\n  switchToPolling() {\n    console.log(\"WebSocket 连接失败，切换到轮询模式...\");\n    this.disconnect();\n    const socket = io(this.url, {\n      path: \"/socket.io\",\n      transports: [\"polling\"],\n      auth: { id: this.id, token: this.code },\n    });\n    this.socket = socket;\n    this.initEventListeners();\n  }\n\n  /**\n   * 尝试重新连接\n   */\n  async attemptReconnect() {\n    if (this.connectionState === \"reconnecting\") return;\n    this.connectionState = \"reconnecting\";\n\n    try {\n      await this.retryManager.retry(() => this.connect());\n    } catch (error) {\n      console.error(\"重连失败，已达到最大重试次数\", error);\n      this.connectionState = \"failed\";\n      this.emit(\"reconnect_failed\");\n    }\n  }\n\n  /**\n   * 连接到SocketIO服务器\n   */\n  async connect() {\n    this.socket = io(this.url, {\n      path: \"/socket.io\",\n      transports: [\"websocket\", \"polling\"],\n      auth: { id: this.id, token: this.code },\n      reconnectionAttempts: 0, // 禁用socket.io的自动重连，使用我们自己的重连机制\n    });\n    console.log(\"SocketIO连接中...\");\n    this.initEventListeners();\n  }\n\n  /**\n   * 启动心跳检测\n   */\n  startHeartbeat() {\n    this.heartBeat = setInterval(async () => {\n      if (this.socket?.connected) {\n        try {\n          const res = await this.fetch(\"/api/system/heartbeat\", {\n            timestamp: Date.now(),\n          });\n          this.updateDelay(res);\n        } catch (error) {\n          if (this.connectionState === \"failed\") {\n            console.error(\"心跳检测失败\", error);\n          }\n        }\n      }\n    }, 3000);\n  }\n\n  /**\n   * 更新延迟信息\n   */\n  updateDelay(res) {\n    const serverRevTime = res.revTime;\n    const currentTime = Date.now();\n    const delayTo = res.delay;\n    const delayBack = currentTime - serverRevTime;\n    this.delay = delayTo + delayBack;\n  }\n\n  /**\n   * 停止心跳检测\n   */\n  stopHeartbeat() {\n    if (this.heartBeat) {\n      clearInterval(this.heartBeat);\n      this.heartBeat = null;\n    }\n  }\n\n  /**\n   * 断开WebSocket连接\n   */\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n      this.available = false;\n      this.stopHeartbeat();\n      console.log(\"WebSocket连接已断开\");\n    }\n  }\n\n  /**\n   * 处理接收到的消息\n   * @param {String} message - 接收到的消息\n   */\n  messageHandler(message) {\n    try {\n      const e = JSON.parse(message);\n      if (e.protocol === \"llm\") {\n        this.emit(e.request_id, e);\n      }\n      if (e.protocol === \"onebot\") {\n        this.emit(\"onebot_message\", e);\n      } else if (e.protocol === \"system\") {\n        if (e.type === \"login\") this.emit(\"connect\", e.data);\n        this.emit(\"system_message\", e);\n      }\n    } catch (error) {\n      console.error(\"JSON解析失败:\", error);\n    }\n  }\n\n  /**\n   * 发送消息\n   * @param {Object} message - 要发送的消息对象\n   */\n  sendMessage(message) {\n    if (this.available) {\n      this.socket.emit(\"message\", JSON.stringify(message));\n    } else {\n      console.log(\"SocketIO 连接不可用\");\n    }\n  }\n\n  /**\n   * 发送请求并等待响应\n   * @param {String} url - API端点\n   * @param {Object} data - 请求数据\n   * @returns {Promise<any>} 响应数据\n   */\n  fetch(url, data) {\n    return new Promise((resolve, reject) => {\n      const pathArray = url.split(\"/\").filter(Boolean);\n      const request = {\n        request_id: randomString(16),\n        protocol: pathArray[1],\n        type: pathArray[2],\n        id: pathArray[3],\n        data: data,\n      };\n\n      this.requests.push(request.request_id);\n\n      const timeOut = new Promise((_, reject) => {\n        setTimeout(() => reject(\"timeout\"), 60000);\n      });\n\n      const response = new Promise((resolve) => {\n        this.on(request.request_id, (res) => {\n          this.requests.splice(this.requests.indexOf(request.request_id), 1);\n          resolve(res.data);\n        });\n      });\n\n      Promise.race([timeOut, response]).then(resolve).catch(reject);\n\n      this.sendMessage(request);\n      if (request.type !== \"heartbeat\") {\n        console.log(\"WebSocket发送请求\", url, request);\n      }\n    });\n  }\n\n  /**\n   * 流式获取补全数据\n   * @param {Object} data - 补全请求数据\n   * @returns {AsyncGenerator<any>} - 补全数据生成器\n   */\n  async *streamCompletions(data) {\n    console.log(\"WebSocket开始流式获取补全数据\");\n    const request = {\n      request_id: randomString(16),\n      protocol: \"llm\",\n      type: \"completions\",\n      data: data,\n    };\n\n    this.requests.push(request.request_id);\n    this.sendMessage(request);\n    console.log(\"WebSocket发送请求\", request);\n\n    try {\n      while (true) {\n        const chunk = await new Promise((resolve, reject) => {\n          this.on(request.request_id, (data) => {\n            if (data.message === \"update\") {\n              resolve(data);\n            } else if (\n              data.message === \"complete\" ||\n              data.message === \"failed\"\n            ) {\n              this.off(request.request_id);\n              reject({ done: true, data: data });\n            }\n          });\n        });\n        yield chunk;\n      }\n    } catch (e) {\n      if (e.done) {\n        console.log(\"WebSocket流式获取补全数据结束\", e.data.message);\n        yield e.data;\n        return;\n      }\n      throw e;\n    }\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport EventEmitter from \"../event.js\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default class Adapter extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  async fetch(url, data) {\n    return await client.socket.fetch(url, data);\n  }\n}\n","import Adapter from \"./adapter.js\";\n\nexport default class Onebot extends Adapter {\n  constructor() {\n    super();\n  }\n\n  convertMessage(data) {\n    console.log(data);\n    data.message.forEach((element, index) => {\n      if (element.type === \"image\") {\n        const base64Data = element.data.file.replace(\n          /^base64:\\/\\//,\n          \"data:image/jpeg;base64,\",\n        );\n        data.message[index].data.file = base64Data;\n        console.log(data.message[index]);\n      } else if (element.type === \"nodes\") {\n        element.data.messages.forEach((node) => {\n          if (node.type === \"image\") {\n            const base64Data = node.data.file.replace(\n              /^base64:\\/\\//,\n              \"data:image/jpeg;base64,\",\n            );\n            node.data.file = base64Data;\n          }\n        });\n      }\n    });\n\n    const rplMessage = data.message.filter(\n      (element) => element.type === \"reply\",\n    );\n    const midMessage = data.message.filter(\n      (element) => element.type !== \"reply\",\n    );\n    if (rplMessage.length > 0) {\n      midMessage.push(rplMessage[0]);\n    }\n\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: midMessage,\n      id: data.message_id,\n      status: \"completed\",\n    };\n    return webMessage;\n  }\n\n  /**\n   * Send message to server\n   * @param {id} string\n   * @param {WebMessage} message\n   * @returns {Promise<number>} message_id\n   */\n  async send(id, message) {\n    const response = await this.fetch(\n      \"/api/onebot/message\" + `/${id}`,\n      message,\n    );\n    return response.message_id;\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Adapter from \"./adapter.js\";\nimport { client, config } from \"../runtime.js\";\nimport { numberString } from \"../../utils/generate.js\";\n\nexport default class Openai extends Adapter {\n  constructor(config) {\n    super();\n    this.settings = config.settings || {};\n  }\n\n  convertMessage(message) {\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: [{ type: \"blank\", data: {} }],\n      status: \"pending\",\n      id: numberString(16),\n    };\n    const mergedMessage = { ...webMessage, ...message };\n    return mergedMessage;\n  }\n\n  async getMessagesSummary(messageChain) {\n    const query = `请你根据以下对话的内容\\n${JSON.stringify(messageChain)}\\n，总结出一个简短的对话主题,不得超出10个字。`;\n    const messages = {\n      model: config.LLMDefaultConfig.model,\n      messages: [{ role: \"user\", content: query }],\n    };\n\n    const response = await this.fetch(`/api/llm/completions`, messages);\n    const { content } = response;\n    return content;\n  }\n\n  async send(messages, messageId, settings) {\n    console.log(\"send message to openai\");\n\n    const emitEvent = (eventName, detail) => {\n      this.emit(eventName, { ...detail, messageId });\n    };\n\n    const handleUpdateChunk = (chunk) => {\n      const updateHandlers = {\n        reasoningContent: (content) =>\n          emitEvent(\"updateReasoning\", { reasoning_content: content }),\n        content: (content) => emitEvent(\"updateMessage\", { chunk: content }),\n        toolCall: (tool_call) => emitEvent(\"updateToolCall\", { tool_call }),\n      };\n\n      const data = chunk.data;\n      const handler = updateHandlers[data.type];\n      if (handler) {\n        handler(data.content);\n      }\n    };\n\n    const handleCompletionChunk = (chunk) => {\n      const completionHandlers = {\n        complete: () => emitEvent(\"completeMessage\", {}),\n        failed: () => emitEvent(\"failedMessage\", { error: chunk.data }),\n      };\n\n      const handler = completionHandlers[chunk.message];\n      if (handler) {\n        handler();\n      }\n    };\n\n    const filterValidSettings = (settings) => {\n      const validSettingKeys = [\n        \"top_p\",\n        \"temperature\",\n        \"stream\",\n        \"model\",\n        \"frequency_penalty\",\n        \"presence_penalty\",\n      ];\n\n      const extraSettingKeys = [\"tools\", \"provider\"];\n\n      return settings\n        ? Object.fromEntries(\n            Object.entries(settings).filter(\n              ([key]) =>\n                validSettingKeys.includes(key) ||\n                extraSettingKeys.includes(key),\n            ),\n          )\n        : {};\n    };\n\n    try {\n      // Apply settings defaults\n      const data = {\n        ...filterValidSettings(settings || {}), // Default to empty object\n        messages,\n      };\n\n      if (!settings?.enable_tool_call) {\n        // Use optional chaining\n        data.tools = [];\n      }\n\n      console.log(\"Data sent to OpenAI:\", data);\n\n      for await (const chunk of client.socket.streamCompletions(data)) {\n        console.log(\"Received chunk from OpenAI:\", chunk);\n        if (chunk.message === \"update\") {\n          handleUpdateChunk(chunk);\n        } else if ([\"complete\", \"failed\"].includes(chunk.message)) {\n          handleCompletionChunk(chunk);\n          break;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error in send:\", error);\n      emitEvent(\"failedMessage\", { error: \"Stream processing error\" });\n    }\n  }\n\n  updateSettings(settings) {\n    this.settings = settings;\n  }\n}\n","import Onebot from \"./adapter/onebot.js\";\nimport Openai from \"./adapter/openai.js\";\nimport EventEmmiter from \"./event.js\";\nimport { numberString } from \"../utils/generate.js\";\nimport { config } from \"@/lib/runtime.js\";\n\nconst AVATAR_BASE_PATH =\n  \"https://registry.npmmirror.com/@lobehub/icons-static-svg/latest/files/icons\";\n\nconst AVATAR_MAP = {\n  OpenAI: \"openai.svg\",\n  Cohere: \"cohere-color.svg\",\n  Anthropic: \"claude-color.svg\",\n  Google: \"gemini-color.svg\",\n  \"X.AI\": \"grok.svg\",\n  DeepSeek: \"deepseek-color.svg\",\n  智谱清言: \"zhipu-color.svg\",\n  豆包: \"doubao-color.svg\",\n  \"月之暗面 (kimi)\": \"moonshot.svg\",\n  科大讯飞: \"spark-color.svg\",\n  通义千问: \"qwen-color.svg\",\n  腾讯混元: \"hunyuan-color.svg\",\n};\n\nconst avatarPolicy = [\"MODEL\", \"CUSTOM\"];\n\nconst namePolicy = [\"MODEL\", \"CUSTOM\", \"SUMMARY\"];\n\nexport default class Contactor extends EventEmmiter {\n  /**\n   * Constructor of Contactor class\n   * @param {string} platform - Platform of contactor\n   * @param {object} config - Configuration of contactor\n   * @param {string} config.id - ID of the contactor\n   * @param {string} config.name - Name of the contactor\n   * @param {string} config.avatar - Avatar of the contactor\n   * @param {string} config.title - Title of the contactor\n   * @param {object} config.options - Options of the contactor\n   * @param {number} config.priority - Priority of the contactor,from 0 to 1, 0 means highest priority\n   */\n  constructor(platform, config) {\n    super();\n    this.platform = platform;\n    this.id = config.id;\n    this.options = config.options;\n    this.namePolicy = config.namePolicy || 0;\n    this.avatarPolicy = config.avatarPolicy || 0;\n    this.title = config.title;\n    this.name = config.name;\n    this.avatar = config.avatar;\n    this.priority = config.priority;\n    this.firstMessageIndex = 0;\n    this.messageChain = config.messageChain || [];\n    this.active = false;\n    this.lastUpdate = config.lastUpdate || new Date().getTime();\n    this.createTime = config.createTime || new Date().getTime();\n\n    this.lastMessageSummary = this.getLastMessageSummary();\n    this.kernel =\n      this.platform == \"onebot\" ? new Onebot(config) : new Openai(config);\n\n    if (this.platform == \"openai\") this.enableOpenaiListener();\n  }\n\n  toJSON() {\n    // 存储的时候去掉ref\n    return {\n      platform: this.platform,\n      id: this.id,\n      options: this.options,\n      namePolicy: this.namePolicy,\n      avatarPolicy: this.avatarPolicy,\n      title: this.title,\n      name: this.name,\n      avatar: this.avatar,\n      priority: this.priority,\n      messageChain: this.messageChain,\n      active: this.active,\n      lastUpdate: this.lastUpdate,\n      createTime: this.createTime,\n      lastMessageSummary: this.lastMessageSummary,\n    };\n  }\n\n  enableOpenaiListener() {\n    this.kernel.on(\"updateReasoning\", (e) => {\n      const { reasoning_content, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      // 查找现有的 reason 块\n      const existingReasonIndex = rawMessage.content.findIndex(\n        (msgElm) => msgElm.type === \"reason\",\n      );\n\n      const msgElm = {\n        type: \"reason\",\n        data: {\n          text: reasoning_content,\n          startTime: new Date().getTime(),\n          endTime: 0,\n        },\n      };\n\n      if (existingReasonIndex !== -1) {\n        // 如果已存在 reason 块，更新其内容\n        msgElm.data.text =\n          rawMessage.content[existingReasonIndex].data.text + reasoning_content;\n        msgElm.data.startTime =\n          rawMessage.content[existingReasonIndex].data.startTime;\n        rawMessage.content[existingReasonIndex] = msgElm;\n      } else if (rawMessage.content[0].type === \"blank\") {\n        // 如果是 blank 状态，直接更新第一个元素\n        rawMessage.content[0] = msgElm;\n      } else {\n        // 其他情况，追加到末尾\n        rawMessage.content.push(msgElm);\n      }\n\n      this.emit(\"updateMessage\");\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateMessage\", (e) => {\n      const { chunk, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      rawMessage.content.forEach((msgElm) => {\n        if (msgElm.type == \"reason\" && !msgElm.data.endTime)\n          msgElm.data.endTime = new Date().getTime();\n      });\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const isFirstElement = [\"blank\", \"text\"].includes(lastMsgElm.type);\n\n      const msgElm = {\n        type: \"text\",\n        data: {\n          text: (lastMsgElm.type == \"text\" ? lastMsgElm.data.text : \"\").concat(\n            chunk,\n          ),\n        },\n      };\n\n      if (isFirstElement)\n        rawMessage.content[rawMessage.content.length - 1] = msgElm;\n      else rawMessage.content.push(msgElm);\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateToolCall\", (e) => {\n      const { tool_call, messageId } = e;\n      console.log(tool_call);\n\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const msgElm = {\n        type: \"tool_call\",\n        data: tool_call,\n      };\n\n      if (lastMsgElm.type == \"blank\") {\n        // 这种情况一定是第一条空白消息，直接更新成 toolCall 消息\n        rawMessage.content[0] = msgElm;\n      } else {\n        const previousCall = rawMessage.content.find(\n          (msgElm) => msgElm.data.id == tool_call.id,\n        );\n        if (previousCall) {\n          // 这种情况就是更新之前的 toolCall 消息\n          previousCall.data = tool_call;\n          if (tool_call.action == \"pending\") {\n            previousCall.data.params += tool_call.params;\n          }\n        } else {\n          // 这种情况就是新增一条 toolCall 消息\n          rawMessage.content.push(msgElm);\n        }\n      }\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"completeMessage\", (e) => {\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          messageId,\n        });\n      }\n    });\n\n    this.kernel.on(\"failedMessage\", (e) => {\n      console.error(e);\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          text: \"请求发生错误！\\n```json\\n\" + e.error + \"\\n```\\n\",\n          messageId,\n          error: true,\n        });\n      }\n    });\n  }\n\n  /**\n   * Send message to contactor\n   * @param {OnebotMessage} message\n   */\n  async send(message) {\n    await this.kernel.send(message);\n  }\n\n  _getFilePrompt(fileElms) {\n    const start = \"以下是用户上传的文件：\\n\";\n    return start + fileElms.join(\"\\n\");\n  }\n\n  _getValidOpenaiMessage(\n    start = this.firstMessageIndex,\n    end = this.messageChain.length,\n    length = this.options.max_messages_num,\n  ) {\n    const cuttedMessageList = this.messageChain\n      .slice(start, end)\n      .slice(-length);\n\n    const validMessageList = cuttedMessageList.filter(\n      (msg) => msg.role != \"mio_system\",\n    );\n\n    const mergedMessages = validMessageList.map((message) => {\n      const fileList = [];\n      const subArray = [];\n      message.content.forEach((elm) => {\n        const role =\n          elm.type == \"tool_call\"\n            ? \"tool\"\n            : message.role == \"user\"\n              ? \"user\"\n              : \"assistant\";\n        const formatedMsg = {\n          role: role,\n          content: \"none\",\n          _content_type: undefined,\n        };\n        if (role == \"tool\") {\n          formatedMsg.role = \"assistant\";\n          formatedMsg.content = null;\n          formatedMsg.tool_calls = [\n            {\n              id: elm.data.id,\n              function: {\n                name: elm.data.name,\n                arguments: elm.data.params,\n              },\n              type: \"function\",\n            },\n          ];\n          subArray.push({ ...formatedMsg });\n\n          delete formatedMsg.tool_calls;\n          formatedMsg.role = \"tool\";\n          formatedMsg.content = JSON.stringify(elm.data.result);\n          formatedMsg.tool_call_id = elm.data.id;\n          subArray.push({ ...formatedMsg });\n\n          formatedMsg.role = role;\n        } else if (role == \"user\" || role == \"assistant\") {\n          if (elm.type == \"text\") {\n            formatedMsg.content = elm.data.text;\n            formatedMsg._content_type = \"text\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"image\") {\n            formatedMsg.content = elm.data.file;\n            formatedMsg._content_type = \"image\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"file\") {\n            fileList.push(elm.data.file);\n          }\n        }\n      });\n      if (fileList.length > 0) {\n        const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n        textElm[0].content = textElm[0].content + this._getFilePrompt(fileList);\n      }\n      return subArray;\n    });\n    let finalMessages = [];\n\n    mergedMessages.forEach((subArray) => {\n      const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n      const imageElm = subArray.filter((elm) => elm._content_type == \"image\");\n      const fileElm = subArray.filter((elm) => elm._content_type == \"file\");\n      const filePrompt = fileElm.length > 0 ? this._getFilePrompt(fileElm) : \"\";\n      let message = null;\n      if (\n        textElm.length > 0 &&\n        imageElm.length > 0 &&\n        imageElm[0].role == \"user\"\n      ) {\n        message = {\n          role: \"user\",\n          content: [\n            ...textElm.map((elm) => {\n              return {\n                type: \"text\",\n                text: elm.content + filePrompt,\n              };\n            }),\n            ...imageElm.map((elm) => {\n              return {\n                type: \"image_url\",\n                image_url: {\n                  url: elm.content,\n                },\n              };\n            }),\n          ],\n        };\n      }\n      if (message?.content.length == subArray.length) {\n        finalMessages.push(message);\n      } else {\n        subArray.forEach((elm) => {\n          delete elm._content_type;\n        });\n        finalMessages.push(...subArray);\n      }\n    });\n\n    if (this.options.history) {\n      finalMessages = this.options.history.concat(finalMessages);\n    }\n\n    return finalMessages;\n  }\n  updateMessageSummary() {\n    this.lastMessageSummary = this.getLastMessageSummary();\n  }\n\n  /**\n   * 从网页前端发来的消息\n   */\n  async webSend(message) {\n    this.updateLastUpdate();\n    this.messageChain.push(message);\n    this.updateMessageSummary();\n    if (this.platform == \"onebot\") {\n      const messageId = await this.kernel.send(this.id, message.content);\n      return messageId;\n    } else {\n      // 截取从this.firstMessageIndex到结尾的消息\n      const finalMessages = this._getValidOpenaiMessage();\n\n      const messageId = numberString(16);\n\n      this.revMessage({\n        id: messageId,\n      });\n\n      this.kernel.send(finalMessages, messageId, this.options);\n      return numberString(16);\n    }\n  }\n\n  async retryMessage(id) {\n    const message = this.getMessageById(id);\n    if (message) {\n      message.content = [\n        {\n          type: \"blank\",\n        },\n      ];\n      this.updateLastUpdate();\n      const index = this.messageChain.indexOf(message);\n      const finalMessages = this._getValidOpenaiMessage(0, index);\n      this.kernel.send(finalMessages, id, this.options);\n      return true;\n    }\n  }\n\n  /**\n   * 接收到消息\n   * @param {string} id - ID of the contactor\n   * @param {object} message - Message received from contactor\n   */\n  revMessage(message) {\n    this.updateLastUpdate();\n\n    const webMessage = this.kernel.convertMessage(message);\n\n    if (!this.active) this.messageChain.push(webMessage);\n    else this.emit(\"revMessage\", webMessage);\n\n    this.emit(\"updateMessageSummary\");\n    return webMessage;\n  }\n\n  /**\n   * 删除消息\n   * @param {string} message_id - ID of the message to be deleted\n   * @returns {boolean} - Whether the message is successfully deleted\n   */\n  delMessage(message_id) {\n    for (let i = 0; i < this.messageChain.length; i++) {\n      if (this.messageChain[i].id === message_id) {\n        if (this.active) this.emit(\"delMessage\", i);\n        else this.acting.messageChain.splice(i, 1);\n        this.makeSystemMessage(`${this.name}撤回了一条消息`);\n        return true; // 删除成功\n      }\n    }\n    return false; // 没有找到要删除的消息\n  }\n\n  makeSystemMessage(text) {\n    const container = {\n      role: \"mio_system\",\n      time: new Date().getTime(),\n      id: new Date().getTime(),\n      content: [\n        {\n          type: \"text\",\n          data: {\n            text: text,\n          },\n        },\n      ],\n    };\n    if (this.active) this.emit(\"revMessage\", container);\n    else this.messageChain.push(container);\n  }\n\n  getLastTime() {\n    const last = this.messageChain[this.messageChain.length - 1];\n    if (!last) {\n      return \"\";\n    }\n\n    const currentTime = new Date().getTime();\n    const lastTime = new Date(last.time);\n    const timeDiff = currentTime - lastTime.getTime();\n\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      this.toinit = false;\n      // 小于24小时，返回 xx:xx (小时:分钟)\n      const hours = lastTime.getHours().toString().padStart(2, \"0\");\n      const minutes = lastTime.getMinutes().toString().padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天\n      return \"昨天\";\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = lastTime.getDay();\n      return `星期${weekdays[weekday]}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）\n      const year = lastTime.getFullYear();\n      const month = (lastTime.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = lastTime.getDate().toString().padStart(2, \"0\");\n      return `${year}/${month}/${day}`;\n    }\n  }\n\n  getShownTime(timestamp) {\n    const currentTime = new Date().getTime();\n    // 如果传入时间和当前时间差在24h以内，则显示时间\n\n    const timeDiff = currentTime - timestamp;\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天+时间\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `昨天${hours}:${minutes}`;\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x+时间\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = new Date(timestamp).getDay();\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `星期${weekdays[weekday]}${hours}:${minutes}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）+时间\n      const year = new Date(timestamp).getFullYear();\n      const month = (new Date(timestamp).getMonth() + 1)\n        .toString()\n        .padStart(2, \"0\");\n      const day = new Date(timestamp).getDate().toString().padStart(2, \"0\");\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${year}/${month}/${day} ${hours}:${minutes}`;\n    }\n  }\n\n  getLastMessageSummary(message) {\n    const getMessageText = (element) => {\n      switch (element.type) {\n        case \"text\":\n          return element.data.text;\n        case \"image\":\n          return \"[图片]\";\n        case \"record\":\n          return \"[语音]\";\n        case \"video\":\n          return \"[视频]\";\n        case \"file\":\n          return \"[文件]\";\n        case \"tool_call\":\n          return `[调用工具] ${element.data.name}`;\n        case \"reason\":\n          return element.data.text;\n        case \"blank\":\n          return \"正在思考中...\";\n        case \"reply\":\n          return \"\"; // 空字符串处理\n        case \"nodes\":\n          return \"[转发消息]\";\n        default:\n          return \"[未知消息类型] \" + element.type;\n      }\n    };\n\n    const msg = message || this.messageChain[this.messageChain.length - 1];\n    if (!msg) return \"\";\n    console.log(msg);\n\n    return getMessageText(msg.content ? msg.content[0] : msg);\n  }\n\n  updateFirstMessage() {\n    this.firstMessageIndex = this.messageChain.length;\n  }\n\n  updateLastUpdate() {\n    this.lastUpdate = new Date().getTime();\n  }\n\n  getMessageById(id) {\n    return this.messageChain.find((msg) => msg.id === id);\n  }\n\n  loadAvatar() {\n    let avatar = \"/static/avatar/miobot.png\";\n    if (avatarPolicy[this.avatarPolicy] == \"MODEL\") {\n      const model = this.options.model;\n      avatar = Contactor.getAvatarByModel(model);\n    } else if (avatarPolicy[this.avatarPolicy] == \"CUSTOM\") {\n      avatar = this.avatar;\n    }\n    this.avatar = avatar;\n    return avatar;\n  }\n\n  async loadName() {\n    let name = this.name ?? \"未命名 Bot\";\n    if (namePolicy[this.namePolicy] == \"MODEL\") {\n      const model = this.options.model;\n      name = model;\n    } else if (namePolicy[this.namePolicy] == \"CUSTOM\") {\n      name = this.name;\n    } else if (namePolicy[this.namePolicy] == \"SUMMARY\") {\n      if (this.messageChain.length < 2) {\n        name = \"新建的 Bot\";\n      } else if (\n        this.messageChain.length == 2 ||\n        this.messageChain.length % 6 == 0\n      ) {\n        name = await this.getMessagesSummary();\n      }\n    }\n    this.name = name;\n    return name;\n  }\n\n  getMessagesSummary() {\n    if (this.platform == \"openai\") {\n      return this.kernel.getMessagesSummary(\n        this._getValidOpenaiMessage().slice(-4),\n      );\n    } else {\n      return \"仅支持 OpenAI Chat Bot\";\n    }\n  }\n\n  static getAvatarByModel(model) {\n    const modelOwner = config.getModelOwner(model);\n    if (Object.keys(AVATAR_MAP).includes(modelOwner)) {\n      return `${AVATAR_BASE_PATH}/${AVATAR_MAP[modelOwner]}`;\n    }\n\n    return `${AVATAR_BASE_PATH}/openai.svg`;\n  }\n}\n","import Socket from \"./websocket.js\";\nimport Contactor from \"./contactor.js\";\nimport localforage from \"localforage\";\nimport EventEmitter from \"./event.js\";\nimport { reactive } from \"vue\";\nimport UploadWorker from \"../worker/fileUpload.js?worker\";\n\n// Configure localforage\nlocalforage.config({\n  name: \"mio-chat\",\n});\n\nexport default class Client extends EventEmitter {\n  constructor(config) {\n    super();\n    this.inited = false;\n    this.id = null; // Loaded from storage\n    this.code = null; // Loaded from storage\n    this.isConnected = false; // Dynamic\n    this.contactList = []; // Loaded from storage\n    this.socket = null; // Dynamic\n    this.qq = null; // Web\n    this.bot_qq = null; // Web\n    this.avatar = null; // Web\n    this.onPhone = null; // Dynamic\n    this.title = \"Mio\"; // Fixed\n    this.name = \"user\"; // Fixed\n    this.config = config; // Parameter\n  }\n\n  /**\n   * Prepare initialization\n   * @returns {object} Initialization information\n   */\n  async preInit() {\n    const localBaseInfo = this.config.getBaseConfig();\n    if (Object.keys(localBaseInfo).length === 0) {\n      await this.loadOriginBaseInfo();\n    } else {\n      this.loadOriginBaseInfo();\n      this.loadBaseInfo(localBaseInfo);\n    }\n\n    const localStroge = await this.getLocalStorage();\n    if (localStroge) {\n      this.loadLocalStorage(localStroge);\n    }\n\n    this.inited = true;\n    this.emit(\"loaded\");\n  }\n\n  genDefaultConctor() {\n    // Create default OneBot contactor\n    const onebotConfig = {\n      id: this.genFakeId(),\n      name: \"OneBot\",\n      namePolicy: 1,\n      avatarPolicy: 1,\n      avatar: `/p/qava?q=${this.bot_qq}`,\n      title: \"云崽\",\n      priority: 0,\n      options: {},\n      lastUpdate: -Infinity,\n    };\n    this.addConcator(\"onebot\", onebotConfig);\n\n    // Update and create OpenAI contactor\n    this.config.updateLLMDefaultConfig({\n      model: this.default_model,\n    });\n\n    const LLMDefaultConfig = {\n      id: this.genFakeId(),\n      name: \"MioBot\",\n      avatar: \"/static/avatar/miobot.png\",\n      namePolicy: 1,\n      avatarPolicy: 1,\n      title: \"chat\",\n      priority: 0,\n      lastUpdate: -Infinity,\n      options: { ...this.config.LLMDefaultConfig },\n    };\n\n    LLMDefaultConfig.options.tools = this.config.llmTools.map(\n      (tool) => tool.name,\n    );\n    LLMDefaultConfig.options.enable_tool_call = true;\n    this.addConcator(\"openai\", LLMDefaultConfig);\n  }\n\n  async addConcator(platform, config) {\n    const bot = new Contactor(platform, config);\n    bot.loadName();\n    bot.loadAvatar();\n\n    const list = reactive(this.contactList);\n    list.push(bot);\n    await this.setLocalStorage();\n    return bot;\n  }\n\n  rmContactor(id) {\n    const list = reactive(this.contactList);\n    const index = list.findIndex((item) => item.id == id);\n\n    if (index != -1) {\n      list.splice(index, 1);\n      this.setLocalStorage();\n    }\n  }\n\n  async loadOriginalContactors(shareId) {\n    const path = `/api/share?id=${shareId}`;\n    let contactor = null;\n    try {\n      const res = await fetch(path);\n      const data = await res.json();\n      if (data.code == 0) {\n        contactor = data.data.contactor;\n        // 检查是否已经存在\n        if (!this.getContactor(contactor.id)) {\n          this.addConcator(contactor.platform, contactor);\n        }\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Failed to load original contactors:\", error);\n      return false;\n    }\n  }\n\n  async shareContactor(id) {\n    const uploadResult = await this.setOriginalContactor(id);\n    if (uploadResult) {\n      const { previewImage, shareUrl } = uploadResult;\n      console.log(shareUrl);\n      console.log(previewImage);\n      // 拼接完整链接\n      const originalUrl = document.location.origin;\n      // 复制链接到剪贴板\n      const clipboard = navigator.clipboard;\n      if (clipboard) {\n        clipboard.writeText(originalUrl + shareUrl);\n      }\n      return uploadResult;\n    } else {\n      return null;\n    }\n  }\n\n  async setOriginalContactor(id) {\n    const path = `/api/share/set`;\n    const body = {\n      contactor: this.getContactor(id),\n    };\n    try {\n      const res = await fetch(path, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      const data = await res.json();\n      if (data.code == 0) {\n        return data.data;\n      }\n    } catch (error) {\n      console.error(\"Failed to set original contactor:\", error);\n      return null;\n    }\n  }\n\n  async reset() {\n    localforage.clear();\n    localStorage.clear();\n    try {\n      await this.resetCache();\n    } catch (error) {\n      console.error(\"Failed to reset cache:\", error);\n    }\n    return true;\n  }\n\n  resetCache() {\n    return new Promise((resolve, reject) => {\n      if (\"serviceWorker\" in navigator) {\n        // 确保只添加一次 message 监听器\n        if (!this.messageListenerAdded) {\n          navigator.serviceWorker.addEventListener(\"message\", (event) => {\n            if (event.data.type === \"CACHE_CLEANED\") {\n              console.log(\"收到来自 Service Worker 的缓存清除成功消息\");\n              resolve(true); // 清除成功，resolve Promise\n            } else if (event.data.type === \"CACHE_CLEAN_FAILED\") {\n              console.error(\n                \"收到来自 Service Worker 的缓存清除失败消息:\",\n                event.data.error,\n              );\n              reject(\n                new Error(\"Service Worker 缓存清除失败: \" + event.data.error),\n              ); // 清除失败，reject Promise\n            }\n          });\n          this.messageListenerAdded = true; // 设置标志，避免重复添加\n        }\n\n        navigator.serviceWorker.ready\n          .then((registration) => {\n            console.log(\"向 Service Worker 发送清除缓存的消息\");\n            // 1. 发送消息清理当前 Service Worker 的缓存\n            registration.active.postMessage({ type: \"CLEAN_CACHE\" });\n\n            // 2. 卸载所有已注册的 Service Worker\n            navigator.serviceWorker\n              .getRegistrations()\n              .then((registrations) => {\n                if (registrations && registrations.length > 0) {\n                  console.log(\n                    `找到 ${registrations.length} 个已注册的 Service Worker，正在卸载...`,\n                  );\n                  const unregisterPromises = registrations.map((reg) => {\n                    console.log(`正在卸载 Service Worker: ${reg.scope}`);\n                    return reg\n                      .unregister()\n                      .then((unregistered) => {\n                        if (unregistered) {\n                          console.log(`Service Worker ${reg.scope} 卸载成功`);\n                        } else {\n                          console.warn(`Service Worker ${reg.scope} 卸载失败`);\n                        }\n                        return unregistered;\n                      })\n                      .catch((error) => {\n                        console.error(\n                          `卸载 Service Worker ${reg.scope} 失败:`,\n                          error,\n                        );\n                        // 注意：这里不 reject Promise，因为我们希望继续尝试卸载其他的 Service Worker\n                        return false; // 返回 false 表示卸载失败\n                      });\n                  });\n\n                  // 等待所有卸载操作完成\n                  Promise.all(unregisterPromises)\n                    .then((results) => {\n                      const allUnregistered = results.every((result) => result); // 检查是否所有都卸载成功\n                      if (allUnregistered) {\n                        console.log(\"所有 Service Worker 卸载完成\");\n                      } else {\n                        console.warn(\"部分 Service Worker 卸载失败\");\n                      }\n                      //resolve(true); //清理和卸载都完成，resolve\n                    })\n                    .catch((error) => {\n                      console.error(\n                        \"卸载 Service Worker 过程中发生错误:\",\n                        error,\n                      );\n                      //reject(error); 卸载过程中出错，reject\n                    });\n                } else {\n                  console.log(\"没有找到已注册的 Service Worker\");\n                  //resolve(true); // 没有需要卸载的，resolve\n                }\n              })\n              .catch((error) => {\n                console.error(\"获取 Service Worker 注册信息失败:\", error);\n                //reject(error);  获取注册信息失败，reject\n              });\n            //无论卸载成功与否，最终都resolve，保证流程跑通，避免影响后续操作。\n            resolve(true); //清理和卸载都完成，resolve\n          })\n          .catch((error) => {\n            console.error(\"Service Worker ready failed:\", error);\n            reject(error); // Service Worker 就绪失败，reject Promise\n          });\n      } else {\n        console.error(\"Service Worker 不可用\");\n        reject(new Error(\"Service Worker 不可用\")); // Service Worker 不可用，reject Promise\n      }\n    });\n  }\n\n  everLogin() {\n    const stroge = localStorage.getItem(\"everLogin\");\n    if (stroge) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setEverLogin() {\n    localStorage.setItem(\"everLogin\", true);\n  }\n\n  async init() {\n    await this.preInit();\n    if (this.everLogin()) {\n      console.log(\"Detected cache, attempting automatic reconnection\");\n      this.isConnected = false;\n      this.login(this.code);\n    } else {\n      console.log(\"Not logged in before, please login first\");\n    }\n  }\n\n  getContactors() {\n    return this.contactList;\n  }\n\n  getContactor(id, onebotId = null) {\n    if (onebotId) {\n      // TODO: 拓展 Onebot 协议功能，实现 IM\n      return this.contactList.find((item) => item.platform == \"onebot\");\n    } else {\n      return this.contactList.find((item) => item.id == id);\n    }\n  }\n\n  /**\n   * Generate a random 5-digit ID starting with 1\n   * @returns {number} 5-digit random ID starting with 1\n   */\n  genFakeId() {\n    if (!this.id) {\n      // Generate 5-digit random number starting with 1\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`1${randomNum}`);\n    } else {\n      // Generate 4-digit random number and append to existing ID\n      const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`${this.id}${subRandomNum}`);\n    }\n  }\n\n  /**\n   * Get user information from localStorage\n   * @returns {object|false} User information or false if not found\n   */\n  async getLocalStorage() {\n    const client = await localforage.getItem(\"client\");\n    if (client) {\n      const localConfig = JSON.parse(client);\n      return localConfig;\n    } else {\n      // First-time user\n      this.id = this.genFakeId();\n      this.code = null;\n      return null;\n    }\n  }\n\n  /**\n   * Load user information from localStorage\n   * @param {object} client User information\n   */\n  loadLocalStorage(client) {\n    this.id = client.id;\n    this.code = client.code;\n\n    // If contact list exists, instantiate as contact objects\n    if (client.contactList && client.contactList.length != 0) {\n      this.contactList = client.contactList.map(\n        (item) => new Contactor(item.platform, item),\n      );\n    } else {\n      this.contactList = [];\n    }\n  }\n\n  /**\n   * Save user information to localStorage\n   */\n  async setLocalStorage() {\n    // await localforage.setItem(\"client\", JSON.stringify(this));\n    const client = {\n      id: this.id,\n      code: this.code,\n      contactList: this.contactList,\n    };\n    await localforage.setItem(\"client\", JSON.stringify(client));\n    console.log(\"Client saved\");\n  }\n\n  /**\n   * Login\n   * @param {string} code Access code\n   * @returns {Promise} Login result\n   */\n  async login(code) {\n    this.code = code;\n\n    return new Promise((resolve) => {\n      const socket = new Socket(this.id, this.code);\n\n      socket.on(\"connect\", async (info) => {\n        console.log(\"Login successful\");\n        this.default_model = info.default_model;\n        this.isConnected = true;\n        this.socket = socket;\n\n        this.config.setLlmModels(info.models);\n        this.addMsgListener();\n        this.config.updateLLMDefaultConfig({\n          model: info.default_model,\n        });\n\n        if (this.contactList.length == 0) {\n          this.genDefaultConctor();\n        }\n\n        this.setEverLogin();\n        this.setLocalStorage();\n        resolve(info);\n      });\n\n      socket.connect();\n    });\n  }\n\n  addMsgListener() {\n    this.socket.on(\"onebot_message\", (e) => {\n      console.log(e);\n      const data = e.data;\n      const id = data.id;\n      const content = data.content;\n      const type = data.type;\n\n      if (type == \"message\") {\n        const contactor = this.getContactor(id, 10000);\n        if (contactor) {\n          contactor.revMessage(content);\n          this.setLocalStorage();\n        } else {\n          console.log(\"Contactor not found\");\n        }\n      } else if (type == \"del_msg\") {\n        const onebotContactors = this.contactList.filter(\n          (item) => item.platform == \"onebot\",\n        );\n        for (const onebotContactor of onebotContactors) {\n          const deleted = onebotContactor.delMessage(content.message_id);\n          if (deleted) {\n            this.setLocalStorage();\n            console.log(\"Message deleted successfully\");\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Logout\n   */\n  async logout() {\n    this.isConnected = false;\n    this.socket.disconnect();\n    this.socket = null;\n    this.setLocalStorage();\n  }\n\n  /**\n   * Set base information\n   * @returns {Promise} Base information\n   */\n  async loadOriginBaseInfo() {\n    const res = await fetch(\"/api/base_info\");\n    const { data } = await res.json();\n    this.config.setBaseConfig(data);\n    this.loadBaseInfo(data);\n\n    return data;\n  }\n\n  loadBaseInfo(data) {\n    this.admin_qq = data.admin_qq;\n    this.bot_qq = data.bot_qq;\n\n    this.avatar = `/p/qava?q=${this.admin_qq}`;\n\n    const onebotContactor = this.getContactor(null, 10000);\n    if (onebotContactor) {\n      onebotContactor.avatar = `/p/qava?q=${this.bot_qq}`;\n    }\n  }\n\n  /**\n   * Upload file or image\n   * @param {File|Blob|string} fileOrImage - File object, Blob, or base64 string for images\n   * @param {Object} options - Upload options\n   * @param {boolean} options.isImage - Indicates if upload is an image\n   * @param {Function} options.onProgress - Progress callback (percent complete)\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadFile(fileOrImage, options = {}) {\n    const { isImage = false, onProgress = null } = options;\n\n    // Handle image upload (base64 string or blob)\n    if (\n      isImage ||\n      (typeof fileOrImage === \"string\" && fileOrImage.startsWith(\"data:\"))\n    ) {\n      return this.uploadImage(fileOrImage);\n    }\n\n    const file = fileOrImage;\n    return new Promise((resolve, reject) => {\n      const chunkSize = 1024 * 1024; // 1MB\n      let md5Hash = null;\n\n      const finalizeUpload = async (totalChunks) => {\n        try {\n          const response = await fetch(\"/api/upload/finalize\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              totalChunks,\n              md5: md5Hash,\n              filename: file.name,\n            }),\n          });\n\n          if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n          }\n\n          const data = await response.json();\n          resolve(data);\n        } catch (error) {\n          reject({ error: `Finalization error: ${error.message}` });\n        }\n      };\n\n      const uploadChunk = async (chunk, index, totalChunks) => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          formData.append(\"file\", chunk);\n          formData.append(\"md5\", md5Hash);\n          formData.append(\"chunkIndex\", index);\n          formData.append(\"totalChunks\", totalChunks);\n          formData.append(\"filename\", file.name);\n\n          const xhr = new XMLHttpRequest();\n          xhr.open(\"POST\", \"/api/upload/chunk\", true);\n\n          // Track progress if callback provided\n          if (onProgress) {\n            xhr.upload.onprogress = (event) => {\n              if (event.lengthComputable) {\n                // Calculate overall progress based on chunks\n                const chunkProgress = event.loaded / event.total;\n                const overallProgress =\n                  (index / totalChunks + (1 / totalChunks) * chunkProgress) *\n                  100;\n                onProgress(Math.round(overallProgress));\n              }\n            };\n          }\n\n          xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n              resolve(); // Successful upload\n            } else {\n              reject(xhr.statusText); // Failed upload\n            }\n          };\n\n          xhr.onerror = () => {\n            reject(\"Network Error\");\n          };\n\n          xhr.send(formData);\n        });\n      };\n\n      const uploadFileChunks = async () => {\n        if (!file || !md5Hash) {\n          return reject({ error: \"Invalid file or missing hash\" });\n        }\n\n        const totalChunks = Math.ceil(file.size / chunkSize);\n\n        try {\n          for (\n            let currentChunk = 0;\n            currentChunk < totalChunks;\n            currentChunk++\n          ) {\n            const start = currentChunk * chunkSize;\n            const end = Math.min(start + chunkSize, file.size);\n            const chunk = file.slice(start, end);\n\n            await uploadChunk(chunk, currentChunk, totalChunks);\n          }\n\n          // All chunks uploaded, finalize\n          await finalizeUpload(totalChunks);\n        } catch (error) {\n          reject({ error: `Upload error: ${error}` });\n        }\n      };\n\n      // Start worker to calculate MD5\n      const worker = new UploadWorker();\n      worker.postMessage({ file, chunkSize });\n\n      worker.onmessage = (e) => {\n        if (e.data.hash) {\n          md5Hash = e.data.hash;\n          console.log(\"MD5 calculated. Starting upload...\");\n          uploadFileChunks();\n        } else if (e.data.error) {\n          reject({ error: e.data.error });\n          worker.terminate();\n        }\n      };\n\n      worker.onerror = (error) => {\n        console.error(\"Worker error:\", error);\n        reject({ error: `Worker error: ${error.message}` });\n        worker.terminate();\n      };\n    });\n  }\n\n  /**\n   * Upload image (now integrated into uploadFile)\n   * @param {string|Blob} image - Base64 string or Blob\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadImage(formData) {\n    try {\n      const response = await fetch(\"/api/upload/image\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      throw error; // Re-throw to be handled by caller\n    }\n  }\n\n  /**\n   * Convert Blob to base64 string\n   * @param {Blob} blob - Image blob\n   * @returns {Promise<string>} Base64 string\n   */\n  async _convertBlobToBase64(blob) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","const TOOL_CALL_MODEDS = {\n  AUTO: \"auto\",\n  ANY: \"any\",\n  NONE: \"none\",\n};\nconst GEMINI_SAFETY_BLOCK_SETTINGS = {\n  NONE: \"BLOCK_NONE\",\n  LOW: \"BLOCK_ONLY_HIGH\",\n  MEDIUM: \"BLOCK_MEDIUM_AND_ABOVE\",\n  HIGH: \"BLOCK_LOW_AND_ABOVE\",\n  DEFAULT: \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\",\n};\nconst GEMINI_SAFETY_SETTINGS_TYPE = {\n  HARASSMENT: \"HARM_CATEGORY_HARASSMENT\",\n  HATE_SPEECH: \"HARM_CATEGORY_HATE_SPEECH\",\n  SEXUALLY_EXPLICIT: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n  DANGEROUS_CONTENT: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n  CIVIC_INTEGRITY: \"HARM_CATEGORY_CIVIC_INTEGRITY\",\n};\n\nconst CONFIG_KEY = \"config\";\n\nexport default class Config {\n  constructor() {\n    this.localPresets = [];\n    this.toolsConfig = {};\n    this.llmTools = [];\n    this.onebotConfig = null;\n    this.llmModels = []; // 初始化 llmModels\n    this.safetyConfig = {};\n    this.baseConfig = {};\n    this.LLMDefaultConfig = {};\n\n    this.initSafetyConfig(); // 放在 _loadStrogeConfig 前\n    this.initLLMDefaultConfig(); // 放在 _loadStrogeConfig 前\n    this._loadStrogeConfig();\n    this.loadllmTools();\n    this.loadonebotConfig();\n  }\n\n  // 统一设置 localStorage\n  _setLocalStorage(key, data) {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  // 统一获取 localStorage\n  _getLocalStorage(key) {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : null;\n  }\n\n  // 统一保存所有配置\n  _saveStrogeConfig() {\n    const configToSave = {\n      localPresets: this.localPresets,\n      toolsConfig: this.toolsConfig,\n      llmTools: this.llmTools,\n      onebotConfig: this.onebotConfig,\n      llmModels: this.llmModels,\n      baseConfig: this.baseConfig,\n      safetyConfig: this.safetyConfig,\n      LLMDefaultConfig: this.LLMDefaultConfig,\n    };\n    this._setLocalStorage(CONFIG_KEY, configToSave);\n  }\n\n  // 统一加载所有配置\n  _loadStrogeConfig() {\n    const config = this._getLocalStorage(CONFIG_KEY);\n    if (config) {\n      Object.assign(this, config);\n      // 由于 Object.assign 不会触发 setter，手动赋值\n      // this.displayConfig = config.displayConfig || {};\n      // this.safetyConfig = config.safetyConfig || {};\n      // this.LLMDefaultConfig = config.LLMDefaultConfig || {};\n    } else {\n      this._saveStrogeConfig();\n    }\n  }\n\n  // Display Config\n  setBaseConfig(config) {\n    this.baseConfig = config;\n    this._saveStrogeConfig();\n  }\n\n  updateBaseConfig(patch) {\n    this.baseConfig = {\n      ...this.displayConfig,\n      ...patch,\n    };\n    this._saveStrogeConfig();\n  }\n\n  getBaseConfig() {\n    return this.baseConfig;\n  }\n\n  // Llm Models\n  setLlmModels(models) {\n    this.llmModels = models;\n    this._saveStrogeConfig(); // 保存到总配置\n  }\n\n  getLlmModels() {\n    return this.llmModels;\n  }\n\n  // Llm Models\n  getModelOwner(model) {\n    const group = this.llmModels.find((modelGroup) =>\n      modelGroup.models.includes(model),\n    );\n    return group?.owner;\n  }\n\n  // Safety Config\n  initSafetyConfig() {\n    if (Object.keys(this.safetyConfig).length === 0) {\n      this.safetyConfig = {};\n      for (const key in GEMINI_SAFETY_SETTINGS_TYPE) {\n        this.safetyConfig[GEMINI_SAFETY_SETTINGS_TYPE[key]] =\n          GEMINI_SAFETY_BLOCK_SETTINGS.DEFAULT;\n      }\n    }\n  }\n\n  setSafetyConfig(safetyConfig) {\n    // 新增：手动设置 safetyConfig 并保存\n    this.safetyConfig = safetyConfig;\n    this._saveStrogeConfig();\n  }\n\n  getSafetyConfig() {\n    // 新增：获取 safetyConfig\n    return this.safetyConfig;\n  }\n\n  // OpenAI Default Config\n  initLLMDefaultConfig() {\n    if (Object.keys(this.LLMDefaultConfig).length === 0) {\n      this.LLMDefaultConfig = {\n        provider: \"openai\",\n        base: {\n          model: \"gpt-4o-mini\",\n          max_messages_num: 10,\n          stream: true,\n        },\n        chatParams: {\n          temperature: 1,\n          top_p: 1,\n          frequency_penalty: 0,\n          presence_penalty: 0,\n        },\n        toolCallSettings: {\n          mode: TOOL_CALL_MODEDS.AUTO,\n          avaliable: [],\n        },\n        presetSettings: {\n          opening: \"\",\n          history: [],\n        },\n        safetySettings: {\n          ...this.safetyConfig, //  使用当前的 safetyConfig\n        },\n      };\n    }\n  }\n\n  updateLLMDefaultConfig(patch) {\n    this.LLMDefaultConfig = {\n      ...this.LLMDefaultConfig,\n      ...patch,\n    };\n    this._saveStrogeConfig();\n  }\n\n  getLLMDefaultConfig() {\n    return JSON.parse(JSON.stringify(this.LLMDefaultConfig));\n  }\n\n  // llm Tools\n  async loadllmTools() {\n    const res = await fetch(\"/api/openai/tools\");\n    const data = await res.json();\n    this.llmTools = Object.values(data.data.tools);\n    this._saveStrogeConfig();\n  }\n\n  // OneBot Config\n  async loadonebotConfig() {\n    const onebotOptionsData = await fetch(`/api/onebot/plugins`);\n    const onebotOptionsJson = await onebotOptionsData.json();\n    this.onebotConfig = onebotOptionsJson.data.options;\n    this._saveStrogeConfig();\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Client from \"./client.js\";\nimport Config from \"./config.js\";\n\nconst config = new Config();\nconst client = new Client(config);\n\nclient.init();\n\nexport { config, client };\n","<script>\nimport { client } from \"@/lib/runtime.js\";\n\nconst PageStatus = {\n  CHAT: \"chat\",\n  PROFILE: \"profile\",\n  SETTINGS: \"settings\",\n  NONE: \"none\",\n};\nexport default {\n  data() {\n    return {\n      processedImage: \"/p/qava?q=1099834705\",\n      activePage: PageStatus.NONE,\n    };\n  },\n  computed: {\n    isChatActive() {\n      return this.activePage === PageStatus.CHAT;\n    },\n    isProfileActive() {\n      return this.activePage === PageStatus.PROFILE;\n    },\n  },\n  watch: {\n    $route: {\n      handler(newRoute) {\n        this.activePage = this.getPageStatusFromRoute(newRoute);\n      },\n      immediate: true,\n    },\n  },\n  mounted() {\n    this.activePage = this.getPageStatusFromRoute();\n    const adminId = client.admin_qq;\n    if (adminId) {\n      this.loadAvatar(adminId);\n    } else {\n      client.on(\n        \"loaded\",\n        () => {\n          const adminId = client.admin_qq;\n          this.loadAvatar(adminId);\n        },\n        false,\n      );\n    }\n  },\n  methods: {\n    async processImage(imageUrl) {\n      return new Promise((resolve, reject) => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.src = imageUrl;\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          // 绘制原始图片\n          ctx.drawImage(img, 0, 0);\n          // 创建透明的缺口\n          let centerX = img.width * 0.8; // 圆心X坐标\n          let centerY = img.height * 0.86; // 圆心Y坐标\n          let radius = (5 / 24) * img.width; // 圆的半径\n          ctx.beginPath();\n          ctx.arc(centerX, centerY, radius, 0, Math.PI * 2, true);\n          ctx.clip();\n          ctx.clearRect(0, 0, img.width, img.height);\n          // 将处理后的图片转换为base64\n          canvas.toBlob((blob) => {\n            const url = URL.createObjectURL(blob);\n            resolve(url);\n          }, \"image/png\");\n        };\n        img.onerror = (error) => {\n          reject(error);\n        };\n      });\n    },\n    async toChat() {\n      this.activePage = PageStatus.CHAT;\n      this.$router.push({ name: \"blank\" });\n    },\n    async toProfile() {\n      this.activePage = PageStatus.PROFILE;\n      this.$router.push({ name: \"contactors\" });\n    },\n    async toConfig() {\n      this.activePage = PageStatus.SETTINGS;\n      this.$router.push({ name: \"settings\" });\n    },\n    async loadAvatar(adminId) {\n      const adminAvatar = `/p/qava?q=${adminId}`;\n      try {\n        this.processedImage = await this.processImage(adminAvatar);\n      } catch (error) {\n        console.error(\"Error loading avatar:\", error);\n      }\n    },\n    getPageStatusFromRoute(route = this.$route) {\n      if (route.path === \"/\" || route.path.includes(\"/chat/\")) {\n        return PageStatus.CHAT;\n      } else if (\n        route.path === \"/contactors\" ||\n        route.path.includes(\"/profile/\")\n      ) {\n        return PageStatus.PROFILE;\n      } else if (route.path === \"/settings\") {\n        return PageStatus.SETTINGS;\n      }\n      return PageStatus.NONE;\n    },\n  },\n};\n</script>\n<template>\n  <div id=\"sidebar\">\n    <div class=\"admin-avatar\">\n      <div class=\"status\"></div>\n      <img :src=\"processedImage\" alt=\"admin-avatar\" />\n    </div>\n    <div id=\"side\" class=\"options\">\n      <div class=\"up-half\">\n        <div class=\"icon-back\" :class=\"{ active: isChatActive }\">\n          <div id=\"chatting\" @click=\"toChat\">\n            <i class=\"iconfont chat\"></i>\n          </div>\n        </div>\n        <div class=\"icon-back\" :class=\"{ active: isProfileActive }\">\n          <div id=\"editing\" @click=\"toProfile\">\n            <i class=\"iconfont user\"></i>\n          </div>\n        </div>\n      </div>\n      <div class=\"down-half\">\n        <a\n          href=\"https://github.com/Pretend-to/mio-chat-backend\"\n          target=\"_blank\"\n          class=\"side-icon\"\n        >\n          <i class=\"iconfont github\"></i>\n        </a>\n        <div class=\"side-icon\" @click=\"toConfig\">\n          <i class=\"iconfont menu\"></i>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped>\n#sidebar {\n  display: flex;\n  flex-basis: 4.5rem;\n  flex-direction: column;\n  background-color: hsla(0, 0%, 100%, 0.8);\n  backdrop-filter: blur(0.5rem);\n  /* 添加模糊效果，值可以根据需要调整 */\n}\n.options {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n  /* margin: 1.2rem 1.2rem; */\n}\n.up-half,\n.down-half {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-basis: 8rem;\n  justify-content: center;\n}\n.icon-back {\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0.5rem 0rem;\n  border-radius: 0.5rem;\n}\n.icon-back.active {\n  background-color: rgba(113, 113, 113, 0.1);\n}\n.icon-back i,\n.down-half i {\n  margin: 0.5rem 0rem;\n  width: 1.8rem;\n  height: 1.8rem;\n  font-size: 1.6rem;\n  color: black;\n}\n.admin-avatar {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  height: 4.5rem;\n  position: relative;\n  z-index: 10;\n}\n.admin-avatar img {\n  border-radius: 50%;\n  width: 60%;\n}\n.status {\n  position: absolute;\n  left: 68%;\n  top: 71%;\n  transform: translate(-50%, -50%);\n  width: 0.7rem;\n  height: 0.7rem;\n  border-radius: 50%;\n  background: linear-gradient(to bottom, rgb(52, 238, 143), rgb(54, 221, 150));\n}\n.side-icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.icon-back.active i {\n  color: #007bff;\n}\n\n@media screen and (max-width: 600px) {\n  .options {\n    justify-content: space-evenly;\n  }\n  #sidebar {\n    width: 100%;\n    flex-direction: row;\n    flex-basis: 4rem;\n    background-color: #f5f4f9;\n  }\n  .admin-avatar {\n    display: none;\n  }\n  .options {\n    flex-direction: row;\n    width: 100%;\n  }\n  .up-half,\n  .down-half {\n    flex-basis: 50%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n  }\n  .icon-back.active {\n    background-color: transparent;\n  }\n}\n</style>\n","<template>\n  <ul\n    :class=\"{\n      'window-controls': true,\n      fullscreen: fullScreen,\n      preview: preview,\n    }\"\n  >\n    <li class=\"button\" @click=\"waiting()\">\n      <span class=\"window-min\">—</span>\n    </li>\n    <li v-if=\"fullScreen\" class=\"button\" @click=\"configFullScreen(false)\">\n      <span class=\"window-inmax\">\n        <i class=\"iconfont chuangkouhua\"></i>\n      </span>\n    </li>\n    <li v-else class=\"button\" @click=\"configFullScreen(true)\">\n      <span class=\"window-max\">▢</span>\n    </li>\n    <li id=\"close\" class=\"button\" @click=\"waiting()\">\n      <span class=\"window-close\">&times;</span>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  props: {\n    fullScreen: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"set-screen\"],\n  data() {\n    return {\n      preview: false,\n    };\n  },\n  created() {\n    // 检查查询字符串中是否存在preview参数\n    const urlParams = new URLSearchParams(window.location.search);\n    const preview = urlParams.get(\"preview\");\n    if (preview === \"true\") {\n      this.preview = true;\n    }\n  },\n  methods: {\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    configFullScreen(fullScreen) {\n      this.$emit(\"set-screen\", fullScreen);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"sass\">\n.window-controls\n    position: absolute\n    display: flex\n    width: 6rem\n    height: 2rem\n    z-index: 100\n    right: 0\n\n    &.preview\n        display: none\n\n    &.fullscreen\n        position: fixed\n\n    .button\n        display: flex\n        justify-content: center\n        align-items: flex-start\n        flex-grow: 1\n        height: 100%\n        align-items: center\n        .window-min\n            font-size: .6rem\n            margin-top: .2rem\n        .window-max\n            font-size: .9rem\n        .window-close\n            margin-top: -.15rem\n        &:hover\n            background-color: rgb(231, 231, 231)\n        &#close:hover\n            background-color: rgb(255, 0, 0)\n            color: white\n</style>\n","<template>\n  <div\n    id=\"forward-msg-preview\"\n    :class=\"onPhone ? 'on-phone' : ''\"\n    @click=\"showBox = true\"\n  >\n    <div id=\"forward-msg-head\">转发的聊天消息</div>\n    <div id=\"forward-msg-body\">\n      <div\n        v-for=\"(message, index) in messages\"\n        id=\"forward-msg-summary\"\n        :key=\"index\"\n      >\n        {{ contactor.name }}: {{ contactor.getLastMessageSummary(message) }}\n      </div>\n    </div>\n    <div id=\"forward-msg-foot\">查看{{ messages.length }}条转发消息</div>\n  </div>\n  <div v-if=\"showBox\" id=\"forward-msg-box\" :class=\"onPhone ? 'on-phone' : ''\">\n    <div class=\"head\">\n      <span>转发消息</span>\n      <span class=\"close\" @click=\"showBox = false\">&times;</span>\n    </div>\n    <div class=\"body\">\n      <div\n        v-for=\"(message, index) of messages\"\n        :key=\"index\"\n        class=\"message-container\"\n      >\n        <div id=\"other\" class=\"message-body\">\n          <div class=\"avatar\">\n            <img :src=\"contactor.avatar\" :alt=\"contactor.name\" />\n          </div>\n          <div class=\"msg\">\n            <div class=\"wholename\">\n              <div class=\"title\">{{ contactor.title }}</div>\n              <div class=\"name\">{{ contactor.name }}</div>\n            </div>\n            <div class=\"content\">\n              <div>\n                <MdPreview\n                  v-if=\"message.type === 'text'\"\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"message.data.text\"\n                />\n                <el-image\n                  v-else-if=\"message.type === 'image'\"\n                  :key=\"index\"\n                  style=\"margin: 8px 0; max-width: 20rem; border-radius: 1rem\"\n                  :src=\"message.data.file\"\n                  :zoom-rate=\"1.2\"\n                  :preview-teleported=\"true\"\n                  :max-scale=\"7\"\n                  :min-scale=\"0.2\"\n                  :preview-src-list=\"[message.data.file]\"\n                  :initial-index=\"4\"\n                  fit=\"cover\"\n                />\n                <MdPreview\n                  v-else\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"`尚未支持的消息类型：${message.type}`\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MdPreview } from \"md-editor-v3\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default {\n  components: {\n    MdPreview,\n  },\n  // ForwardMsg.vue\n  props: {\n    messages: {\n      type: Array,\n      default: () => [], // 对于数组，使用函数返回一个新的空数组\n    },\n    contactor: {\n      type: Object,\n      default: () => {}, // 对于字符串，使用空字符串\n    },\n  },\n  data() {\n    return {\n      showBox: false,\n      onPhone: false,\n    };\n  },\n  created() {\n    this.onPhone = window.innerWidth < 600;\n\n    client.on(\n      \"device-change\",\n      (type) => {\n        if (type == \"mobile\") {\n          this.onPhone = true;\n        } else {\n          this.onPhone = false;\n        }\n      },\n      false,\n    );\n  },\n};\n</script>\n\n<style>\n#forward-msg-preview {\n  width: 15rem;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem;\n}\n\n#forward-msg-preview.on-phone {\n  transform: translateX(-0.35rem);\n}\n\n#forward-msg-body {\n  margin: 0.5rem 0;\n  width: 100%;\n  text-overflow: ellipsis;\n}\n\n#forward-msg-summary {\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  font-size: 0.8rem;\n  font-weight: 300;\n}\n\n#forward-msg-foot {\n  border-top: 1px solid #ccc;\n  padding-top: 0.2rem;\n  width: 100%;\n  font-size: 0.7rem;\n  color: rgb(150, 150, 150);\n}\n\n#forward-msg-box {\n  border: 1px solid black;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24rem;\n  height: 30rem;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  border-radius: 0.25rem;\n  overflow: hidden;\n}\n\n.message-body > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n\n#forward-msg-box.on-phone {\n  border: null;\n  border-radius: null;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  overflow: hidden;\n}\n\n.head {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 2rem;\n  padding-left: 1rem;\n  border-bottom: 1px solid #ccc;\n  color: black;\n}\n\n.close {\n  width: 1.5rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n.body {\n  height: auto;\n  max-height: calc(100% - 2rem);\n  overflow: auto;\n}\n</style>\n","<template>\n  <div class=\"input-bar\">\n    <div class=\"options\">\n      <div class=\"bu-emoji\">\n        <emoji-picker\n          v-show=\"showemoji\"\n          ref=\"emojiPicker\"\n          @emoji-click=\"getemoji\"\n        ></emoji-picker>\n        <p class=\"ho-emoji\">表情</p>\n        <i class=\"iconfont smile\" @click.prevent=\"ctrlEmojiPanel\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">\n          {{ activeContactor.platform == \"openai\" ? \"模型选择\" : \"工具选择\" }}\n        </p>\n        <el-tree-select\n          id=\"wraper-selector\"\n          v-model=\"selectedOption\"\n          :data=\"extraOptions\"\n          @change=\"activeBotTools\"\n        />\n        <i class=\"iconfont robot\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">重置人格</p>\n        <i class=\"iconfont reset\" @click=\"$emit('cleanHistory')\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">清除记录</p>\n        <i class=\"iconfont shanchu\" @click=\"$emit('cleanScreen')\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">上传</p>\n        <i class=\"iconfont upload\" @click=\"uploadFile\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">滑到底部</p>\n        <i class=\"iconfont down\" @click=\"$emit('toButtom', 1)\"></i>\n      </div>\n    </div>\n    <div class=\"input-box\">\n      <div class=\"input-content\">\n        <div\n          ref=\"textarea\"\n          class=\"input-area\"\n          :v-html=\"userInput\"\n          contenteditable=\"true\"\n          placeholder=\"按 Ctrl + Enter 以发送消息\"\n          @keydown=\"handleKeyDown\"\n          @input=\"handleInput\"\n          @click=\"updateCursorPosition\"\n        ></div>\n      </div>\n      <button\n        id=\"sendButton\"\n        :disabled=\"!userInput || !isValidInput(userInput)\"\n        @click.prevent=\"send\"\n      >\n        发送{{ getWraperName() ? ` | ${getWraperName()}` : \"\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { client, config } from \"@/lib/runtime.js\";\n\nexport default {\n  props: {\n    activeContactor: {\n      type: Object,\n      required: true,\n    },\n  },\n  emits: [\"toButtom\", \"cleanHistory\", \"cleanScreen\", \"setModel\", \"stroge\"],\n  data() {\n    return {\n      userInput: \"\",\n      selectedOption: null,\n      cursorPosition: [],\n      showemoji: false,\n      openaiModels: null,\n      onebotPresets: null,\n      host: \"\",\n      uploaded: { files: [], images: [] }, // Keep original data structure\n      isPasting: false,\n    };\n  },\n  computed: {\n    extraOptions() {\n      if (this.activeContactor.platform == \"openai\") {\n        return this.openaiModels;\n      } else {\n        return this.onebotPresets;\n      }\n    },\n  },\n  watch: {\n    \"$route.params.id\"() {\n      this.loadSelected();\n    },\n  },\n  created() {\n    this.initExtraOptions();\n  },\n  mounted() {\n    this.textareaRef = this.$refs.textarea;\n    this.textareaRef.addEventListener(\"input\", this.adjustTextareaHeight);\n    // 添加拖拽事件监听器\n    this.handleDragOver = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#e0e0e0\";\n    };\n    this.handleDragLeave = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n    };\n    this.handleDrop = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n      const files = e.dataTransfer.files;\n      if (files.length > 0) {\n        this.handleDroppedFile(files[0]);\n      }\n    };\n    this.textareaRef.addEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.addEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.addEventListener(\"drop\", this.handleDrop);\n    // 将paste事件的处理函数定义为一个方法\n    this.handlePaste = (e) => {\n      e.preventDefault();\n      this.isPasting = true;\n      // 获取剪贴板的数据\n      var items = (e.clipboardData || window.clipboardData).items;\n      for (var i = 0; i < items.length; i++) {\n        // 检查是否为文件类型\n        if (items[i].type.indexOf(\"image\") !== -1) {\n          var blob = items[i].getAsFile();\n          this.handleUploadImage(blob);\n        } else if (items[i].type === \"text/plain\") {\n          var text = (e.originalEvent || e).clipboardData.getData(\"text/plain\");\n          document.execCommand(\"insertText\", false, text);\n          this.userInput = this.textareaRef.innerText;\n        }\n      }\n      this.isPasting = false;\n    };\n    // 添加paste事件监听器\n    this.textareaRef.addEventListener(\"paste\", this.handlePaste);\n    this.host = window.location.origin;\n  },\n  unmounted() {\n    this.textareaRef.removeEventListener(\"input\", this.adjustTextareaHeight);\n    this.textareaRef.removeEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.removeEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.removeEventListener(\"drop\", this.handleDrop);\n    this.textareaRef.removeEventListener(\"paste\", this.handlePaste);\n    this.textareaRef = null;\n  },\n  methods: {\n    handleDroppedFile(file) {\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadFile(file);\n      }\n    },\n    ctrlEmojiPanel() {\n      this.showemoji = !this.showemoji;\n      const editor = this.textareaRef;\n      editor.focus();\n    },\n    uploadFile(file) {\n      if (file instanceof File) {\n        this.handleFileUpload(file);\n        return;\n      }\n      const availableImageFormats = [\n        \"png\",\n        \"jpg\",\n        \"jpeg\",\n        \"webp\",\n        \"gif\",\n        \"bmp\",\n      ];\n      const availableDocFormats = [\"docx\", \"txt\", \"pdf\", \"pptx\", \"xlsx\"];\n      const fileInput = document.createElement(\"input\");\n      fileInput.type = \"file\";\n      fileInput.accept = [...availableDocFormats, ...availableImageFormats]\n        .map((format) => `.${format}`)\n        .join(\",\");\n\n      const handleChange = async (e) => {\n        fileInput.removeEventListener(\"change\", handleChange);\n        const file = e.target.files[0];\n        if (!file) return;\n        this.handleFileUpload(file);\n      };\n      fileInput.addEventListener(\"change\", handleChange);\n      fileInput.click();\n    },\n    handleFileUpload(file) {\n      if (file.size > 50 * 1024 * 1024) {\n        this.$message.error(\"文件大小超过50MB，无法上传\");\n        return;\n      }\n      this.$message.info(\"文件上传中...\");\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadDocumentFile(file);\n      }\n    },\n    async uploadDocumentFile(file) {\n      try {\n        const upload = await client.uploadFile(file);\n        this.$message.success(\"文件上传成功\");\n        this.uploaded.files.push(\n          `${upload.data.url}?size=${file.size}&name=${file.name}`,\n        );\n      } catch (error) {\n        console.error(\"文件上传失败:\", error);\n        this.$message.error(\"文件上传失败，请稍后再试\");\n      }\n    },\n    handleUploadImage(file) {\n      const maxSizeMB = 5;\n      const maxSizeByte = maxSizeMB * 1024 * 1024;\n\n      const img = new Image();\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        img.src = event.target.result;\n      };\n\n      img.onload = () => {\n        const fileType = file.type.toLowerCase();\n\n        // 处理 GIF 类型，上传原文件\n        if (fileType === \"image/gif\") {\n          // GIF 检查大小\n          if (file.size > maxSizeByte) {\n            this.$message.error(`图片大小不能超过 ${maxSizeMB}MB`);\n            return;\n          }\n          const formData = new FormData();\n          formData.append(\"image\", file, file.name);\n          client\n            .uploadImage(formData)\n            .then((upload) => {\n              const imageUrl = upload.data.url;\n              this.uploaded.images.push(imageUrl);\n              this.insertImageToTextarea(imageUrl, file.name);\n              this.$message.success(\"上传图片成功\");\n            })\n            .catch((error) => {\n              console.error(\"Error handling uploaded image:\", error);\n              this.$message.error(\"上传图片失败\");\n            });\n          return;\n        }\n\n        // 非GIF类型，使用Canvas处理\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // 根据文件类型确定mimeType和quality, for toBlob\n        let mimeType, quality;\n\n        if (fileType === \"image/png\") {\n          mimeType = \"image/png\";\n          quality = undefined; // PNG的质量参数无效\n        } else if (fileType === \"image/webp\") {\n          mimeType = \"image/webp\";\n          quality = 0.7;\n        } else {\n          // 默认为jpeg（处理jpg or其他类型）\n          mimeType = \"image/jpeg\";\n          quality = 0.7;\n        }\n\n        canvas.toBlob(\n          (blob) => {\n            if (blob.size > maxSizeByte) {\n              this.$message.error(\n                `图片压缩后仍然超过 ${maxSizeMB}MB，请选择更小的图片`,\n              );\n              return;\n            }\n\n            const formData = new FormData();\n            formData.append(\"image\", blob, file.name);\n            client\n              .uploadImage(formData)\n              .then((upload) => {\n                const imageUrl = upload.data.url;\n                this.uploaded.images.push(imageUrl);\n                this.insertImageToTextarea(imageUrl, file.name);\n                this.$message.success(\"上传图片成功\");\n              })\n              .catch((error) => {\n                console.error(\"上传图片失败\", error);\n                this.$message.error(\"上传图片失败\");\n              });\n          },\n          mimeType,\n          quality, // 对于不能使用quality参数的mime类型，此参数被忽略\n        );\n      };\n      reader.readAsDataURL(file);\n    },\n    // 插入图片到文本域的方法\n    insertImageToTextarea(imageUrl, imageName) {\n      const imageElement = document.createElement(\"img\");\n      imageElement.src = imageUrl;\n      imageElement.alt = imageName;\n      imageElement.style.maxWidth = \"10rem\";\n      imageElement.style.maxHeight = \"10rem\";\n\n      const range = document.createRange();\n      range.selectNodeContents(this.textareaRef);\n      range.collapse(false); // 将范围折叠到末尾\n\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      const fragment = range.createContextualFragment(\n        `<span>${imageElement.outerHTML}</span>`,\n      );\n      range.insertNode(fragment);\n\n      // 保持光标在插入的图片之后\n      setTimeout(() => {\n        const newRange = document.createRange();\n        newRange.selectNodeContents(this.textareaRef);\n        newRange.collapse(false); // 将范围折叠到末尾\n\n        const newSelection = window.getSelection();\n        newSelection.removeAllRanges();\n        newSelection.addRange(newRange);\n      }, 0);\n    },\n    initExtraOptions() {\n      const models = client.config.getLlmModels();\n      this.openaiModels = models.map((modelGroup) => {\n        return {\n          value: modelGroup.owner,\n          label: modelGroup.owner,\n          children: modelGroup.models.map((model) => {\n            return {\n              value: model,\n              label: model,\n            };\n          }),\n        };\n      });\n      this.onebotPresets = config.onebotConfig.textwraper.options;\n      this.loadSelected();\n    },\n    getOpenaiModelArray(model) {\n      const owner = client.config.getModelOwner(model);\n      return [owner, model];\n    },\n    wrapText(rawText) {\n      const preset = this.getOnebotPreset();\n      if (!this.selectedOption || !preset) return rawText;\n      const testText = \"{xxx}\";\n      console.log(this.onebotPresets);\n\n      const result = preset.replace(testText, rawText);\n      return result;\n    },\n    getOnebotPreset() {\n      const preset = this.onebotPresets\n        .reduce((acc = [], item) => {\n          const arr = item.children ?? [item];\n          return [...acc, ...arr];\n        }, [])\n        .find((child) => child.value == this.selectedOption)?.preset;\n\n      return preset;\n    },\n    loadSelected() {\n      if (this.activeContactor.platform === \"onebot\") {\n        if (this.activeContactor.preset) {\n          this.selectedOption = this.activeContactor.preset;\n        }\n      } else {\n        this.selectedOption = this.activeContactor.options.model;\n      }\n    },\n    adjustTextareaHeight() {\n      const textarea = this.textareaRef;\n      textarea.style.height = \"auto\";\n      textarea.style.height = textarea.scrollHeight + \"px\";\n    },\n    getWraperName() {\n      const preset = this.getOnebotPreset();\n      if (this.activeContactor.platform === \"onebot\" && preset) {\n        if (!this.selectedOption) return \"\";\n        const name = preset.replace(\"#\", \"\").replace(\"{xxx}\", \"\");\n        return name;\n      } else {\n        return \"\";\n      }\n    },\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    getemoji(e) {\n      const inputer = this.textareaRef;\n      inputer.focus();\n      const range = document.createRange();\n      const sel = window.getSelection();\n      if (!sel) return;\n      const unicode = e.detail.unicode;\n      const startPos = this.cursorPosition[0];\n      const endPos = this.cursorPosition[1];\n      const textBeforeCursor = this.userInput.substring(0, startPos);\n      const textAfterCursor = this.userInput.substring(endPos);\n      this.userInput = textBeforeCursor + unicode + textAfterCursor;\n      inputer.innerHTML = this.userInput;\n      // 移动光标位置到表情符号之后\n      setTimeout(() => {\n        range.setStart(inputer.firstChild, startPos + unicode.length);\n        range.setEnd(inputer.firstChild, startPos + unicode.length);\n        sel.removeAllRanges();\n        sel.addRange(range);\n      }, 0);\n      this.ctrlEmojiPanel();\n    },\n    updateCursorPosition() {\n      const selection = window.getSelection();\n      if (!selection) return;\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        this.cursorPosition[0] = range.startOffset;\n        this.cursorPosition[1] = range.endOffset;\n      }\n    },\n    presend() {\n      this.textareaRef.focus();\n      // 获取textarea中的所有img元素\n      const images = this.textareaRef.querySelectorAll(\"img\");\n      const ImageSrcs = Array.from(images).map((img) => img.src);\n      // let msg = this.getSafeText(this.textareaRef.innerText);  // Use innerText, not userInput\n      let msg = this.getSafeText(this.userInput);\n      const wrappedMessage =\n        this.activeContactor.platform === \"onebot\" ? this.wrapText(msg) : msg;\n      this.userInput = this.textareaRef.innerHTML = \"\"; // Clear the textarea\n      this.adjustTextareaHeight();\n\n      const container = {\n        role: \"user\",\n        time: new Date().getTime(),\n        status: \"completed\",\n        content: [\n          {\n            type: \"text\",\n            data: {\n              text: wrappedMessage,\n            },\n          },\n        ],\n      };\n\n      ImageSrcs.forEach((imgUrl) => {\n        container.content.push({\n          type: \"image\",\n          data: {\n            file: imgUrl,\n          },\n        });\n      });\n      this.uploaded.files.forEach((file) => {\n        container.content.push({\n          type: \"file\",\n          data: {\n            file: this.host + file,\n          },\n        });\n      });\n\n      if (this.repliedMessageId) {\n        const replyData = {\n          type: \"reply\",\n          data: {\n            id: this.repliedMessageId,\n          },\n        };\n        container.content.push(replyData);\n      }\n      return container;\n    },\n    async send() {\n      this.$emit(\"toButtom\");\n      const container = this.presend();\n      // this.userInput = \"\";  // Already cleared in presend\n      const message_id = await this.activeContactor.webSend(container); //发送消息\n      container.id = message_id;\n      this.$emit(\"stroge\");\n      this.uploaded.images = [];\n      this.uploaded.files = [];\n    },\n    getSafeText(text) {\n      // return text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n      return text;\n    },\n    cleanScreen() {\n      this.$emit(\"cleanScreen\");\n    },\n    activeBotTools() {\n      if (this.activeContactor.platform === \"onebot\") {\n        if (this.getOnebotPreset() && !this.getOnebotPreset().includes(\"xxx\")) {\n          this.send();\n        }\n      } else {\n        this.$emit(\"setModel\", this.selectedOption);\n        this.$message({\n          message: \"已切换到 \" + this.selectedOption + \" 模型\",\n          type: \"success\",\n        });\n      }\n    },\n    isValidInput(input) {\n      return input.trim().length > 0;\n    },\n    handleKeyDown(event) {\n      if (event.key === \"Enter\") {\n        if (event.ctrlKey) {\n          // Send only if there's text OR files.\n          if (this.userInput && this.isValidInput(this.userInput)) {\n            this.send();\n          } else {\n            this.$message({ message: \"不能发送空消息\", type: \"warning\" });\n          }\n        } else {\n          this.userInput += \"\\n\";\n        }\n      }\n      setTimeout(() => {\n        this.updateCursorPosition();\n      }, 0);\n    },\n    handleInput() {\n      if (!this.isPasting) this.userInput = this.textareaRef.innerText;\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n$mobile: 600px\n$icon-hover: #09f\n\ni:hover\n  color: $icon-hover\n\n.input-bar\n  flex-shrink: 0\n  display: flex\n  flex-direction: column\n  border: 0 solid rgba(161, 154, 154, 0.626)\n  flex-basis: 11rem\n  @media (max-width: $mobile)\n    flex-basis: 7rem\n    width: 100%\n    flex-direction: column-reverse\n    position: fixed\n    bottom: 0\n    z-index: 1000\n    background-color: hsla(0, 0%, 100%, 0.8)\n    backdrop-filter: blur(0.5rem)\n\n  .options\n    display: flex\n    border-top: 0.0625rem solid rgba(128, 128, 128, 0.502)\n    padding: 0.25rem 0.5rem\n    @media (max-width: $mobile)\n      border: none\n      justify-content: space-around\n\n.bu-emoji\n  position: relative\n  white-space: nowrap\n  @media screen and (min-width: $mobile)\n    &:hover p.ho-emoji\n      display: block\n\nemoji-picker\n  position: absolute\n  top: -25.75rem\n  right: -20rem\n\np.ho-emoji\n    text-wrap: nowrap\n    display: none\n    font-size: .75rem\n    padding: .125rem .25rem\n    background-color: #fff\n    border: none\n    box-shadow: 0 .125rem .25rem #0003\n    position: absolute\n    top: 80%\n    left: 50%\n    transform: translate(-60%)\ni\n  display: block\n  padding: 0.25rem 0.5rem 0 0\n  font-size: 1.25rem\n  width: 1.5rem\n  height: 1.5rem\n\n.input-box\n    flex-grow: 1\n    padding: 0 .5rem\n    display: flex\n    flex-direction: column\n    align-items: end\n\n    @media screen and (max-width: $mobile)\n      flex-direction: row\n      align-items: flex-end\n      flex-wrap: nowrap\n\n    .input-content\n      flex-wrap: wrap\n      display: flex\n      background-color: #f1f1f1\n      border: 0\n      flex-grow: 1\n      width: 100%\n\n      @media screen and (max-width: $mobile)\n        margin: 0.5rem 0.5rem 0.8rem 0\n        min-height: 2rem\n        flex-basis: calc( 100% - 4rem )\n        max-width: calc( 100% - 4rem )\n        flex-grow: 0\n        background-color: #fff\n\n      .input-area\n        overflow-y: auto\n        max-height: 20rem\n        resize: none\n        font-size: 1rem\n        background-color: #f1f1f1\n        border: 0\n        flex-grow: 1\n        width: 100%\n        moz-user-select: -moz-none\n        -moz-user-select: none\n        -o-user-select: none\n        -khtml-user-select: none\n        -webkit-user-select: none\n        -ms-user-select: none\n        user-select: none\n        &:focus\n          border: 0\n          outline: none\n\n        @media screen and (max-width: $mobile)\n          background-color: transparent\n          margin: 0.2rem\n          caret-color: #14C1EB\n\n    button\n        white-space: nowrap\n        color: #f0f8ff\n        border-radius: .3125rem\n        border: 0\n        background-color: $icon-hover\n        padding: .25rem 1rem\n        margin-bottom: .8rem\n        margin-right: .5rem\n        cursor: pointer\n\n        @media screen and (max-width: $mobile)\n          height: 2rem\n          margin-right: 0rem\n</style>\n","<template>\n  <div class=\"file-block\">\n    <div class=\"file-block-icon\">\n      <div class=\"file-icon\" :class=\"iconClass\">\n        <!-- Dynamic class binding -->\n        <span v-if=\"file_type\"> {{ file_type.toUpperCase() }}</span>\n      </div>\n    </div>\n    <div class=\"file-block-text\">\n      <div class=\"file-name\" :title=\"file_name\">{{ file_name }}</div>\n      <div class=\"file-info\">\n        {{ file_type.toUpperCase() }}, {{ formated_file_size }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    fileUrl: {\n      // 修改为 camelCase\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      file_name: \"\",\n      file_type: \"\",\n      formated_file_size: \"\",\n    };\n  },\n  computed: {\n    iconClass() {\n      //Use lower case for comparison, easier to manage\n      const type = this.file_type.toLowerCase();\n\n      if (type === \"pdf\") {\n        return \"file-icon-pdf\";\n      } else if ([\"xls\", \"xlsx\", \"csv\"].includes(type)) {\n        // Spreadsheet (Excel, CSV)\n        return \"file-icon-spreadsheet\";\n      } else if ([\"doc\", \"docx\"].includes(type)) {\n        // Word\n        return \"file-icon-word\";\n      } else if ([\"ppt\", \"pptx\"].includes(type)) {\n        // PowerPoint\n        return \"file-icon-ppt\";\n      } else {\n        return \"file-icon-other\"; // Default (gray)\n      }\n    },\n  },\n  created() {\n    // 从查询参数中获取文件大小\n    const url = this.fileUrl.split(\"?\");\n    const params = new URLSearchParams(url[1]);\n    const bits = params.get(\"size\");\n    this.file_name = params.get(\"name\");\n    this.formated_file_size = this.formatFileSize(bits);\n    // 从url中获取文件类型\n    const file_type = url[0].split(\".\");\n    this.file_type = file_type[file_type.length - 1];\n  },\n  methods: {\n    formatFileSize(bits) {\n      const units = [\"B\", \"KB\", \"MB\"];\n      let unitIndex = 0;\n      while (bits >= 1024) {\n        bits /= 1024;\n        unitIndex++;\n      }\n      return bits.toFixed(2) + \" \" + units[unitIndex];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.file-block {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 5px;\n  background-color: #f5f5f5;\n  margin-bottom: 8px;\n  width: 12rem;\n  position: relative;\n}\n\n.file-block-icon {\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n}\n\n.file-icon {\n  width: 40px;\n  height: 40px;\n  /*  Remove default background  */\n  /* background-color: #4285f4; */\n  color: #fff;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n}\n/* Add specific styles for each file type */\n.file-icon-pdf {\n  background-color: #e70012;\n}\n\n.file-icon-spreadsheet {\n  background-color: #138147;\n}\n\n.file-icon-word {\n  background-color: #144eb3;\n}\n.file-icon-ppt {\n  background-color: #ca4b27;\n}\n\n.file-icon-other {\n  background-color: gray;\n}\n\n.file-block-text {\n  flex: 1;\n  overflow: hidden;\n}\n\n.file-name {\n  font-weight: bold;\n  font-size: 12px;\n  color: #333;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.file-info {\n  font-size: 10px;\n  color: #777;\n}\n</style>\n","<template>\n  <div class=\"tool-call-bar\">\n    <div class=\"status-icon\">\n      <span v-if=\"toolCallSuccess\" class=\"call-success-icon\">\n        <div class=\"checkmark-container\">\n          <svg\n            class=\"checkmark\"\n            viewBox=\"0 0 52 36\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <polyline points=\"1 20 15 36 51 1\" />\n          </svg>\n        </div>\n      </span>\n      <span v-else-if=\"toolCallFail\" class=\"call-fail-icon\">❌</span>\n      <span v-else class=\"call-pend-icon\"></span>\n    </div>\n    <div class=\"tool-info\">\n      <div>\n        <span class=\"tool-name\">{{ toolCall.name }}</span>\n      </div>\n      <div class=\"tool-status\">\n        {{ call_status }}\n      </div>\n    </div>\n    <div class=\"extra-info\">\n      <button\n        ref=\"show-extra-info\"\n        :class=\"{ active: showExtraInfo, 'extra-info-button': true }\"\n        @click=\"showExtraInfo = !showExtraInfo\"\n      >\n        <svg\n          t=\"1731677922196\"\n          class=\"icon\"\n          viewBox=\"0 0 1024 1024\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          p-id=\"5948\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <path\n            d=\"M778.965749 128.759549l-383.064442 383.063419 388.097062 388.096039-0.070608 0.033769c12.709463 13.137205 20.529569 31.024597 20.529569 50.731428 0 40.376593-32.736589 73.112158-73.115228 73.112158-19.705807 0-37.591153-7.819083-50.730405-20.528546l-0.034792 0.035816L241.890654 564.622498l0.035816-0.035816c-13.779841-13.281491-22.3838-31.915897-22.3838-52.585659 0-0.071631 0-0.106424 0-0.178055 0-0.072655 0-0.10847 0-0.144286 0-20.669762 8.603959-39.341007 22.3838-52.622498l-0.035816-0.034792L680.573835 20.337187l0.180102 0.179079c13.139252-12.5662 30.950919-20.313651 50.587142-20.313651 40.378639 0 73.115228 32.736589 73.115228 73.114205C804.455283 95.485725 794.567076 115.334795 778.965749 128.759549z\"\n            p-id=\"5949\"\n          ></path>\n        </svg>\n      </button>\n    </div>\n    <div :class=\"{ active: showExtraInfo, 'extra-info-bar': true }\">\n      <div class=\"extra-detail\">\n        <div class=\"detail-params\">\n          <div class=\"detail-title\">参数</div>\n          <div class=\"detail-content\">\n            {{ toolCall.params }}\n          </div>\n        </div>\n\n        <div class=\"detail-result\">\n          <div class=\"detail-title\">返回值</div>\n          <div class=\"detail-content\">\n            {{ toolCall.result }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    toolCall: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      showExtraInfo: false,\n    };\n  },\n  computed: {\n    toolCallSuccess() {\n      return (\n        this.toolCall.action === \"finished\" &&\n        this.toolCall?.result?.error === null\n      );\n    },\n    toolCallFail() {\n      return (\n        this.toolCall.action === \"finished\" &&\n        !this.toolCall?.result?.error !== null\n      );\n    },\n    call_status() {\n      if (this.toolCall.action == \"started\") return \"开始运行\";\n      if (this.toolCall.action == \"pending\") return \"函数构建中\";\n      if (this.toolCall.action == \"running\") return \"函数运行中\";\n      if (this.toolCallSuccess) return \"函数运行成功\";\n      if (this.toolCallFail) return \"函数运行失败\";\n      else return \"未知状态\";\n    },\n  },\n  mounted() {},\n};\n</script>\n<style scoped>\n.extra-detail {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 20rem;\n  max-height: 25rem;\n  flex-grow: 1;\n  padding-bottom: 1rem;\n}\n\n.detail-params,\n.detail-result {\n  margin-top: 1rem;\n  width: calc(100% - 2rem);\n  background-color: #fff;\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n}\n\n.detail-title {\n  padding-top: 0.5rem;\n  flex-basis: 2rem;\n  width: 90%;\n  border-bottom: 1px solid #5c5c5c;\n}\n\n.detail-content {\n  user-select: text;\n  margin: 0.5rem 0rem;\n  font-size: 0.8rem;\n  color: #5c5c5c;\n  width: 90%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: 8rem;\n  flex-grow: 1;\n}\n\n.extra-info-bar {\n  position: absolute;\n  overflow: hidden;\n  z-index: 2;\n  max-height: 0px;\n  transition: 0.3s;\n  top: 4rem;\n  position: absolute;\n  background-color: #f5f5f5;\n  border-radius: 0.5rem;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n}\n\n.extra-info-bar.active {\n  max-height: 50rem;\n}\n\n.tool-info {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n}\n\n.extra-info {\n  flex-basis: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nbutton.extra-info-button {\n  transition: transform 0.3s ease;\n  transform: rotate(90deg);\n}\n\nbutton.extra-info-button.active {\n  transform: rotate(-90deg);\n}\n\nbutton.extra-info-button:hover svg {\n  transition: transform 0.3s ease;\n  transform: scale(1.2);\n}\n\n.tool-name {\n  font-weight: bolder;\n}\n\n.tool-call-bar {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  width: 15rem;\n  height: 4rem;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  display: flex;\n  position: relative;\n}\n\n.status-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-basis: 4rem;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #f5f5f5;\n}\n\n.call-pend-icon {\n  transform: rotateZ(45deg);\n  perspective: 1000px;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  color: #fff;\n}\n\n.call-pend-icon:before,\n.call-pend-icon:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: inherit;\n  height: inherit;\n  border-radius: 50%;\n  transform: rotateX(70deg);\n  animation: 1s spin linear infinite;\n}\n\n.call-pend-icon:after {\n  color: #ff3d00;\n  transform: rotateY(70deg);\n  animation-delay: 0.4s;\n}\n\n@keyframes rotate {\n  0% {\n    transform: translate(-50%, -50%) rotateZ(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotateZ(360deg);\n  }\n}\n\n@keyframes rotateccw {\n  0% {\n    transform: translate(-50%, -50%) rotate(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotate(-360deg);\n  }\n}\n\n@keyframes spin {\n  0%,\n  100% {\n    box-shadow: 0.2em 0px 0 0px currentcolor;\n  }\n\n  12% {\n    box-shadow: 0.2em 0.2em 0 0 currentcolor;\n  }\n\n  25% {\n    box-shadow: 0 0.2em 0 0px currentcolor;\n  }\n\n  37% {\n    box-shadow: -0.2em 0.2em 0 0 currentcolor;\n  }\n\n  50% {\n    box-shadow: -0.2em 0 0 0 currentcolor;\n  }\n\n  62% {\n    box-shadow: -0.2em -0.2em 0 0 currentcolor;\n  }\n\n  75% {\n    box-shadow: 0px -0.2em 0 0 currentcolor;\n  }\n\n  87% {\n    box-shadow: 0.2em -0.2em 0 0 currentcolor;\n  }\n}\n\n.checkmark-container {\n  width: 2.25rem;\n  height: 2rem;\n}\n\n.checkmark {\n  width: 100%;\n  height: 100%;\n}\n\n.checkmark polyline {\n  fill: none;\n  stroke: green;\n  /* 设置颜色为绿色 */\n  stroke-width: 10;\n  /* 设置线条的粗细 */\n  stroke-dasharray: 60;\n  /* 总长度 */\n  stroke-dashoffset: 60;\n  /* 起始偏移量 */\n  animation: draw 1s forwards;\n  /* 动画定义 */\n}\n\n@keyframes draw {\n  to {\n    stroke-dashoffset: 0;\n    /* 结束时偏移量为0，显示完整的对勾 */\n  }\n}\n</style>\n","<template>\n  <div class=\"reason-block\">\n    <div class=\"head-bar\">\n      <div class=\"reason-info\">{{ getReasonInfo }}</div>\n      <button\n        :class=\"{ active: show, 'extra-info-button': true }\"\n        @click=\"toggleShow\"\n      >\n        <i class=\"iconfont icon-return\" />\n      </button>\n    </div>\n    <div\n      ref=\"reasonContent\"\n      class=\"reason-content\"\n      :style=\"{ 'max-height': maxHeight }\"\n    >\n      {{ content }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    content: {\n      required: true,\n      type: String,\n      default: \"\",\n    },\n    startTime: {\n      required: true,\n      type: Number,\n    },\n    endTime: {\n      required: false,\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      show: true,\n      maxHeight: \"auto\", // 初始值\n    };\n  },\n  computed: {\n    getReasonInfo() {\n      if (this.endTime) {\n        const timeDiff = this.endTime - this.startTime;\n        return `已深度思考（耗时 ${(timeDiff / 1000).toFixed(2)} 秒）`;\n      } else {\n        return `正在深度思考......`;\n      }\n    },\n  },\n  mounted() {\n    this.updateMaxHeight(); //初始展开\n  },\n  updated() {\n    this.updateMaxHeight(); //防止内容更新,导致高度计算错误\n  },\n  methods: {\n    toggleShow() {\n      this.show = !this.show;\n      this.updateMaxHeight();\n    },\n    updateMaxHeight() {\n      if (this.show) {\n        // 展开时，设置为内容实际高度 + 一些额外空间 (如 padding)\n        this.maxHeight = this.$refs.reasonContent.scrollHeight + 20 + \"px\";\n      } else {\n        // 收起时，设置为 0\n        this.maxHeight = \"0px\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reason-block {\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n.reason-info {\n  margin: 0.5rem 0;\n  font-size: 0.8rem;\n  min-width: 8rem;\n  flex-basis: 10rem;\n  text-wrap: nowrap;\n}\n\n.head-bar {\n  flex-basis: 1rem;\n  margin: 0.5rem 0;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: fit-content;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  padding: 0px 0.5rem;\n}\n\n.head-bar:hover {\n  background-color: #ededed;\n}\n\n.head-bar button {\n  flex-basis: 1rem;\n  margin-left: 0.5rem;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n  /* 使用 ease-in-out */\n  display: flex;\n  align-items: center;\n  gap: 2px;\n}\n\n.head-bar button i {\n  font-size: 0.8rem;\n}\n\n.head-bar button.active {\n  transform: rotate(-90deg);\n}\n\n.reason-content {\n  max-width: 100%;\n  /* max-height 在 JavaScript 中动态控制 */\n  overflow: hidden;\n  /* 隐藏超出部分 */\n  user-select: text;\n  font-size: 0.8rem;\n  color: #6f6f6f;\n  white-space: pre-line;\n  border-left: 2px solid #ccc;\n  transition: max-height 0.3s ease-in-out;\n  /* 对 max-height 应用过渡 */\n  padding-left: 1rem;\n}\n</style>\n","<template>\n  <div id=\"message-menu\">\n    <template v-if=\"type === 'friend'\">\n      <div @click.stop=\"enterChat\">\n        <i class=\"iconfont chat\"></i>\n        <span>进入对话</span>\n      </div>\n      <div @click.stop=\"togglePriority\">\n        <i class=\"iconfont star\"></i>\n        <span>{{ message.priority === 0 ? \"取消置顶\" : \"置顶\" }}</span>\n      </div>\n      <div @click.stop=\"shareBot\">\n        <i class=\"iconfont icon-share\"></i>\n        <span>分享</span>\n      </div>\n      <div @click.stop=\"deleteBot\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除</span>\n      </div>\n    </template>\n    <template v-else>\n      <div v-if=\"seletedText\" @click.stop=\"copySeletedText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制选中</span>\n      </div>\n      <div @click.stop=\"copyText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制消息</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"copySeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制图片</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"saveSeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>保存图片</span>\n      </div>\n      <div @click.stop=\"retryMessage\">\n        <i class=\"iconfont reset\"></i>\n        <span>重试消息</span>\n      </div>\n      <div @click.stop=\"replyMessage\">\n        <i class=\"iconfont yinyong\"></i>\n        <span>引用消息</span>\n      </div>\n      <div @click.stop=\"deleteMessage\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除消息</span>\n      </div>\n    </template>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"MessageMenu\", // 建议添加组件 name，方便调试\n  props: {\n    type: {\n      type: String,\n      default: \"message\",\n    },\n    message: {\n      type: Object,\n      default: () => ({}),\n    },\n    seletedText: {\n      type: String,\n      default: \"\",\n    },\n    seletedImage: {\n      type: String,\n      default: \"\",\n    },\n  },\n  emits: [\"close\", \"message-option\"], //显式声明emit的事件\n  methods: {\n    async copySeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.copyImageToClipboard(this.seletedImage);\n      } catch (error) {\n        console.error(\"复制选择图片失败：\", error);\n      }\n    },\n    async saveSeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.downloadImage(this.seletedImage);\n      } catch (error) {\n        console.error(\"保存选择图片失败：\", error);\n      }\n    },\n\n    copyText() {\n      let text = \"\";\n      this.message.content.forEach((element) => {\n        if (element.type === \"text\") {\n          text += element.data.text;\n        } else if (element.type === \"image\") {\n          text += `\\n![图片](${element.data.file})`;\n        }\n      });\n      this.copyTextToClipboard(text);\n      this.$emit(\"close\");\n    },\n\n    copySeletedText() {\n      this.copyTextToClipboard(this.seletedText);\n      this.$emit(\"close\");\n    },\n\n    retryMessage() {\n      this.$emit(\"message-option\", \"retry\");\n      this.$emit(\"close\");\n    },\n\n    replyMessage() {\n      this.$emit(\"message-option\", \"reply\");\n      this.$emit(\"close\");\n    },\n\n    deleteMessage() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n    enterChat() {\n      this.$emit(\"message-option\", \"enter\");\n      this.$emit(\"close\");\n    },\n    togglePriority() {\n      this.$emit(\"message-option\", \"priority\");\n      this.$emit(\"close\");\n    },\n    shareBot() {\n      this.$emit(\"message-option\", \"share\");\n      this.$emit(\"close\");\n    },\n    deleteBot() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n\n    // 封装复制文本到剪贴板的函数\n    async copyTextToClipboard(text) {\n      let textarea;\n      try {\n        textarea = document.createElement(\"textarea\");\n        textarea.style.position = \"absolute\";\n        textarea.style.left = \"-9999px\";\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        textarea.setSelectionRange(0, 99999); // For mobile devices\n        await document.execCommand(\"copy\");\n        this.$message({ message: \"复制成功\", type: \"success\" });\n      } catch (err) {\n        console.error(\"复制失败:\", err);\n        this.$message({ message: \"复制失败\", type: \"error\" });\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    },\n    // 封装复制图片到剪贴板的函数\n    async copyImageToClipboard(imgSrc) {\n      try {\n        const response = await fetch(imgSrc);\n        if (!response.ok) {\n          throw new Error(\"网络错误，无法获取图片\");\n        }\n        const blob = await response.blob();\n        const img = new Image();\n        const url = URL.createObjectURL(blob);\n\n        img.onload = async () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          // 使用 Promise 包装 toBlob\n          const pngBlob = await new Promise((resolve) => {\n            canvas.toBlob(resolve, \"image/png\");\n          });\n\n          if (pngBlob) {\n            const item = new ClipboardItem({ \"image/png\": pngBlob });\n            await navigator.clipboard.write([item]); // 使用 await\n            this.$message({\n              message: \"图片已复制到剪贴板\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"转换为 PNG 失败\",\n              type: \"error\",\n            });\n          }\n          URL.revokeObjectURL(url);\n        };\n        img.onerror = () => {\n          this.$message({ message: \"加载图片失败\", type: \"error\" });\n          URL.revokeObjectURL(url); // 确保在错误时也释放 URL\n        };\n        img.src = url;\n      } catch (err) {\n        console.error(\"复制图片失败:\", err);\n        this.$message({ message: \"复制图片失败\", type: \"error\" });\n      }\n    },\n    // 封装下载图片的函数\n    async downloadImage(imgSrc) {\n      try {\n        const link = document.createElement(\"a\");\n        link.href = imgSrc;\n        link.download = \"image.png\";\n        link.click();\n      } catch (err) {\n        console.error(\"保存图片失败：\", err);\n        this.$message({ message: \"保存图片失败\", type: \"error\" });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n#message-menu\n    position: fixed\n    display: flex\n    flex-direction: column\n    justify-content: center\n    background-color: hsla(0, 0%, 100%, .78)\n    backdrop-filter: blur(0.5rem)\n    border-radius: 0.5rem\n    padding: .5rem\n    z-index: 9999\n\n    @keyframes pop-up\n        0%\n            transform: scale(1)\n        50%\n            transform: scale(1.2)\n        100%\n            transform: scale(1)\n\n    & div\n        margin: 0.4rem 0\n        padding: .2rem .4rem\n        border-radius: .2rem\n        display: flex\n        justify-content: space-between\n        align-items: center\n        cursor: pointer\n\n    & div:hover\n        background-color: hsla(0, 0%, 90%, .88)\n\n    & div:hover > i\n        animation: pop-up 0.5s ease-in-out 1 forwards\n\n    & i\n        position: absolute\n        display: flex\n        justify-content: center\n        align-items: center\n        transform-origin: center\n\n\n    & span\n        font-size: 0.8rem\n        color: rgb(120, 124, 127)\n        margin-left: 1.8rem\n</style>\n","<template>\n  <div class=\"add-contactor\">\n    <div class=\"head\">\n      <div class=\"title\">添加机器人</div>\n      <div class=\"close-icon\" @click=\"close\">✕</div>\n    </div>\n    <div class=\"body\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\" />\n        <input\n          v-model=\"keyWord\"\n          type=\"text\"\n          placeholder=\"输入搜索关键词\"\n          @input=\"loadSerachPresets\"\n        />\n      </div>\n      <div class=\"info\">\n        <header class=\"presets-types\">\n          <nav\n            v-for=\"(type, index) in avaliablePresetTypes\"\n            :key=\"index\"\n            :class=\"activeTypeIndex === index ? 'active' : ''\"\n            @click=\"changeShownType(index)\"\n          >\n            {{ type }}\n          </nav>\n        </header>\n        <div :style=\"{ left: buttonTranslate }\" class=\"slide-button\"></div>\n        <div\n          v-if=\"shownPrestsList.length > 0 || [0, 3].includes(activeTypeIndex)\"\n          class=\"presets-list\"\n        >\n          <div\n            v-for=\"(preset, index) in shownPrestsList\"\n            :key=\"index\"\n            class=\"presets-item\"\n          >\n            <div v-if=\"preset.avatar\" class=\"preset-avatar custom\">\n              <img :src=\"preset.avatar\" />\n            </div>\n            <div v-else-if=\"preset.model\" class=\"preset-avatar model\">\n              <img :src=\"Contactor.getAvatarByModel(preset.model)\" />\n            </div>\n            <div v-else class=\"preset-avatar\">\n              {{ preset.name.slice(0, 2) }}\n            </div>\n            <div class=\"preset-info\">\n              <div class=\"preset-name\">{{ preset.name }}</div>\n              <div :title=\"preset.opening\" class=\"preset-description\">\n                {{ preset.opening }}\n              </div>\n            </div>\n            <el-button @click=\"addBot(preset)\">添加</el-button>\n          </div>\n          <div v-show=\"showPresetsLoader\" ref=\"loader\" class=\"loading\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n        <div v-else class=\"empty-list\">\n          <el-empty :image-size=\"200\" />\n        </div>\n      </div>\n      <div class=\"options\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Contactor from \"../lib/contactor\";\nexport default {\n  emits: [\"addBot\", \"close\"],\n  data() {\n    const avaliablePresetTypes = [\"推荐\", \"最近\", \"本地\", \"系统\"];\n    return {\n      show: false,\n      presetsList: [],\n      recommendPresets: [],\n      recentPresets: [],\n      localPresets: [],\n      systemPresets: [],\n      searchPresets: [],\n      systemShownNum: 0,\n      recommendShownNum: 0,\n      keyWord: \"\",\n      activeTypeIndex: 0,\n      buttonTranslate: 0,\n      avaliablePresetTypes,\n      moreSystemPresets: true,\n      moreRecommendPresets: true,\n      observer: null, // Store the observer instance\n      Contactor,\n    };\n  },\n  computed: {\n    showPresetsLoader() {\n      return this.activeTypeIndex == 3\n        ? this.moreSystemPresets\n        : this.activeTypeIndex == 0\n          ? this.moreRecommendPresets\n          : false;\n    },\n    shownPrestsList() {\n      // 如果 keyWord 不为空，返回 searchPresets\n      if (this.keyWord) {\n        return this.searchPresets;\n      }\n      return this.activeTypeIndex === 2\n        ? this.localPresets\n        : this.activeTypeIndex === 1\n          ? this.recentPresets\n          : this.activeTypeIndex === 0\n            ? this.recommendPresets\n            : this.activeTypeIndex === 3\n              ? this.systemPresets\n              : null; // 或者返回默认值\n    },\n  },\n  async mounted() {\n    this.getAddHistory();\n\n    await this.loadSpecificType();\n\n    if (\"IntersectionObserver\" in window) {\n      const callback = (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.loadMoreData();\n          }\n        });\n      };\n\n      this.observer = new IntersectionObserver(callback);\n      const presetsLoader = this.$refs.loader;\n      if (presetsLoader) {\n        this.observer.observe(presetsLoader);\n      }\n    } else {\n      // Fallback for browsers that do not support IntersectionObserver\n      // Use scroll event to detect when the loader is visible.\n      window.addEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  beforeUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    } else {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  methods: {\n    async addBot(preset) {\n      this.strogeAddHistory(preset);\n      this.$emit(\"addBot\", preset);\n      this.$message.success(\"添加成功\");\n    },\n    strogeAddHistory(preset) {\n      // 先检查现有列表中是否有重复项\n      const existingItem = this.recentPresets.find(\n        (item) => item.name === preset.name,\n      );\n      if (existingItem) {\n        // 如果有重复项，将其从数组中移除\n        this.recentPresets.splice(this.recentPresets.indexOf(existingItem), 1);\n      }\n      // 添加新项目到数组的最前面\n      this.recentPresets.unshift(preset);\n      // 检查数组长度并保持在小于或等于6\n      if (this.recentPresets.length > 6) {\n        this.recentPresets.pop(); // 移除最后一个元素，即最旧的元素\n      }\n      // 更新到 localStorage\n      localStorage.setItem(\"addHistory\", JSON.stringify(this.recentPresets));\n    },\n    getAddHistory() {\n      const data = localStorage.getItem(\"addHistory\");\n      if (data) {\n        this.recentPresets = JSON.parse(data);\n      }\n    },\n    async changeShownType(index) {\n      this.activeTypeIndex = index;\n      this.buttonTranslate = `${49.6 * index}px`;\n      await this.loadSpecificType();\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    async loadSpecificType() {\n      const type = this.avaliablePresetTypes[this.activeTypeIndex];\n      this.presetsList = await this.getPresetList(type);\n    },\n    async getPresetList(type) {\n      if (type === \"系统\") {\n        return await this.loadSystemPresets();\n      } else if (type === \"推荐\") {\n        return await this.loadRecommendedPresets();\n      } else if (type === \"最近\") {\n        return this.recentPresets;\n      } else if (type === \"本地\") {\n        return this.localPresets;\n      }\n    },\n    async loadRecommendedPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=recommended&start=${this.recommendShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.recommendPresets.push(res.data[i]);\n      }\n      this.recommendShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreRecommendPresets = false;\n      }\n      return this.recommendPresets;\n    },\n    async loadSystemPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=system&start=${this.systemShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.systemPresets.push(res.data[i]);\n      }\n      this.systemShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreSystemPresets = false;\n      }\n      return this.systemPresets;\n    },\n    async loadSerachPresets() {\n      const load = async () => {\n        const res = await fetch(\n          `/api/openai/presets?type=search&keyword=${this.keyWord}`,\n        ).then((res) => res.json());\n        this.searchPresets = res.data;\n      };\n      // 添加节流逻辑\n      if (this.searchTimer) {\n        clearTimeout(this.searchTimer);\n      }\n      this.searchTimer = setTimeout(() => {\n        load();\n      }, 500);\n    },\n    loadMoreData() {\n      if (this.showPresetsLoader && this.activeTypeIndex === 3) {\n        this.loadSystemPresets();\n      } else if (this.showPresetsLoader && this.activeTypeIndex === 0) {\n        this.loadRecommendedPresets();\n      }\n    },\n    handleScroll() {\n      const loader = this.$refs.loader;\n      if (!loader) return;\n\n      const rect = loader.getBoundingClientRect();\n      const isVisible =\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <=\n          (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <=\n          (window.innerWidth || document.documentElement.clientWidth);\n\n      if (isVisible) {\n        this.loadMoreData();\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.empty-list {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.presets-list {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1rem;\n  height: calc(100% - 3rem);\n  overflow-y: auto;\n}\n\n.preset-description {\n  white-space: nowrap;\n  /* 不换行 */\n  overflow: hidden;\n  /* 内容超出隐藏 */\n  text-overflow: ellipsis;\n  /* 使用省略号 */\n  font-size: 0.8rem;\n  color: #888;\n  width: 100%;\n}\n\n.presets-item button {\n  flex-basis: 60px;\n}\n\n.presets-loader {\n  width: 100%;\n  height: 1rem;\n}\n\n.presets-item {\n  position: relative;\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-basis: 3rem;\n  justify-content: space-around;\n}\n\n.preset-avatar {\n  min-width: 2.8rem;\n  max-width: 2.8rem;\n  height: 2.8rem;\n  background-color: #0099ff;\n  color: #fff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preset-avatar.model {\n  background-color: #ffffff;\n  border-radius: 50%;\n}\n\n.preset-avatar.custom img {\n  width: 100%;\n  border-radius: 50%;\n}\n\n.preset-avatar.model img {\n  width: 90%;\n}\n\n.preset-info {\n  position: relative;\n  margin-left: 0.5rem;\n  width: calc(100% - 7.5rem);\n}\n\n.slide-button {\n  width: 2rem;\n  border-top: #0099ff 2px solid;\n  margin-left: 0.3rem;\n  position: relative;\n  left: 0;\n  transition: left 0.3s;\n}\n\n.body {\n  margin-top: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  overflow: hidden;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.info {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.presets-types {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  width: 100%;\n  margin-top: 1rem;\n  position: relative;\n}\n\n.presets-types nav {\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  margin-right: 0.5rem;\n  border-radius: 0.5rem;\n  font-size: 0.8rem;\n}\n\n.presets-types nav.active {\n  color: #0099ff;\n}\n\n.search {\n  position: relative;\n  box-sizing: border-box;\n  border-bottom: 1px solid #f1f1f1;\n  width: 100%;\n  height: 2em;\n  background-color: #f1f1f1;\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  padding-left: 0.5rem;\n}\n\n.search:has(input:focus) {\n  border: #0099ff 1px solid;\n}\n\n.search input {\n  position: absolute;\n  width: calc(100% - 2rem);\n  height: 1.5rem;\n  background-color: #f1f1f1;\n  border: none;\n  outline: none;\n  margin-left: 1rem;\n}\n\n.search i {\n  position: absolute;\n  font-size: 0.8rem;\n  color: #888;\n}\n\n.add-contactor {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400px;\n  height: 500px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  overflow: hidden;\n}\n\n.head {\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #f1f1f1;\n  font-size: 0.8rem;\n}\n\n.close-icon {\n  width: 1.5rem;\n  font-size: 0.8rem;\n  height: 100%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close-icon:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n@media (max-width: 600px) {\n  .add-contactor {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0;\n  }\n}\n</style>\n<style>\n.loading,\n.loading > div {\n  position: relative;\n  box-sizing: border-box;\n}\n\n.loading {\n  display: block;\n  font-size: 0;\n  color: #000;\n}\n\n.loading.la-dark {\n  color: #333;\n}\n\n.loading > div {\n  display: inline-block;\n  float: none;\n  background-color: currentColor;\n  border: 0 solid currentColor;\n}\n\n.loading {\n  margin-top: 1rem;\n  width: 16px;\n  min-height: 1rem;\n}\n\n.loading > div {\n  position: absolute;\n  top: 0;\n  left: -100%;\n  display: block;\n  width: 16px;\n  width: 100%;\n  height: 16px;\n  height: 100%;\n  border-radius: 100%;\n  opacity: 0.5;\n  animation:\n    ball-circus-position 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1),\n    ball-circus-size 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1);\n}\n\n.loading > div:nth-child(1) {\n  animation-delay:\n    0s,\n    -0.5s;\n}\n\n.loading > div:nth-child(2) {\n  animation-delay:\n    -0.5s,\n    -1s;\n}\n\n.loading > div:nth-child(3) {\n  animation-delay:\n    -1s,\n    -1.5s;\n}\n\n.loading > div:nth-child(4) {\n  animation-delay:\n    -1.5s,\n    -2s;\n}\n\n.loading > div:nth-child(5) {\n  animation-delay:\n    -2s,\n    -2.5s;\n}\n\n@keyframes ball-circus-position {\n  50% {\n    left: 100%;\n  }\n}\n\n@keyframes ball-circus-size {\n  50% {\n    transform: scale(0.3, 0.3);\n  }\n}\n</style>\n","<script>\nimport { client, config } from \"@/lib/runtime.js\";\nimport AddContactor from \"@/components/AddContactor.vue\";\nimport ContextMenu from \"@/components/ContextMenu.vue\";\n\nexport default {\n  components: {\n    AddContactor,\n    ContextMenu,\n  },\n  data() {\n    let list = client.getContactors();\n    const onPhone = window.innerWidth < 600;\n\n    return {\n      onPhone,\n      contactorList: list,\n      showAddOptions: false,\n      showAddWindow: false,\n      showMenu: false,\n      menuX: 0,\n      menuY: 0,\n      selectedFriend: null,\n    };\n  },\n  computed: {\n    sortedList() {\n      return [...this.contactorList].sort((a, b) =>\n        b.priority - a.priority == -1 ? 1 : b.lastUpdate - a.lastUpdate,\n      );\n    },\n  },\n  mounted() {\n    this.addReactiveListener();\n  },\n  beforeCreate() {\n    if (client.getContactors().length == 0) {\n      client.on(\n        \"loaded\",\n        () => {\n          this.contactorList = client.getContactors();\n        },\n        false,\n      );\n    }\n  },\n  methods: {\n    genBotByPreset() {\n      this.showAddOptions = false;\n      this.showAddWindow = true;\n    },\n    showChat(id) {\n      // 如果当前路径 name 是 blank 或者 chat_view ，跳转到 /chat/:id\n      if (this.$route.name == \"blank\" || this.$route.name == \"chat_view\") {\n        this.$router.push({ name: \"chat_view\", params: { id: id } });\n      } else if (\n        this.$route.name == \"contactors\" ||\n        this.$route.name == \"profile_view\"\n      ) {\n        this.$router.push({ name: \"profile_view\", params: { id: id } });\n      } else {\n        // 否则，直接跳转到 /chat/:id\n        this.$router.replace({ name: \"chat_view\", params: { id: id } });\n      }\n    },\n    getId(item) {\n      // 获取当前页面的id\n      let currentId = this.$route.params.id;\n      // 获取当前页面的contactorId\n      let contactorId = item.id;\n      // 如果当前页面的id和contactorId相同，则返回active\n      if (currentId == contactorId) {\n        return \"active\";\n      } else {\n        return item.priority == 0 ? \"important\" : \"\";\n      }\n    },\n    async genBlankBot() {\n      const options = config.getLLMDefaultConfig();\n      const blankConfig = {\n        id: this.genFakeId(),\n        title: options.default_model,\n        avatarPolicy: 0,\n        namePolicy: 2,\n        priority: 1,\n        options: options,\n      };\n\n      this.showAddOptions = false;\n      await client.addConcator(\"openai\", blankConfig);\n      this.addReactiveListener();\n    },\n    startResize(event) {\n      this.isResizing = true;\n      this.startX = event.clientX;\n      this.startWidth = this.$refs.friendlists.offsetWidth;\n      document.addEventListener(\"mousemove\", this.resize);\n      document.addEventListener(\"mouseup\", this.stopResize);\n    },\n    resize(event) {\n      if (this.isResizing) {\n        // debugger;\n        let newWidth = this.startWidth + (event.clientX - this.startX);\n        const remSize = document.documentElement.style.fontSize\n          ? parseFloat(document.documentElement.style.fontSize)\n          : 16;\n        const maxWidth = 20 * remSize;\n        const minWidth = 12 * remSize;\n        newWidth =\n          newWidth > maxWidth\n            ? maxWidth\n            : newWidth < minWidth\n              ? minWidth\n              : newWidth;\n        this.$refs.friendlists.style.minWidth = newWidth + \"px\";\n        this.$refs.friendlists.style.maxWidth = newWidth + \"px\";\n      }\n    },\n    stopResize() {\n      this.isResizing = false;\n      document.removeEventListener(\"mousemove\", this.resize);\n      document.removeEventListener(\"mouseup\", this.stopResize);\n    },\n    genFakeId() {\n      // 生成5位随机数\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      // 将随机数转换为字符串\n      const randomNumStr = `1${randomNum}`;\n      if (!this.id) {\n        // 将拼接后的字符串转换为数字并返回\n        return parseInt(randomNumStr);\n      } else {\n        // 生成5位随机数\n        const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n        // 将随机数转换为字符串\n        const randomNumStr = `${this.id}${subRandomNum}`;\n        return parseInt(randomNumStr);\n      }\n    },\n    mergeOptions(options) {\n      let result = {};\n      const defaultOptions = config.LLMDefaultConfig;\n      for (const key in defaultOptions) {\n        if (options[key] === undefined) {\n          if (key == \"enable_tool_call\") {\n            if (options.tools) {\n              result[key] = true;\n            }\n            continue;\n          }\n          result[key] = defaultOptions[key];\n        } else {\n          result[key] = options[key];\n        }\n      }\n      return result;\n    },\n    async addPresetContactor(preset) {\n      const contactor = {\n        id: this.genFakeId(),\n        namePolicy: 1,\n        avatarPolicy: preset.avatar ? 1 : 0,\n        avatar: preset.avatar ? preset.avatar : undefined,\n        name: preset.name,\n        title: preset.title,\n        priority: 1,\n        options: this.mergeOptions(preset),\n      };\n      await client.addConcator(\"openai\", contactor);\n      this.addReactiveListener();\n    },\n    showFriendContextMenu(event, friend) {\n      this.selectedFriend = friend;\n      this.menuX = event.clientX;\n      this.menuY = event.clientY;\n      this.showMenu = true;\n\n      const closeMenu = () => {\n        this.showMenu = false;\n        document.removeEventListener(\"click\", closeMenu);\n      };\n      document.addEventListener(\"click\", closeMenu);\n    },\n\n    async handleFriendOption(option) {\n      switch (option) {\n        case \"enter\":\n          this.showChat(this.selectedFriend.id);\n          break;\n        case \"priority\":\n          this.selectedFriend.priority =\n            this.selectedFriend.priority === 0 ? 1 : 0;\n          client.setLocalStorage();\n          break;\n        case \"share\": {\n          const shareResult = await client.shareContactor(\n            this.selectedFriend.id,\n          );\n          if (shareResult) {\n            this.$message({\n              message: \"分享链接已复制\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"分享失败\",\n              type: \"error\",\n            });\n          }\n          break;\n        }\n        case \"delete\": {\n          let index;\n          index = this.contactorList.findIndex(\n            (c) => c.id === this.selectedFriend.id,\n          );\n          if (index !== -1) {\n            this.contactorList.splice(index, 1);\n            client.setLocalStorage();\n          }\n          break;\n        }\n      }\n      this.showMenu = false;\n    },\n\n    addReactiveListener() {\n      this.contactorList.map((contactor) => {\n        contactor.on(\"updateMessageSummary\", () => {\n          contactor.updateMessageSummary();\n        });\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <div id=\"friendlists\" ref=\"friendlists\" :class=\"onPhone ? 'mobile' : ''\">\n    <div id=\"friends\" class=\"upsidebar\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\"></i>\n        <input id=\"main-search\" type=\"text\" placeholder=\"搜索\" />\n      </div>\n      <div class=\"bu-add\">\n        <button\n          id=\"addcont\"\n          title=\"Add Bot\"\n          @click=\"showAddOptions = !showAddOptions\"\n        >\n          <i class=\"iconfont add\"></i>\n        </button>\n        <div\n          v-show=\"showAddOptions\"\n          id=\"add-options\"\n          :style=\"{ left: onPhone ? '-6rem' : '0px' }\"\n        >\n          <ul>\n            <li>\n              <button @click=\"genBlankBot\">新建空白Bot</button>\n            </li>\n            <li>\n              <button @click=\"genBotByPreset\">从预设新建Bot</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"people\">\n      <div\n        v-for=\"(item, index) of sortedList\"\n        :id=\"getId(item)\"\n        :key=\"index\"\n        class=\"lists\"\n        @click=\"showChat(item.id)\"\n        @contextmenu.prevent=\"showFriendContextMenu($event, item)\"\n      >\n        <div\n          class=\"avatar\"\n          :class=\"item.avatarPolicy == 1 ? 'custom' : 'model'\"\n        >\n          <img :src=\"item.avatar\" :alt=\"item.name\" />\n        </div>\n        <div class=\"info\">\n          <div class=\"name\">{{ item.name }}</div>\n          <div id=\"time\" class=\"msginfo\">{{ item.getLastTime() }}</div>\n          <div id=\"msgctt\" class=\"msginfo\">{{ item.lastMessageSummary }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"resizer\" @mousedown=\"startResize\"></div>\n    <AddContactor\n      v-if=\"showAddWindow\"\n      @close=\"showAddWindow = false\"\n      @add-bot=\"addPresetContactor\"\n    ></AddContactor>\n    <ContextMenu\n      v-if=\"showMenu\"\n      type=\"friend\"\n      :message=\"selectedFriend\"\n      :style=\"{\n        position: 'fixed',\n        left: menuX + 'px',\n        top: menuY + 'px',\n      }\"\n      @message-option=\"handleFriendOption\"\n      @close=\"showMenu = false\"\n    />\n  </div>\n</template>\n\n<style scoped>\n#add-options {\n  position: absolute;\n  top: 2.5rem;\n  background-color: white;\n  width: 8rem;\n  height: 3rem;\n  border: 0.0625rem solid rgba(161, 154, 154, 0.626);\n  border-radius: 0.3125rem;\n  z-index: 2;\n}\n#add-options li {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n#add-options ul {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.1);\n}\n#add-options button {\n  background-color: transparent;\n}\n#friendlists {\n  height: 100%;\n  display: flex;\n  min-width: 14rem;\n  max-width: 14rem;\n  flex-direction: column;\n  position: relative;\n}\n\n.resizer {\n  width: 5px;\n  cursor: ew-resize;\n  background-color: transparent; /* 可视化的样式，你可以根据需求进行调整 */\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 100%;\n}\n#friendlists.mobile {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: none;\n}\n\n.upsidebar {\n  justify-content: space-between;\n  display: flex;\n  flex-direction: row;\n  background-color: rgb(255, 255, 255);\n  flex: 0 0 4rem;\n  align-items: flex-end;\n}\n\n#main-search {\n  width: calc(100% - 1.125rem);\n  margin-top: 0.1875rem;\n  padding-left: 0.3125rem;\n  height: 1.125rem;\n  background-color: transparent;\n  border: 0rem;\n}\n\n#main-search:focus {\n  outline: none;\n  border: 0rem;\n}\n\nbutton#searchButton {\n  width: 1rem;\n  border: 0rem;\n  border-radius: 0.3125rem;\n  margin-left: 0.5rem;\n  text-wrap: nowrap;\n}\n\n.search {\n  flex-grow: 1;\n  flex-basis: 1rem;\n  border-radius: 0.3125rem;\n  background-color: rgb(245 245, 245);\n  height: 2rem;\n  display: flex;\n  padding: 0rem 0.5rem;\n  align-items: center;\n  margin: 0 0 0.5rem 0.5rem;\n}\n\n.bu-add {\n  flex-basis: 2rem;\n  font-size: 1rem;\n  margin: 0.5rem;\n  height: 2rem;\n  position: relative;\n}\n\n.listicon {\n  padding-top: 0.0625rem;\n  width: 1rem;\n  height: 1rem;\n}\n\nbutton#addcont {\n  border-radius: 0.3125rem;\n  width: 100%;\n  height: 100%;\n  border: none;\n}\n\n.lists {\n  align-items: center;\n  min-width: 10rem;\n  display: flex;\n  padding: 0.25rem 0.5rem;\n  height: 3.75rem;\n  max-height: 3.75rem;\n  min-height: 3.75rem;\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important {\n  background-color: rgb(240, 240, 240);\n}\n\n.lists:hover {\n  background-color: rgb(240, 240, 240);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important:hover {\n  background-color: rgb(231, 231, 231);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#active {\n  background-color: rgb(0, 153, 255);\n}\n\n.lists > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: white;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n}\n\n.avatar.model > img {\n  scale: 0.9;\n}\n\n.info {\n  height: 100%;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  flex: 0 0 calc(100% - 2.65rem);\n  max-width: calc(100% - 2.65rem);\n  flex-wrap: wrap;\n}\n\n.lists#active * {\n  color: #f0f8ff;\n}\n\n.lists .name {\n  flex-basis: 4rem;\n  flex-grow: 1;\n  margin-top: 0.75rem;\n  font-size: 0.875rem;\n  margin-left: 0.5rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.info #time {\n  font-size: 0.625rem;\n  flex-grow: 1;\n  text-align: right;\n}\n\n.info #msgctt {\n  flex-basis: 100%;\n  padding-right: 1rem;\n  font-size: 0.625rem;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.people {\n  overflow-y: auto;\n}\n</style>\n","<template>\n  <div class=\"presets-list\">\n    <div\n      v-for=\"(message, index) of presetMessages\"\n      :key=\"index\"\n      class=\"preset-message\"\n    >\n      <div class=\"preset-message-block\">\n        <div\n          class=\"message-avatar\"\n          @mouseover=\"hoveredIndex = index\"\n          @mouseleave=\"hoveredIndex = null\"\n        >\n          <div v-if=\"hoveredIndex != index\" class=\"avatar-emoji\">\n            {{ getMessageAvatar(message.role) }}\n          </div>\n          <div\n            v-else\n            title=\"删除消息\"\n            class=\"avatar-emoji hovered\"\n            @click=\"delPresetMessage\"\n          >\n            🗑️\n          </div>\n        </div>\n        <div\n          :ref=\"`message-${index}`\"\n          class=\"message-content\"\n          contenteditable=\"true\"\n          @blur=\"handleMessageUpdate(index)\"\n        >\n          {{ presetMessages[index].content }}\n        </div>\n      </div>\n    </div>\n    <div class=\"messages-buttons\">\n      <el-button title=\"添加系统消息\" plain @click=\"addPresetMessage('system')\"\n        >➕ ⚙️</el-button\n      >\n      <el-button\n        title=\"添加助手消息\"\n        plain\n        @click=\"addPresetMessage('assistant')\"\n        >➕ 🤖</el-button\n      >\n      <el-button title=\"添加用户消息\" plain @click=\"addPresetMessage('user')\"\n        >➕ 👤</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    presetsHistory: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  emits: [\"updatePresets\"],\n  data() {\n    const presetMessages = [...this.presetsHistory];\n    return {\n      presetMessages,\n      hoveredIndex: undefined,\n    };\n  },\n  watch: {\n    presetsHistory(newVal) {\n      this.presetMessages = [...newVal];\n    },\n  },\n  methods: {\n    delPresetMessage() {\n      this.presetMessages.splice(this.hoveredIndex, 1);\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    addPresetMessage(role) {\n      if (role == \"system\" && this.presetMessages.length > 0) {\n        this.$message.warning(\"系统消息必须是第一条消息\");\n        return;\n      }\n      this.presetMessages.push({\n        role,\n        content: \"\",\n      });\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    getMessageAvatar(role) {\n      return role == \"assistant\" ? \"🤖\" : role == \"system\" ? \"⚙️\" : \"👤\";\n    },\n    handleMessageUpdate(index) {\n      this.presetMessages[index].content =\n        this.$refs[`message-${index}`][0].innerText;\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n  },\n};\n</script>\n<style scoped>\n.presets-list {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.messages-buttons {\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin: 0.5rem;\n}\n\n.preset-message {\n  width: 100%;\n}\n\n.preset-message-block {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0.5rem;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.preset-message-block .message-avatar {\n  flex-basis: 2rem;\n  font-size: 2rem;\n  border: 1px solid #ccc;\n  border-radius: 10%;\n}\n\n.message-avatar .hovered {\n  cursor: pointer;\n  box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.493); /* 内阴影 */\n}\n\n.preset-message-block .message-content {\n  margin-left: 0.5rem;\n  font-size: 0.8rem;\n  border: 1px solid #5a9cf8;\n  border-radius: 0.5rem;\n  flex-grow: 1;\n  max-height: 10rem;\n  overflow-y: auto;\n  padding: 0.5rem;\n  min-height: 2rem;\n}\n\n.message-content input {\n  width: 100%;\n  border: none;\n  outline: none;\n}\n</style>\n"],"names":["EventEmitter","constructor","this","events","on","eventName","listener","refresh","off","push","emit","data","forEach","numberString","length","result","characters","i","charAt","Math","floor","random","randomString","RetryManager","options","maxRetries","baseDelay","maxDelay","retryCount","timer","getNextDelay","min","pow","reset","clearTimeout","canRetry","retry","retryFn","Error","delay","Promise","resolve","setTimeout","Socket","id","code","available","url","getURL","socket","requests","heartBeat","retryManager","connectionState","hasSuccessfulWebSocket","URL","window","location","href","host","initEventListeners","handleConnect","handleDisconnect","error","handleConnectError","message","messageHandler","io","engine","transport","name","startHeartbeat","stopHeartbeat","attemptReconnect","switchToPolling","disconnect","path","transports","auth","token","connect","reconnectionAttempts","setInterval","async","connected","res","fetch","timestamp","Date","now","updateDelay","serverRevTime","revTime","currentTime","delayTo","delayBack","clearInterval","close","e","JSON","parse","protocol","request_id","type","sendMessage","stringify","reject","pathArray","split","filter","Boolean","request","timeOut","_","response","splice","indexOf","race","then","catch","streamCompletions","chunk","done","Adapter","client","Onebot","convertMessage","element","index","base64Data","file","replace","messages","node","rplMessage","midMessage","role","time","getTime","content","message_id","status","send","Openai","config","settings","getMessagesSummary","messageChain","query","model","LLMDefaultConfig","messageId","emitEvent","detail","handleUpdateChunk","updateHandlers","reasoningContent","reasoning_content","toolCall","tool_call","handler","handleCompletionChunk","complete","failed","filterValidSettings","validSettingKeys","extraSettingKeys","Object","fromEntries","entries","key","includes","enable_tool_call","tools","updateSettings","AVATAR_BASE_PATH","AVATAR_MAP","OpenAI","Cohere","Anthropic","Google","DeepSeek","avatarPolicy","namePolicy","Contactor","EventEmmiter","platform","title","avatar","priority","firstMessageIndex","active","lastUpdate","createTime","lastMessageSummary","getLastMessageSummary","kernel","enableOpenaiListener","toJSON","rawMessage","getMessageById","existingReasonIndex","findIndex","msgElm","text","startTime","endTime","lastMsgElm","isFirstElement","concat","previousCall","find","action","params","updateLastUpdate","_getFilePrompt","fileElms","join","_getValidOpenaiMessage","start","end","max_messages_num","mergedMessages","slice","msg","map","fileList","subArray","elm","formatedMsg","_content_type","tool_calls","function","arguments","tool_call_id","textElm","finalMessages","imageElm","fileElm","filePrompt","image_url","history","updateMessageSummary","webSend","revMessage","retryMessage","webMessage","delMessage","acting","makeSystemMessage","container","getLastTime","last","lastTime","timeDiff","toinit","getHours","toString","padStart","getMinutes","getDay","getFullYear","getMonth","getDate","getShownTime","weekdays","weekday","hours","minutes","getMessageText","updateFirstMessage","loadAvatar","getAvatarByModel","loadName","modelOwner","getModelOwner","keys","localforage","TOOL_CALL_MODEDS","GEMINI_SAFETY_BLOCK_SETTINGS","GEMINI_SAFETY_SETTINGS_TYPE","HARASSMENT","HATE_SPEECH","SEXUALLY_EXPLICIT","DANGEROUS_CONTENT","CIVIC_INTEGRITY","CONFIG_KEY","localPresets","toolsConfig","llmTools","onebotConfig","llmModels","safetyConfig","baseConfig","initSafetyConfig","initLLMDefaultConfig","_loadStrogeConfig","loadllmTools","loadonebotConfig","_setLocalStorage","localStorage","setItem","_getLocalStorage","storedValue","getItem","_saveStrogeConfig","configToSave","assign","setBaseConfig","updateBaseConfig","patch","displayConfig","getBaseConfig","setLlmModels","models","getLlmModels","group","modelGroup","owner","setSafetyConfig","getSafetyConfig","provider","base","stream","chatParams","temperature","top_p","frequency_penalty","presence_penalty","toolCallSettings","mode","avaliable","presetSettings","opening","safetySettings","updateLLMDefaultConfig","getLLMDefaultConfig","json","values","onebotOptionsData","onebotOptionsJson","inited","isConnected","contactList","qq","bot_qq","onPhone","preInit","localBaseInfo","loadOriginBaseInfo","loadBaseInfo","localStroge","getLocalStorage","loadLocalStorage","genDefaultConctor","genFakeId","Infinity","addConcator","default_model","tool","bot","reactive","setLocalStorage","rmContactor","list","item","loadOriginalContactors","shareId","contactor","getContactor","shareContactor","uploadResult","setOriginalContactor","previewImage","shareUrl","originalUrl","document","origin","clipboard","navigator","writeText","body","method","headers","clear","resetCache","messageListenerAdded","serviceWorker","addEventListener","event","ready","registration","postMessage","getRegistrations","registrations","unregisterPromises","reg","unregister","unregistered","all","results","every","everLogin","setEverLogin","init","login","getContactors","onebotId","subRandomNum","parseInt","randomNum","info","addMsgListener","onebotContactors","onebotContactor","logout","admin_qq","uploadFile","fileOrImage","isImage","onProgress","startsWith","uploadImage","chunkSize","md5Hash","uploadChunk","totalChunks","formData","FormData","append","xhr","XMLHttpRequest","open","upload","onprogress","lengthComputable","chunkProgress","loaded","total","overallProgress","round","onload","statusText","onerror","uploadFileChunks","ceil","size","currentChunk","md5","filename","ok","finalizeUpload","worker","UploadWorker","onmessage","hash","terminate","_convertBlobToBase64","blob","reader","FileReader","onloadend","readAsDataURL","PageStatus","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_5","_hoisted_6","processedImage","activePage","computed","isChatActive","isProfileActive","watch","$route","newRoute","getPageStatusFromRoute","immediate","mounted","adminId","methods","imageUrl","canvas","createElement","ctx","getContext","img","Image","src","width","height","drawImage","centerX","centerY","radius","beginPath","arc","PI","clip","clearRect","toBlob","createObjectURL","toChat","$router","toProfile","toConfig","adminAvatar","processImage","route","_openBlock","_createElementBlock","_createElementVNode","$data","alt","_hoisted_4","_normalizeClass","$options","onClick","args","target","props","fullScreen","default","emits","preview","created","URLSearchParams","search","get","waiting","$message","configFullScreen","$emit","$props","$event","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","components","MdPreview","Array","showBox","innerWidth","_Fragment","_cache","_renderList","_toDisplayString","_createBlock","_component_MdPreview","_component_el_image","style","margin","fit","_createCommentVNode","_hoisted_13","activeContactor","required","userInput","selectedOption","cursorPosition","showemoji","openaiModels","onebotPresets","uploaded","files","images","isPasting","extraOptions","loadSelected","initExtraOptions","textareaRef","$refs","textarea","adjustTextareaHeight","handleDragOver","preventDefault","backgroundColor","handleDragLeave","handleDrop","dataTransfer","handleDroppedFile","handlePaste","items","clipboardData","getAsFile","handleUploadImage","originalEvent","getData","execCommand","innerText","unmounted","removeEventListener","ctrlEmojiPanel","focus","File","handleFileUpload","fileInput","accept","format","handleChange","click","uploadDocumentFile","success","maxSizeByte","maxSizeMB","fileType","toLowerCase","insertImageToTextarea","mimeType","quality","imageName","imageElement","maxWidth","maxHeight","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","fragment","createContextualFragment","outerHTML","insertNode","newRange","newSelection","value","label","children","textwraper","getOpenaiModelArray","wrapText","rawText","preset","getOnebotPreset","reduce","acc","child","scrollHeight","getWraperName","getemoji","inputer","sel","unicode","startPos","endPos","textBeforeCursor","substring","textAfterCursor","innerHTML","setStart","firstChild","setEnd","updateCursorPosition","rangeCount","getRangeAt","startOffset","endOffset","presend","querySelectorAll","ImageSrcs","from","getSafeText","wrappedMessage","imgUrl","repliedMessageId","replyData","cleanScreen","activeBotTools","isValidInput","input","trim","handleKeyDown","ctrlKey","handleInput","ref","onEmojiClick","_withModifiers","_createVNode","_component_el_tree_select","modelValue","onChange","_ctx","contenteditable","placeholder","onKeydown","onInput","disabled","fileUrl","String","file_name","file_type","formated_file_size","iconClass","bits","formatFileSize","unitIndex","toFixed","toUpperCase","_hoisted_14","showExtraInfo","toolCallSuccess","toolCallFail","call_status","viewBox","xmlns","points","t","version","d","Number","show","getReasonInfo","updateMaxHeight","updated","toggleShow","reasonContent","_normalizeStyle","seletedText","seletedImage","copySeletedImage","copyImageToClipboard","saveSeletedImage","downloadImage","copyText","copyTextToClipboard","copySeletedText","replyMessage","deleteMessage","enterChat","togglePriority","shareBot","deleteBot","position","left","appendChild","select","setSelectionRange","err","removeChild","imgSrc","pngBlob","ClipboardItem","write","revokeObjectURL","link","download","_hoisted_15","_hoisted_16","AddContactor","presetsList","recommendPresets","recentPresets","systemPresets","searchPresets","systemShownNum","recommendShownNum","keyWord","activeTypeIndex","buttonTranslate","avaliablePresetTypes","moreSystemPresets","moreRecommendPresets","observer","showPresetsLoader","shownPrestsList","getAddHistory","loadSpecificType","callback","entry","isIntersecting","loadMoreData","IntersectionObserver","presetsLoader","loader","observe","handleScroll","beforeUnmount","addBot","strogeAddHistory","existingItem","unshift","pop","changeShownType","getPresetList","loadSystemPresets","loadRecommendedPresets","loadSerachPresets","load","searchTimer","rect","getBoundingClientRect","top","bottom","innerHeight","documentElement","clientHeight","right","clientWidth","_component_el_button","_withCtx","_createTextVNode","_withDirectives","_hoisted_17","_hoisted_18","_component_el_empty","ContextMenu","contactorList","showAddOptions","showAddWindow","showMenu","menuX","menuY","selectedFriend","sortedList","sort","a","b","addReactiveListener","beforeCreate","genBotByPreset","showChat","getId","genBlankBot","blankConfig","startResize","isResizing","startX","clientX","startWidth","friendlists","offsetWidth","resize","stopResize","newWidth","remSize","fontSize","parseFloat","minWidth","randomNumStr","mergeOptions","defaultOptions","addPresetContactor","showFriendContextMenu","friend","clientY","closeMenu","handleFriendOption","option","c","onContextmenu","onMousedown","_component_AddContactor","onClose","onAddBot","_component_ContextMenu","onMessageOption","presetsHistory","presetMessages","hoveredIndex","newVal","delPresetMessage","addPresetMessage","warning","getMessageAvatar","handleMessageUpdate","onMouseover","onMouseleave","ref_for","onBlur","plain"],"mappings":"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"}