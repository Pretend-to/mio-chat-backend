{"version":3,"file":"components-BJQBgqqt.js","sources":["../../../src/lib/event.js","../../../src/utils/generate.js","../../../src/lib/retry-manager.js","../../../src/lib/websocket.js","../../../src/lib/adapter/adapter.js","../../../src/lib/adapter/onebot.js","../../../src/lib/adapter/openai.js","../../../src/lib/contactor.js","../../../src/lib/client.js","../../../src/lib/config.js","../../../src/lib/runtime.js","../../../src/components/SideBar.vue","../../../src/components/DisplayButtons.vue","../../../src/components/ForwardMsg.vue","../../../src/components/InputEditor.vue","../../../src/components/FileBlock.vue","../../../src/components/ToolCallBar.vue","../../../src/components/ReasonBlock.vue","../../../src/components/ContextMenu.vue","../../../src/components/AddContactor.vue","../../../src/components/FriendList.vue","../../../src/components/PresetsList.vue"],"sourcesContent":["export default class EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n  on(eventName, listener, refresh = true) {\n    // 如果 refresh 为真，删除之前的回调函数\n    if (refresh) {\n      this.off(eventName);\n    }\n    // 如果事件名不存在，则初始化为一个空数组\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n    // 添加新的回调函数到数组中\n    this.events[eventName].push(listener);\n  }\n  emit(eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach((listener) => {\n        listener(data);\n      });\n    }\n  }\n  off(eventName) {\n    if (this.events[eventName]) {\n      delete this.events[eventName];\n    }\n  }\n}\n","export function uuidString() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function numberString(length) {\n  let result = \"\";\n  const characters = \"0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function randomString(length) {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","/**\n * 重试管理器类\n * 实现指数退避算法的重连机制\n */\nexport default class RetryManager {\n  constructor(options = {}) {\n    this.maxRetries = options.maxRetries || 10;\n    this.baseDelay = options.baseDelay || 1000;\n    this.maxDelay = options.maxDelay || 30000;\n    this.retryCount = 0;\n    this.timer = null;\n  }\n\n  /**\n   * 计算下一次重试的延迟时间\n   * @returns {number} 延迟时间（毫秒）\n   */\n  getNextDelay() {\n    const delay = Math.min(\n      this.maxDelay,\n      this.baseDelay * Math.pow(2, this.retryCount),\n    );\n    return delay + Math.random() * 1000; // 添加随机抖动\n  }\n\n  /**\n   * 重置重试计数器\n   */\n  reset() {\n    this.retryCount = 0;\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n\n  /**\n   * 检查是否可以继续重试\n   * @returns {boolean} 是否可以继续重试\n   */\n  canRetry() {\n    return this.retryCount < this.maxRetries;\n  }\n\n  /**\n   * 执行重试操作\n   * @param {Function} retryFn 重试函数\n   * @returns {Promise} 重试操作的Promise\n   */\n  async retry(retryFn) {\n    if (!this.canRetry()) {\n      throw new Error(\"已达到最大重试次数\");\n    }\n\n    const delay = this.getNextDelay();\n    this.retryCount++;\n\n    await new Promise((resolve) => {\n      this.timer = setTimeout(resolve, delay);\n    });\n\n    return retryFn();\n  }\n}\n","import EventEmitter from \"./event.js\";\nimport { randomString } from \"../utils/generate.js\";\nimport RetryManager from \"./retry-manager.js\";\nimport io from \"socket.io-client\";\n\n/**\n * WebSocket Connection Class\n * 处理WebSocket连接、消息收发、心跳检测和断线重连\n */\nexport default class Socket extends EventEmitter {\n  /**\n   * 创建Socket实例\n   * @param {String} id - 机器人QQ号\n   * @param {String} code - 登录令牌\n   */\n  constructor(id, code) {\n    super();\n    this.available = null;\n    this.url = this.getURL();\n    this.socket = null;\n    this.code = code;\n    this.id = id;\n    this.requests = [];\n    this.heartBeat = null;\n    this.delay = null;\n    this.retryManager = new RetryManager({\n      maxRetries: 10,\n      baseDelay: 1000,\n      maxDelay: 30000,\n    });\n    this.connectionState = \"disconnected\";\n    this.hasSuccessfulWebSocket = false;\n    this.pendingRequests = new Set(); // 用于跟踪正在处理的 request_id\n    this.reconnectDelay = 5000; // 重连延迟，单位毫秒\n    this.maxHeartbeatFails = 3; // 最大心跳失败次数\n    this.heartbeatFails = 0; // 当前心跳失败次数\n  }\n  /**\n   * 获取WebSocket URL\n   * @returns {String} WebSocket URL\n   */\n  getURL() {\n    const url = new URL(window.location.href);\n    return url.host;\n  }\n\n  /**\n   * 初始化WebSocket事件监听器\n   */\n  initEventListeners() {\n    this.socket.on(\"connect\", () => this.handleConnect());\n    this.socket.on(\"disconnect\", () => this.handleDisconnect());\n    this.socket.on(\"connect_error\", (error) => this.handleConnectError(error));\n    this.socket.on(\"message\", (message) => this.messageHandler(message));\n  }\n\n  /**\n   * 处理连接成功事件\n   */\n  handleConnect() {\n    this.available = true;\n    this.connectionState = \"connected\";\n    if (this.socket?.io?.engine?.transport?.name === \"websocket\") {\n      this.hasSuccessfulWebSocket = true;\n    }\n    this.retryManager.reset();\n    this.heartbeatFails = 0;\n    console.log(\"SocketIO连接成功\");\n    this.startHeartbeat();\n  }\n\n  /**\n   * 处理断开连接事件\n   */\n  handleDisconnect() {\n    this.available = false;\n    this.connectionState = \"disconnected\";\n    this.stopHeartbeat();\n    console.error(\"SocketIO连接断开\");\n    this.attemptReconnect();\n  }\n\n  /**\n   * 处理连接错误事件\n   */\n  handleConnectError(error) {\n    console.error(\"SocketIO连接出错\", error);\n    if (this.socket?.io?.engine?.transport?.name === \"websocket\") {\n      if (!this.hasSuccessfulWebSocket) {\n        this.switchToPolling();\n      }\n    } else {\n      this.connectionState = \"failed\";\n      console.log(\"已经在轮询模式，放弃重连\");\n      this.disconnect();\n    }\n  }\n\n  /**\n   * 切换到轮询模式\n   */\n  switchToPolling() {\n    console.log(\"WebSocket 连接失败，切换到轮询模式...\");\n    this.disconnect();\n    this.socket = io(this.url, {\n      path: \"/socket.io\",\n      transports: [\"polling\"],\n      auth: { id: this.id, token: this.code },\n    });\n    this.initEventListeners();\n  }\n\n  /**\n   * 尝试重新连接\n   */\n  async attemptReconnect() {\n    if (this.connectionState === \"reconnecting\") return;\n    this.connectionState = \"reconnecting\";\n    this.stopHeartbeat(); // 确保停止心跳\n    setTimeout(async () => {\n      // 延迟重连\n      try {\n        await this.retryManager.retry(() => this.connect());\n      } catch (error) {\n        console.error(\"重连失败，已达到最大重试次数\", error);\n        this.connectionState = \"failed\";\n        this.emit(\"reconnect_failed\");\n      } finally {\n        this.connectionState = \"disconnected\"; // 重连尝试结束后更新状态\n      }\n    }, this.reconnectDelay);\n  }\n\n  /**\n   * 连接到SocketIO服务器\n   */\n  async connect() {\n    this.socket = io(this.url, {\n      path: \"/socket.io\",\n      transports: [\"websocket\", \"polling\"],\n      auth: { id: this.id, token: this.code },\n      reconnectionAttempts: 0, // 禁用socket.io的自动重连，使用我们自己的重连机制\n      pingTimeout: 5000, // 如果服务器在5秒内没有响应ping，则认为连接已断开\n      pingInterval: 10000, // 每10秒发送一次ping\n    });\n    console.log(\"SocketIO连接中...\");\n    this.initEventListeners();\n  }\n\n  /**\n   * 启动心跳检测\n   */\n  startHeartbeat() {\n    if (this.heartBeat) {\n      clearInterval(this.heartBeat); // 清除之前的心跳，避免重复\n    }\n\n    this.heartBeat = setInterval(async () => {\n      if (this.socket?.connected) {\n        try {\n          const res = await this.fetch(\"/api/system/heartbeat\", {\n            timestamp: Date.now(),\n          });\n          console.log(\"心跳检测成功\", res);\n          this.updateDelay(res);\n          this.heartbeatFails = 0; // 重置失败计数器\n        } catch (error) {\n          this.heartbeatFails++;\n          // console.error(\n          //   `心跳检测失败 ${this.heartbeatFails}/${this.maxHeartbeatFails}`,\n          //   error,\n          // );\n\n          // if (\n          //   this.heartbeatFails >= this.maxHeartbeatFails &&\n          //   !this.socket?.connected\n          // ) {\n          //   console.error(\"多次心跳检测失败，触发重连\");\n          //   this.stopHeartbeat();\n          //   this.handleDisconnect(); // 模拟断开连接\n          // }\n          // if (this.connectionState === \"failed\") {\n          //   console.error(\"心跳检测失败,连接已失败\", error);\n          // }\n        }\n      }\n    }, 3000);\n  }\n\n  /**\n   * 更新延迟信息\n   */\n  updateDelay(res) {\n    const serverRevTime = res.revTime;\n    const currentTime = Date.now();\n    const delayTo = res.delay;\n    const delayBack = currentTime - serverRevTime;\n    this.delay = delayTo + delayBack;\n  }\n\n  /**\n   * 停止心跳检测\n   */\n  stopHeartbeat() {\n    if (this.heartBeat) {\n      clearInterval(this.heartBeat);\n      this.heartBeat = null;\n    }\n  }\n\n  /**\n   * 断开WebSocket连接\n   */\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n      this.available = false;\n      this.stopHeartbeat();\n      console.log(\"WebSocket连接已断开\");\n    }\n  }\n\n  /**\n   * 处理接收到的消息\n   * @param {String} message - 接收到的消息\n   */\n  messageHandler(message) {\n    try {\n      const e = JSON.parse(message);\n      if (e.protocol === \"llm\") {\n        this.emit(e.request_id, e);\n      }\n      if (e.protocol === \"onebot\") {\n        this.emit(\"onebot_message\", e);\n      } else if (e.protocol === \"system\") {\n        if (e.type === \"login\") this.emit(\"connect\", e.data);\n        this.emit(\"system_message\", e);\n      }\n      this.pendingRequests.delete(e.request_id); // 移除 request_id\n    } catch (error) {\n      console.error(\"JSON解析失败:\", error);\n    }\n  }\n\n  /**\n   * 发送消息\n   * @param {Object} message - 要发送的消息对象\n   */\n  sendMessage(message) {\n    if (!this.available) {\n      console.log(\"SocketIO 连接不可用\");\n      return;\n    }\n\n    if (this.pendingRequests.has(message.request_id)) {\n      console.warn(`重复的 request_id: ${message.request_id}, 请求被阻止`);\n      return;\n    }\n\n    this.pendingRequests.add(message.request_id);\n    this.socket.emit(\"message\", JSON.stringify(message));\n\n    if (message.type !== \"heartbeat\") {\n      console.log(\"WebSocket发送请求\", message);\n    }\n  }\n\n  /**\n   * 发送请求并等待响应\n   * @param {String} url - API端点\n   * @param {Object} data - 请求数据\n   * @returns {Promise<any>} 响应数据\n   */\n  fetch(url, data) {\n    return new Promise((resolve, reject) => {\n      const pathArray = url.split(\"/\").filter(Boolean);\n      const request = {\n        request_id: randomString(16),\n        protocol: pathArray[1],\n        type: pathArray[2],\n        id: pathArray[3],\n        data: data,\n      };\n\n      const timeOut = new Promise((_, reject) => {\n        setTimeout(() => {\n          this.pendingRequests.delete(request.request_id); // 超时时移除\n          reject(\"timeout\");\n        }, 60000);\n      });\n\n      const response = new Promise((resolve) => {\n        this.on(request.request_id, (res) => {\n          this.pendingRequests.delete(request.request_id); // 收到响应时移除\n          resolve(res.data);\n        });\n      });\n\n      Promise.race([timeOut, response]).then(resolve).catch(reject);\n      this.sendMessage(request); // 使用 sendMessage 发送请求\n      if (request.type !== \"heartbeat\") {\n        console.log(\"WebSocket发送请求\", url, request);\n      }\n    });\n  }\n\n  /**\n   * 流式获取补全数据\n   * @param {Object} data - 补全请求数据\n   * @returns {AsyncGenerator<any>} - 补全数据生成器\n   */\n  async *streamCompletions(data) {\n    const request = {\n      request_id: randomString(16),\n      protocol: \"llm\",\n      type: \"completions\",\n      data: data,\n    };\n    this.sendMessage(request);\n    console.log(\"WebSocket发送请求\", request);\n    try {\n      while (true) {\n        const chunk = await new Promise((resolve, reject) => {\n          this.on(request.request_id, (data) => {\n            if (data.message === \"update\") {\n              resolve(data);\n            } else if (\n              data.message === \"complete\" ||\n              data.message === \"failed\"\n            ) {\n              this.off(request.request_id);\n              this.pendingRequests.delete(request.request_id);\n              reject({ done: true, data: data });\n            }\n          });\n        });\n        yield chunk;\n      }\n    } catch (e) {\n      if (e.done) {\n        console.log(\"WebSocket流式获取补全数据结束\", e.data.message);\n        yield e.data;\n        return;\n      }\n      throw e;\n    } finally {\n      this.pendingRequests.delete(request.request_id); // 确保退出时删除\n    }\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport EventEmitter from \"../event.js\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default class Adapter extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  async fetch(url, data) {\n    return await client.socket.fetch(url, data);\n  }\n}\n","import Adapter from \"./adapter.js\";\n\nexport default class Onebot extends Adapter {\n  constructor() {\n    super();\n  }\n\n  convertMessage(data) {\n    console.log(data);\n    data.message.forEach((element, index) => {\n      if (element.type === \"image\") {\n        const base64Data = element.data.file.replace(\n          /^base64:\\/\\//,\n          \"data:image/jpeg;base64,\",\n        );\n        data.message[index].data.file = base64Data;\n        console.log(data.message[index]);\n      } else if (element.type === \"nodes\") {\n        element.data.messages.forEach((node) => {\n          if (node.type === \"image\") {\n            const base64Data = node.data.file.replace(\n              /^base64:\\/\\//,\n              \"data:image/jpeg;base64,\",\n            );\n            node.data.file = base64Data;\n          }\n        });\n      }\n    });\n\n    const rplMessage = data.message.filter(\n      (element) => element.type === \"reply\",\n    );\n    const midMessage = data.message.filter(\n      (element) => element.type !== \"reply\",\n    );\n    if (rplMessage.length > 0) {\n      midMessage.push(rplMessage[0]);\n    }\n\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: midMessage,\n      id: data.message_id,\n      status: \"completed\",\n    };\n    return webMessage;\n  }\n\n  /**\n   * Send message to server\n   * @param {id} string\n   * @param {WebMessage} message\n   * @returns {Promise<number>} message_id\n   */\n  async send(id, message) {\n    const response = await this.fetch(\n      \"/api/onebot/message\" + `/${id}`,\n      message,\n    );\n    return response.message_id;\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Adapter from \"./adapter.js\";\nimport { client, config } from \"../runtime.js\";\nimport { numberString } from \"../../utils/generate.js\";\n\nexport default class Openai extends Adapter {\n  constructor(config) {\n    super();\n    this.settings = config.settings || {};\n  }\n\n  convertMessage(message) {\n    const webMessage = {\n      role: \"other\",\n      time: new Date().getTime(),\n      content: [{ type: \"blank\", data: {} }],\n      status: \"pending\",\n      id: numberString(16),\n    };\n    const mergedMessage = { ...webMessage, ...message };\n    return mergedMessage;\n  }\n\n  async getMessagesSummary(messageChain) {\n    const query = `请你根据以下对话的内容\\n${JSON.stringify(messageChain)}\\n，总结出一个简短的对话主题,不得超出10个字。`;\n    const settings = config.getLLMDefaultConfig();\n    settings.base.stream = false;\n    const messages = {\n      settings,\n      messages: [{ role: \"user\", content: query }],\n    };\n\n    const response = await this.fetch(`/api/llm/completions`, messages);\n    // debugger;\n    const { content } = response;\n    return content;\n  }\n\n  async send(messages, messageId, settings) {\n    console.log(\"send message to openai\");\n\n    const emitEvent = (eventName, detail) => {\n      this.emit(eventName, { ...detail, messageId });\n    };\n\n    const handleUpdateChunk = (chunk) => {\n      const updateHandlers = {\n        reasoningContent: (content) =>\n          emitEvent(\"updateReasoning\", { reasoning_content: content }),\n        content: (content) => emitEvent(\"updateMessage\", { chunk: content }),\n        toolCall: (tool_call) => emitEvent(\"updateToolCall\", { tool_call }),\n      };\n\n      const data = chunk.data;\n      const handler = updateHandlers[data.type];\n      if (handler) {\n        handler(data.content);\n      }\n    };\n\n    const handleCompletionChunk = (chunk) => {\n      const completionHandlers = {\n        complete: () => emitEvent(\"completeMessage\", {}),\n        failed: () => emitEvent(\"failedMessage\", { error: chunk.data }),\n      };\n\n      const handler = completionHandlers[chunk.message];\n      if (handler) {\n        handler();\n      }\n    };\n\n    try {\n      // Apply settings defaults\n      const data = {\n        settings, // Default to empty object\n        messages,\n      };\n\n      console.log(\"Data sent to LLM:\", data);\n\n      for await (const chunk of client.socket.streamCompletions(data)) {\n        console.log(\"Received chunk from LLM:\", chunk);\n        if (chunk.message === \"update\") {\n          handleUpdateChunk(chunk);\n        } else if ([\"complete\", \"failed\"].includes(chunk.message)) {\n          handleCompletionChunk(chunk);\n          break;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error in send:\", error);\n      emitEvent(\"failedMessage\", { error: \"Stream processing error\" });\n    }\n  }\n\n  updateSettings(settings) {\n    this.settings = settings;\n  }\n}\n","import Onebot from \"./adapter/onebot.js\";\nimport Openai from \"./adapter/openai.js\";\nimport EventEmmiter from \"./event.js\";\nimport { numberString } from \"../utils/generate.js\";\nimport { config } from \"@/lib/runtime.js\";\n\nconst AVATAR_BASE_PATH =\n  \"https://registry.npmmirror.com/@lobehub/icons-static-svg/latest/files/icons\";\n\nconst AVATAR_MAP = {\n  OpenAI: \"openai.svg\",\n  Cohere: \"cohere-color.svg\",\n  Anthropic: \"claude-color.svg\",\n  Google: \"gemini-color.svg\",\n  \"X.AI\": \"grok.svg\",\n  DeepSeek: \"deepseek-color.svg\",\n  智谱清言: \"zhipu-color.svg\",\n  豆包: \"doubao-color.svg\",\n  \"月之暗面 (kimi)\": \"moonshot.svg\",\n  科大讯飞: \"spark-color.svg\",\n  通义千问: \"qwen-color.svg\",\n  腾讯混元: \"hunyuan-color.svg\",\n};\n\nconst avatarPolicy = [\"MODEL\", \"CUSTOM\"];\n\nconst namePolicy = [\"MODEL\", \"CUSTOM\", \"SUMMARY\"];\n\nexport default class Contactor extends EventEmmiter {\n  /**\n   * Contactor 构造函数\n   * @param {string} platform - 平台 (e.g., \"onebot\", \"openai\")\n   * @param {object} config - 配置对象\n   * @param {string} config.id - ID\n   * @param {string} config.name - 名称\n   * @param {string} config.avatar - 头像 URL\n   * @param {string} config.title - 标题\n   * @param {object} config.options - 选项\n   * @param {number} config.priority - 优先级 (0 最高)\n   * @param {number} config.namePolicy - 名称策略 (默认 0)\n   * @param {number} config.avatarPolicy - 头像策略 (默认 0)\n   * @param {number} config.firstMessageIndex - 首条消息索引 (默认 0)\n   * @param {array} config.messageChain - 消息链 (默认 [])\n   * @param {number} config.lastUpdate - 最后更新时间 (默认当前时间)\n   * @param {number} config.createTime - 创建时间 (默认当前时间)\n   */\n  constructor(platform, config) {\n    super();\n    this.platform = platform;\n    this.id = config.id;\n    this.options = config.options;\n    this.namePolicy = config.namePolicy || 0;\n    this.avatarPolicy = config.avatarPolicy || 0;\n    this.title = config.title;\n    this.name = config.name;\n    this.avatar = config.avatar;\n    this.priority = config.priority;\n    this.firstMessageIndex = config.firstMessageIndex || 0;\n    this.messageChain = config.messageChain || [];\n    this.active = false;\n    this.lastUpdate = config.lastUpdate || Date.now(); // 使用 Date.now()\n    this.createTime = config.createTime || Date.now(); // 使用 Date.now()\n    this.lastMessageSummary = this.getLastMessageSummary();\n    this.kernel =\n      platform === \"onebot\" ? new Onebot(config) : new Openai(config); // 简化条件判断\n\n    if (platform === \"openai\") {\n      this.enableOpenaiListener();\n    }\n  }\n\n  /**\n   * 将 Contactor 对象转换为 JSON 格式\n   * @returns {object} - 包含 Contactor 属性的 JSON 对象\n   */\n  toJSON() {\n    return {\n      platform: this.platform,\n      id: this.id,\n      options: this.options,\n      namePolicy: this.namePolicy,\n      avatarPolicy: this.avatarPolicy,\n      title: this.title,\n      name: this.name,\n      avatar: this.avatar,\n      priority: this.priority,\n      messageChain: this.messageChain,\n      active: this.active,\n      lastUpdate: this.lastUpdate,\n      createTime: this.createTime,\n      lastMessageSummary: this.lastMessageSummary,\n      firstMessageIndex: this.firstMessageIndex,\n    };\n  }\n\n  enableOpenaiListener() {\n    this.kernel.on(\"updateReasoning\", (e) => {\n      const { reasoning_content, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      // 查找现有的 reason 块\n      const existingReasonIndex = rawMessage.content.findIndex(\n        (msgElm) => msgElm.type === \"reason\",\n      );\n\n      const msgElm = {\n        type: \"reason\",\n        data: {\n          text: reasoning_content,\n          startTime: new Date().getTime(),\n          endTime: 0,\n        },\n      };\n\n      if (existingReasonIndex !== -1) {\n        // 如果已存在 reason 块，更新其内容\n        msgElm.data.text =\n          rawMessage.content[existingReasonIndex].data.text + reasoning_content;\n        msgElm.data.startTime =\n          rawMessage.content[existingReasonIndex].data.startTime;\n        rawMessage.content[existingReasonIndex] = msgElm;\n      } else if (rawMessage.content[0].type === \"blank\") {\n        // 如果是 blank 状态，直接更新第一个元素\n        rawMessage.content[0] = msgElm;\n      } else {\n        // 其他情况，追加到末尾\n        rawMessage.content.push(msgElm);\n      }\n\n      this.emit(\"updateMessage\");\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateMessage\", (e) => {\n      const { chunk, messageId } = e;\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      rawMessage.content.forEach((msgElm) => {\n        if (msgElm.type == \"reason\" && !msgElm.data.endTime)\n          msgElm.data.endTime = new Date().getTime();\n      });\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const isFirstElement = [\"blank\", \"text\"].includes(lastMsgElm.type);\n\n      const msgElm = {\n        type: \"text\",\n        data: {\n          text: (lastMsgElm.type == \"text\" ? lastMsgElm.data.text : \"\").concat(\n            chunk,\n          ),\n        },\n      };\n\n      if (isFirstElement)\n        rawMessage.content[rawMessage.content.length - 1] = msgElm;\n      else rawMessage.content.push(msgElm);\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"updateToolCall\", (e) => {\n      const { tool_call, messageId } = e;\n      console.log(tool_call);\n\n      const rawMessage = this.getMessageById(messageId);\n      if (!rawMessage) return;\n\n      const lastMsgElm = rawMessage.content[rawMessage.content.length - 1];\n      const msgElm = {\n        type: \"tool_call\",\n        data: tool_call,\n      };\n\n      if (lastMsgElm.type == \"blank\") {\n        // 这种情况一定是第一条空白消息，直接更新成 toolCall 消息\n        rawMessage.content[0] = msgElm;\n      } else {\n        const previousCall = rawMessage.content.find(\n          (msgElm) => msgElm.data.id == tool_call.id,\n        );\n        if (previousCall) {\n          // 这种情况就是更新之前的 toolCall 消息\n          previousCall.data = tool_call;\n          if (tool_call.action == \"pending\") {\n            previousCall.data.params += tool_call.params;\n          }\n        } else {\n          // 这种情况就是新增一条 toolCall 消息\n          rawMessage.content.push(msgElm);\n        }\n      }\n\n      this.emit(\"updateMessage\"); // 更新响应式数据\n      this.emit(\"updateMessageSummary\");\n    });\n\n    this.kernel.on(\"completeMessage\", (e) => {\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          messageId,\n        });\n      }\n    });\n\n    this.kernel.on(\"failedMessage\", (e) => {\n      console.error(e);\n      this.updateLastUpdate();\n      const messageId = e.messageId;\n      const rawMessage = this.getMessageById(messageId);\n      if (rawMessage) {\n        this.emit(\"updateMessageSummary\");\n\n        this.emit(\"completeMessage\", {\n          text: \"请求发生错误！\\n```json\\n\" + e.error + \"\\n```\\n\",\n          messageId,\n          error: true,\n        });\n      }\n    });\n  }\n\n  /**\n   * Send message to contactor\n   * @param {OnebotMessage} message\n   */\n  async send(message) {\n    await this.kernel.send(message);\n  }\n\n  _getFilePrompt(fileElms) {\n    const start = \"以下是用户上传的文件：\\n\";\n    return start + fileElms.join(\"\\n\");\n  }\n\n  _getValidOpenaiMessage(\n    start = this.firstMessageIndex,\n    end = this.messageChain.length,\n    length = this.options.max_messages_num,\n  ) {\n    const cuttedMessageList = this.messageChain\n      .slice(start, end)\n      .slice(-length);\n\n    const validMessageList = cuttedMessageList.filter(\n      (msg) => msg.role != \"mio_system\",\n    );\n\n    const mergedMessages = validMessageList.map((message) => {\n      const fileList = [];\n      const subArray = [];\n      message.content.forEach((elm) => {\n        const role =\n          elm.type == \"tool_call\"\n            ? \"tool\"\n            : message.role == \"user\"\n              ? \"user\"\n              : \"assistant\";\n        const formatedMsg = {\n          role: role,\n          content: \"none\",\n          _content_type: undefined,\n        };\n        if (role == \"tool\") {\n          formatedMsg.role = \"assistant\";\n          formatedMsg.content = null;\n          formatedMsg.tool_calls = [\n            {\n              id: elm.data.id,\n              function: {\n                name: elm.data.name,\n                arguments: elm.data.params,\n              },\n              type: \"function\",\n            },\n          ];\n          subArray.push({ ...formatedMsg });\n\n          delete formatedMsg.tool_calls;\n          formatedMsg.role = \"tool\";\n          formatedMsg.content = JSON.stringify(elm.data.result);\n          formatedMsg.tool_call_id = elm.data.id;\n          formatedMsg.name = elm.data.name;\n          subArray.push({ ...formatedMsg });\n\n          formatedMsg.role = role;\n        } else if (role == \"user\" || role == \"assistant\") {\n          if (elm.type == \"image\") {\n            formatedMsg.content = elm.data.file;\n            formatedMsg._content_type = \"image\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"text\") {\n            formatedMsg.content = elm.data.text;\n            formatedMsg._content_type = \"text\";\n            subArray.push(formatedMsg);\n          } else if (elm.type == \"file\") {\n            fileList.push(elm.data.file);\n          }\n        }\n      });\n      if (fileList.length > 0) {\n        const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n        textElm[0].content = textElm[0].content + this._getFilePrompt(fileList);\n      }\n      return subArray;\n    });\n    let finalMessages = [];\n\n    mergedMessages.forEach((subArray) => {\n      const textElm = subArray.filter((elm) => elm._content_type == \"text\");\n      const imageElm = subArray.filter((elm) => elm._content_type == \"image\");\n      const fileElm = subArray.filter((elm) => elm._content_type == \"file\");\n      const filePrompt = fileElm.length > 0 ? this._getFilePrompt(fileElm) : \"\";\n      let message = null;\n      if (\n        textElm.length > 0 &&\n        imageElm.length > 0 &&\n        imageElm[0].role == \"user\"\n      ) {\n        message = {\n          role: \"user\",\n          content: [\n            ...imageElm.map((elm) => {\n              return {\n                type: \"image_url\",\n                image_url: {\n                  url: elm.content,\n                },\n              };\n            }),\n            ...textElm.map((elm) => {\n              return {\n                type: \"text\",\n                text: elm.content + filePrompt,\n              };\n            }),\n          ],\n        };\n      }\n      if (message?.content.length == subArray.length) {\n        finalMessages.push(message);\n      } else {\n        subArray.forEach((elm) => {\n          delete elm._content_type;\n        });\n        finalMessages.push(...subArray);\n      }\n    });\n\n    const presetHistory = this.options.presetSettings.history;\n\n    if (presetHistory) {\n      finalMessages = presetHistory.concat(finalMessages);\n    }\n\n    return finalMessages;\n  }\n  updateMessageSummary() {\n    this.lastMessageSummary = this.getLastMessageSummary();\n  }\n\n  /**\n   * 从网页前端发来的消息\n   */\n  async webSend(message) {\n    this.updateLastUpdate();\n    this.messageChain.push(message);\n    this.updateMessageSummary();\n    if (this.platform == \"onebot\") {\n      const messageId = await this.kernel.send(this.id, message.content);\n      return messageId;\n    } else {\n      // 截取从this.firstMessageIndex到结尾的消息\n      const finalMessages = this._getValidOpenaiMessage();\n\n      const messageId = numberString(16);\n\n      this.revMessage({\n        id: messageId,\n      });\n\n      this.kernel.send(finalMessages, messageId, this.options);\n      return numberString(16);\n    }\n  }\n\n  async retryMessage(id) {\n    const message = this.getMessageById(id);\n    if (message) {\n      message.content = [\n        {\n          type: \"blank\",\n        },\n      ];\n      this.updateLastUpdate();\n      const index = this.messageChain.indexOf(message);\n      const finalMessages = this._getValidOpenaiMessage(0, index);\n      this.kernel.send(finalMessages, id, this.options);\n      return true;\n    }\n  }\n\n  /**\n   * 接收到消息\n   * @param {string} id - ID of the contactor\n   * @param {object} message - Message received from contactor\n   */\n  revMessage(message) {\n    this.updateLastUpdate();\n\n    const webMessage = this.kernel.convertMessage(message);\n\n    if (!this.active) this.messageChain.push(webMessage);\n    else this.emit(\"revMessage\", webMessage);\n\n    this.emit(\"updateMessageSummary\");\n    return webMessage;\n  }\n\n  /**\n   * 删除消息\n   * @param {string} message_id - ID of the message to be deleted\n   * @returns {boolean} - Whether the message is successfully deleted\n   */\n  delMessage(message_id) {\n    for (let i = 0; i < this.messageChain.length; i++) {\n      if (this.messageChain[i].id === message_id) {\n        if (this.active) this.emit(\"delMessage\", i);\n        else this.acting.messageChain.splice(i, 1);\n        this.makeSystemMessage(`${this.name}撤回了一条消息`);\n        return true; // 删除成功\n      }\n    }\n    return false; // 没有找到要删除的消息\n  }\n\n  makeSystemMessage(text) {\n    const container = {\n      role: \"mio_system\",\n      time: new Date().getTime(),\n      id: new Date().getTime(),\n      content: [\n        {\n          type: \"text\",\n          data: {\n            text: text,\n          },\n        },\n      ],\n    };\n    if (this.active) this.emit(\"revMessage\", container);\n    else this.messageChain.push(container);\n  }\n\n  getLastTime() {\n    const last = this.messageChain[this.messageChain.length - 1];\n    if (!last) {\n      return \"\";\n    }\n\n    const currentTime = new Date().getTime();\n    const lastTime = new Date(last.time);\n    const timeDiff = currentTime - lastTime.getTime();\n\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      this.toinit = false;\n      // 小于24小时，返回 xx:xx (小时:分钟)\n      const hours = lastTime.getHours().toString().padStart(2, \"0\");\n      const minutes = lastTime.getMinutes().toString().padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天\n      return \"昨天\";\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = lastTime.getDay();\n      return `星期${weekdays[weekday]}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）\n      const year = lastTime.getFullYear();\n      const month = (lastTime.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = lastTime.getDate().toString().padStart(2, \"0\");\n      return `${year}/${month}/${day}`;\n    }\n  }\n\n  getShownTime(timestamp) {\n    const currentTime = new Date().getTime();\n    // 如果传入时间和当前时间差在24h以内，则显示时间\n\n    const timeDiff = currentTime - timestamp;\n    if (timeDiff < 24 * 60 * 60 * 1000) {\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    } else if (timeDiff < 48 * 60 * 60 * 1000) {\n      // 小于48小时，显示昨天+时间\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `昨天${hours}:${minutes}`;\n    } else if (timeDiff < 7 * 24 * 60 * 60 * 1000) {\n      // 小于7天，返回星期x+时间\n      const weekdays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n      const weekday = new Date(timestamp).getDay();\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `星期${weekdays[weekday]}${hours}:${minutes}`;\n    } else {\n      // 7天以上，返回xxxx/xx/xx（年/月/日）+时间\n      const year = new Date(timestamp).getFullYear();\n      const month = (new Date(timestamp).getMonth() + 1)\n        .toString()\n        .padStart(2, \"0\");\n      const day = new Date(timestamp).getDate().toString().padStart(2, \"0\");\n      const hours = new Date(timestamp).getHours().toString().padStart(2, \"0\");\n      const minutes = new Date(timestamp)\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\");\n      return `${year}/${month}/${day} ${hours}:${minutes}`;\n    }\n  }\n\n  getLastMessageSummary(message) {\n    const getMessageText = (element) => {\n      switch (element.type) {\n        case \"text\":\n          return element.data.text;\n        case \"image\":\n          return \"[图片]\";\n        case \"record\":\n          return \"[语音]\";\n        case \"video\":\n          return \"[视频]\";\n        case \"file\":\n          return \"[文件]\";\n        case \"tool_call\":\n          return `[调用工具] ${element.data.name}`;\n        case \"reason\":\n          return element.data.text;\n        case \"blank\":\n          return \"正在思考中...\";\n        case \"reply\":\n          return \"\"; // 空字符串处理\n        case \"nodes\":\n          return \"[转发消息]\";\n        default:\n          return \"[未知消息类型] \" + element.type;\n      }\n    };\n\n    const msg = message || this.messageChain[this.messageChain.length - 1];\n    if (!msg) return \"\";\n    console.log(msg);\n\n    return getMessageText(msg.content ? msg.content[0] : msg);\n  }\n\n  updateFirstMessage() {\n    this.firstMessageIndex = this.messageChain.length;\n  }\n\n  updateLastUpdate() {\n    this.lastUpdate = new Date().getTime();\n  }\n\n  getMessageById(id) {\n    return this.messageChain.find((msg) => msg.id === id);\n  }\n\n  loadAvatar() {\n    let avatar = \"/static/avatar/miobot.png\";\n    if (avatarPolicy[this.avatarPolicy] == \"MODEL\") {\n      const model = this.options.base.model;\n      avatar = Contactor.getAvatarByModel(model);\n    } else if (avatarPolicy[this.avatarPolicy] == \"CUSTOM\") {\n      avatar = this.avatar;\n    }\n    this.avatar = avatar;\n    return avatar;\n  }\n\n  async loadName() {\n    let name = this.name ?? \"未命名 Bot\";\n    if (namePolicy[this.namePolicy] == \"MODEL\") {\n      const model = this.options.model;\n      name = model;\n    } else if (namePolicy[this.namePolicy] == \"CUSTOM\") {\n      name = this.name;\n    } else if (namePolicy[this.namePolicy] == \"SUMMARY\") {\n      if (this.messageChain.length < 2) {\n        name = \"新建的 Bot\";\n      } else if (\n        this.messageChain.length == 2 ||\n        this.messageChain.length % 6 == 0\n      ) {\n        name = await this.getMessagesSummary();\n      }\n    }\n    this.name = name;\n    return name;\n  }\n\n  getMessagesSummary() {\n    if (this.platform == \"openai\") {\n      return this.kernel.getMessagesSummary(\n        this._getValidOpenaiMessage().slice(-4),\n      );\n    } else {\n      return \"仅支持 OpenAI Chat Bot\";\n    }\n  }\n\n  static getAvatarByModel(model) {\n    const modelOwner = config.getModelOwner(model);\n    if (Object.keys(AVATAR_MAP).includes(modelOwner)) {\n      return `${AVATAR_BASE_PATH}/${AVATAR_MAP[modelOwner]}`;\n    }\n\n    return `${AVATAR_BASE_PATH}/openai.svg`;\n  }\n}\n","import Socket from \"./websocket.js\";\nimport Contactor from \"./contactor.js\";\nimport localforage from \"localforage\";\nimport EventEmitter from \"./event.js\";\nimport { reactive } from \"vue\";\nimport UploadWorker from \"../worker/fileUpload.js?worker\";\n\n// Configure localforage\nlocalforage.config({\n  name: \"mio-chat\",\n});\n\nexport default class Client extends EventEmitter {\n  constructor(config) {\n    super();\n    this.inited = false;\n    this.id = null; // Loaded from storage\n    this.code = null; // Loaded from storage\n    this.isConnected = false; // Dynamic\n    this.contactList = []; // Loaded from storage\n    this.socket = null; // Dynamic\n    this.qq = null; // Web\n    this.bot_qq = null; // Web\n    this.avatar = null; // Web\n    this.onPhone = null; // Dynamic\n    this.title = \"Mio\"; // Fixed\n    this.name = \"user\"; // Fixed\n    this.config = config; // Parameter\n  }\n\n  /**\n   * Prepare initialization\n   * @returns {object} Initialization information\n   */\n  async preInit() {\n    const localBaseInfo = this.config.getBaseConfig();\n    if (Object.keys(localBaseInfo).length === 0) {\n      await this.loadOriginBaseInfo();\n    } else {\n      this.loadOriginBaseInfo();\n      this.loadBaseInfo(localBaseInfo);\n    }\n\n    const localStroge = await this.getLocalStorage();\n    if (localStroge) {\n      this.loadLocalStorage(localStroge);\n    }\n\n    this.inited = true;\n    this.emit(\"loaded\");\n  }\n\n  genDefaultConctor() {\n    // Create default OneBot contactor\n    const onebotConfig = {\n      id: this.genFakeId(),\n      name: \"OneBot\",\n      namePolicy: 1,\n      avatarPolicy: 1,\n      avatar: `/p/qava?q=${this.bot_qq}`,\n      title: \"云崽\",\n      priority: 0,\n      options: {},\n      lastUpdate: -Infinity,\n    };\n    this.addConcator(\"onebot\", onebotConfig);\n\n    const options = this.config.getLLMDefaultConfig();\n    const allTools = this.config.llmTools.map((tool) => tool.name);\n    options.toolCallSettings.tools = allTools;\n\n    const LLMDefaultConfig = {\n      id: this.genFakeId(),\n      name: \"MioBot\",\n      avatar: \"/static/avatar/miobot.png\",\n      namePolicy: 1,\n      avatarPolicy: 1,\n      title: \"chat\",\n      priority: 0,\n      lastUpdate: -Infinity,\n      options,\n    };\n\n    this.addConcator(\"openai\", LLMDefaultConfig);\n  }\n\n  async addConcator(platform, config) {\n    const bot = new Contactor(platform, config);\n    bot.loadName();\n    bot.loadAvatar();\n\n    const list = reactive(this.contactList);\n    list.push(bot);\n    await this.setLocalStorage();\n    return bot;\n  }\n\n  rmContactor(id) {\n    const list = reactive(this.contactList);\n    const index = list.findIndex((item) => item.id == id);\n\n    if (index != -1) {\n      list.splice(index, 1);\n      this.setLocalStorage();\n    }\n  }\n\n  async loadOriginalContactors(shareId) {\n    const path = `/api/share?id=${shareId}`;\n    let contactor = null;\n    try {\n      const res = await fetch(path);\n      const data = await res.json();\n      if (data.code == 0) {\n        contactor = data.data.contactor;\n        // 检查是否已经存在\n        if (!this.getContactor(contactor.id)) {\n          this.addConcator(contactor.platform, contactor);\n        }\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Failed to load original contactors:\", error);\n      return false;\n    }\n  }\n\n  async shareContactor(id) {\n    const uploadResult = await this.setOriginalContactor(id);\n    if (uploadResult) {\n      const { previewImage, shareUrl } = uploadResult;\n      console.log(shareUrl);\n      console.log(previewImage);\n      // 拼接完整链接\n      const originalUrl = document.location.origin;\n      // 复制链接到剪贴板\n      const clipboard = navigator.clipboard;\n      if (clipboard) {\n        clipboard.writeText(originalUrl + shareUrl);\n      }\n      return uploadResult;\n    } else {\n      return null;\n    }\n  }\n\n  async setOriginalContactor(id) {\n    const path = `/api/share/set`;\n    const body = {\n      contactor: this.getContactor(id),\n    };\n    try {\n      const res = await fetch(path, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      const data = await res.json();\n      if (data.code == 0) {\n        return data.data;\n      }\n    } catch (error) {\n      console.error(\"Failed to set original contactor:\", error);\n      return null;\n    }\n  }\n\n  async reset() {\n    localforage.clear();\n    localStorage.clear();\n    try {\n      await this.resetCache();\n    } catch (error) {\n      console.error(\"Failed to reset cache:\", error);\n    }\n    return true;\n  }\n\n  async resetCache() {\n    try {\n      // 2. Send a message to the active Service Worker to clear its cache\n      if (navigator.serviceWorker.controller) {\n        console.log(\n          \"Sending message to active Service Worker to clear cache...\",\n        );\n        await new Promise((resolve, reject) => {\n          const messageChannel = new MessageChannel();\n          messageChannel.port1.onmessage = (event) => {\n            if (event.data.type === \"IDB_CACHE_CLEARED\") {\n              console.log(\"Service Worker cache cleared successfully.\");\n              resolve();\n            } else if (event.data.type === \"IDB_CACHE_CLEAR_FAILED\") {\n              console.error(\n                \"Service Worker cache clear failed:\",\n                event.data.error,\n              );\n              reject(event.data.error);\n            } else {\n              reject(new Error(\"Unknown message from Service Worker\"));\n            }\n          };\n          messageChannel.port1.onerror = (error) => {\n            console.error(\"Message port error:\", error);\n            reject(error);\n          };\n          navigator.serviceWorker.controller.postMessage(\n            { type: \"CLEAR_IDB_CACHE\" },\n            [messageChannel.port2],\n          );\n        });\n      } else {\n        console.log(\n          \"No active Service Worker found. Skipping cache clear message.\",\n        );\n      }\n\n      // 1. Unregister all service workers\n      const registrations = await navigator.serviceWorker.getRegistrations();\n      if (registrations && registrations.length > 0) {\n        console.log(\n          `Found ${registrations.length} registered Service Workers, unregistering...`,\n        );\n        for (const registration of registrations) {\n          // Use a for...of loop for cleaner async/await\n          try {\n            const unregistered = await registration.unregister();\n            if (unregistered) {\n              console.log(\n                `Service Worker ${registration.scope} unregistered successfully`,\n              );\n            } else {\n              console.warn(\n                `Service Worker ${registration.scope} unregistration failed`,\n              );\n            }\n          } catch (error) {\n            console.error(\n              `Failed to unregister Service Worker ${registration.scope}:`,\n              error,\n            );\n            // We don't reject here, to attempt to unregister other SWs. Log it, though.\n          }\n        }\n        console.log(\n          \"All Service Workers unregistration completed (with possible errors).\",\n        );\n      } else {\n        console.log(\"No registered Service Workers found.\");\n      }\n\n      return true; // Indicate success\n    } catch (error) {\n      console.error(\"Error during cache reset:\", error);\n      throw error; // Re-throw the error to be caught by the caller\n    }\n  }\n\n  everLogin() {\n    const stroge = localStorage.getItem(\"everLogin\");\n    if (stroge) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setEverLogin() {\n    localStorage.setItem(\"everLogin\", true);\n  }\n\n  async init() {\n    await this.preInit();\n    if (this.everLogin()) {\n      console.log(\"Detected cache, attempting automatic reconnection\");\n      this.isConnected = false;\n      this.login(this.code);\n    } else {\n      console.log(\"Not logged in before, please login first\");\n    }\n  }\n\n  getContactors() {\n    return this.contactList;\n  }\n\n  getContactor(id, onebotId = null) {\n    if (onebotId) {\n      // TODO: 拓展 Onebot 协议功能，实现 IM\n      return this.contactList.find((item) => item.platform == \"onebot\");\n    } else {\n      return this.contactList.find((item) => item.id == id);\n    }\n  }\n\n  /**\n   * Generate a random 5-digit ID starting with 1\n   * @returns {number} 5-digit random ID starting with 1\n   */\n  genFakeId() {\n    if (!this.id) {\n      // Generate 5-digit random number starting with 1\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`1${randomNum}`);\n    } else {\n      // Generate 4-digit random number and append to existing ID\n      const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n      return parseInt(`${this.id}${subRandomNum}`);\n    }\n  }\n\n  /**\n   * Get user information from localStorage\n   * @returns {object|false} User information or false if not found\n   */\n  async getLocalStorage() {\n    const client = await localforage.getItem(\"client\");\n    if (client) {\n      const localConfig = JSON.parse(client);\n      return localConfig;\n    } else {\n      // First-time user\n      this.id = this.genFakeId();\n      this.code = null;\n      return null;\n    }\n  }\n\n  /**\n   * Load user information from localStorage\n   * @param {object} client User information\n   */\n  loadLocalStorage(client) {\n    this.id = client.id;\n    this.code = client.code;\n\n    // If contact list exists, instantiate as contact objects\n    if (client.contactList && client.contactList.length != 0) {\n      this.contactList = client.contactList.map(\n        (item) => new Contactor(item.platform, item),\n      );\n    } else {\n      this.contactList = [];\n    }\n  }\n\n  /**\n   * Save user information to localStorage\n   */\n  async setLocalStorage() {\n    // await localforage.setItem(\"client\", JSON.stringify(this));\n    const client = {\n      id: this.id,\n      code: this.code,\n      contactList: this.contactList,\n    };\n    await localforage.setItem(\"client\", JSON.stringify(client));\n    console.log(\"Client saved\");\n  }\n\n  /**\n   * Login\n   * @param {string} code Access code\n   * @returns {Promise} Login result\n   */\n  async login(code) {\n    this.code = code;\n\n    return new Promise((resolve) => {\n      const socket = new Socket(this.id, this.code);\n\n      socket.on(\"connect\", async (info) => {\n        console.log(\"Login successful\");\n        this.isConnected = true;\n        this.socket = socket;\n        this.config.setLlmModels(info.models);\n        this.addMsgListener();\n        if (this.contactList.length == 0) {\n          this.genDefaultConctor();\n        }\n        this.setEverLogin();\n        this.setLocalStorage();\n        resolve(info);\n      });\n\n      socket.connect();\n    });\n  }\n\n  addMsgListener() {\n    this.socket.on(\"onebot_message\", (e) => {\n      console.log(e);\n      const data = e.data;\n      const id = data.id;\n      const content = data.content;\n      const type = data.type;\n\n      if (type == \"message\") {\n        const contactor = this.getContactor(id, 10000);\n        if (contactor) {\n          contactor.revMessage(content);\n          this.setLocalStorage();\n        } else {\n          console.log(\"Contactor not found\");\n        }\n      } else if (type == \"del_msg\") {\n        const onebotContactors = this.contactList.filter(\n          (item) => item.platform == \"onebot\",\n        );\n        for (const onebotContactor of onebotContactors) {\n          const deleted = onebotContactor.delMessage(content.message_id);\n          if (deleted) {\n            this.setLocalStorage();\n            console.log(\"Message deleted successfully\");\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Logout\n   */\n  async logout() {\n    this.isConnected = false;\n    this.socket.disconnect();\n    this.socket = null;\n    this.setLocalStorage();\n  }\n\n  /**\n   * Set base information\n   * @returns {Promise} Base information\n   */\n  async loadOriginBaseInfo() {\n    const res = await fetch(\"/api/base_info\");\n    const { data } = await res.json();\n    this.config.setBaseConfig(data);\n    this.loadBaseInfo(data);\n\n    return data;\n  }\n\n  loadBaseInfo(data) {\n    this.admin_qq = data.admin_qq;\n    this.bot_qq = data.bot_qq;\n\n    this.avatar = `/p/qava?q=${this.admin_qq}`;\n\n    const onebotContactor = this.getContactor(null, 10000);\n    if (onebotContactor) {\n      onebotContactor.avatar = `/p/qava?q=${this.bot_qq}`;\n    }\n  }\n\n  /**\n   * Upload file or image\n   * @param {File|Blob|string} fileOrImage - File object, Blob, or base64 string for images\n   * @param {Object} options - Upload options\n   * @param {boolean} options.isImage - Indicates if upload is an image\n   * @param {Function} options.onProgress - Progress callback (percent complete)\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadFile(fileOrImage, options = {}) {\n    const { isImage = false, onProgress = null } = options;\n\n    // Handle image upload (base64 string or blob)\n    if (\n      isImage ||\n      (typeof fileOrImage === \"string\" && fileOrImage.startsWith(\"data:\"))\n    ) {\n      return this.uploadImage(fileOrImage);\n    }\n\n    const file = fileOrImage;\n    return new Promise((resolve, reject) => {\n      const chunkSize = 1024 * 1024; // 1MB\n      let md5Hash = null;\n\n      const finalizeUpload = async (totalChunks) => {\n        try {\n          const response = await fetch(\"/api/upload/finalize\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              totalChunks,\n              md5: md5Hash,\n              filename: file.name,\n            }),\n          });\n\n          if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n          }\n\n          const data = await response.json();\n          resolve(data);\n        } catch (error) {\n          reject({ error: `Finalization error: ${error.message}` });\n        }\n      };\n\n      const uploadChunk = async (chunk, index, totalChunks) => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          formData.append(\"file\", chunk);\n          formData.append(\"md5\", md5Hash);\n          formData.append(\"chunkIndex\", index);\n          formData.append(\"totalChunks\", totalChunks);\n          formData.append(\"filename\", file.name);\n\n          const xhr = new XMLHttpRequest();\n          xhr.open(\"POST\", \"/api/upload/chunk\", true);\n\n          // Track progress if callback provided\n          if (onProgress) {\n            xhr.upload.onprogress = (event) => {\n              if (event.lengthComputable) {\n                // Calculate overall progress based on chunks\n                const chunkProgress = event.loaded / event.total;\n                const overallProgress =\n                  (index / totalChunks + (1 / totalChunks) * chunkProgress) *\n                  100;\n                onProgress(Math.round(overallProgress));\n              }\n            };\n          }\n\n          xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n              resolve(); // Successful upload\n            } else {\n              reject(xhr.statusText); // Failed upload\n            }\n          };\n\n          xhr.onerror = () => {\n            reject(\"Network Error\");\n          };\n\n          xhr.send(formData);\n        });\n      };\n\n      const uploadFileChunks = async () => {\n        if (!file || !md5Hash) {\n          return reject({ error: \"Invalid file or missing hash\" });\n        }\n\n        const totalChunks = Math.ceil(file.size / chunkSize);\n\n        try {\n          for (\n            let currentChunk = 0;\n            currentChunk < totalChunks;\n            currentChunk++\n          ) {\n            const start = currentChunk * chunkSize;\n            const end = Math.min(start + chunkSize, file.size);\n            const chunk = file.slice(start, end);\n\n            await uploadChunk(chunk, currentChunk, totalChunks);\n          }\n\n          // All chunks uploaded, finalize\n          await finalizeUpload(totalChunks);\n        } catch (error) {\n          reject({ error: `Upload error: ${error}` });\n        }\n      };\n\n      // Start worker to calculate MD5\n      const worker = new UploadWorker();\n      worker.postMessage({ file, chunkSize });\n\n      worker.onmessage = (e) => {\n        if (e.data.hash) {\n          md5Hash = e.data.hash;\n          console.log(\"MD5 calculated. Starting upload...\");\n          uploadFileChunks();\n        } else if (e.data.error) {\n          reject({ error: e.data.error });\n          worker.terminate();\n        }\n      };\n\n      worker.onerror = (error) => {\n        console.error(\"Worker error:\", error);\n        reject({ error: `Worker error: ${error.message}` });\n        worker.terminate();\n      };\n    });\n  }\n\n  /**\n   * Upload image (now integrated into uploadFile)\n   * @param {string|Blob} image - Base64 string or Blob\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadImage(formData) {\n    try {\n      const response = await fetch(\"/api/upload/image\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      throw error; // Re-throw to be handled by caller\n    }\n  }\n\n  /**\n   * Convert Blob to base64 string\n   * @param {Blob} blob - Image blob\n   * @returns {Promise<string>} Base64 string\n   */\n  async _convertBlobToBase64(blob) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","const TOOL_CALL_MODEDS = {\n  AUTO: \"AUTO\",\n  ANY: \"ANY\",\n  NONE: \"NONE\",\n};\nconst GEMINI_SAFETY_BLOCK_SETTINGS = {\n  NONE: \"BLOCK_NONE\",\n  LOW: \"BLOCK_ONLY_HIGH\",\n  MEDIUM: \"BLOCK_MEDIUM_AND_ABOVE\",\n  HIGH: \"BLOCK_LOW_AND_ABOVE\",\n  DEFAULT: \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\",\n};\nconst GEMINI_SAFETY_SETTINGS_TYPE = {\n  HARASSMENT: \"HARM_CATEGORY_HARASSMENT\",\n  HATE_SPEECH: \"HARM_CATEGORY_HATE_SPEECH\",\n  SEXUALLY_EXPLICIT: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n  DANGEROUS_CONTENT: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n  CIVIC_INTEGRITY: \"HARM_CATEGORY_CIVIC_INTEGRITY\",\n};\n\nconst CONFIG_KEY = \"config\";\n\nexport default class Config {\n  constructor() {\n    this.localPresets = [];\n    this.toolsConfig = {};\n    this.llmTools = [];\n    this.onebotConfig = null;\n    this.llmModels = []; // 初始化 llmModels\n    this.safetyConfig = {};\n    this.baseConfig = {};\n    this.LLMDefaultConfig = {};\n\n    this.initSafetyConfig(); // 放在 _loadStrogeConfig 前\n    this.initLLMDefaultConfig(); // 放在 _loadStrogeConfig 前\n    this._loadStrogeConfig();\n    this.loadllmTools();\n    this.loadonebotConfig();\n  }\n\n  // 统一设置 localStorage\n  _setLocalStorage(key, data) {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  // 统一获取 localStorage\n  _getLocalStorage(key) {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : null;\n  }\n\n  // 统一保存所有配置\n  _saveStrogeConfig() {\n    const configToSave = {\n      localPresets: this.localPresets,\n      toolsConfig: this.toolsConfig,\n      llmTools: this.llmTools,\n      onebotConfig: this.onebotConfig,\n      llmModels: this.llmModels,\n      baseConfig: this.baseConfig,\n      safetyConfig: this.safetyConfig,\n      LLMDefaultConfig: this.LLMDefaultConfig,\n    };\n    this._setLocalStorage(CONFIG_KEY, configToSave);\n  }\n\n  // 统一加载所有配置\n  _loadStrogeConfig() {\n    const config = this._getLocalStorage(CONFIG_KEY);\n    if (config) {\n      Object.assign(this, config);\n      // 由于 Object.assign 不会触发 setter，手动赋值\n      // this.displayConfig = config.displayConfig || {};\n      // this.safetyConfig = config.safetyConfig || {};\n      // this.LLMDefaultConfig = config.LLMDefaultConfig || {};\n    } else {\n      this._saveStrogeConfig();\n    }\n  }\n\n  getLLMProviders() {\n    return this.baseConfig.llm_providers.map((provider) => ({\n      value: provider,\n      label: provider,\n    }));\n  }\n\n  // Display Config\n  setBaseConfig(config) {\n    this.baseConfig = config;\n    this._saveStrogeConfig();\n\n    const { llm_providers, default_model } = config;\n\n    const defaultProvider = llm_providers.slice(-1)[0];\n\n    this.updateLLMDefaultConfig(null, {\n      provider: defaultProvider,\n    });\n\n    // 设定一下默认的模型\n    this.updateLLMDefaultConfig(\"base\", {\n      model: default_model[defaultProvider],\n    });\n  }\n\n  updateBaseConfig(patch) {\n    this.baseConfig = {\n      ...this.displayConfig,\n      ...patch,\n    };\n    this._saveStrogeConfig();\n  }\n\n  getToolCallModes() {\n    const values = Object.values(TOOL_CALL_MODEDS);\n    return values.map((value) => ({\n      value,\n      label: value,\n    }));\n  }\n\n  getBaseConfig() {\n    return this.baseConfig;\n  }\n\n  getDefaultModel(provider) {\n    return this.baseConfig.default_model[provider];\n  }\n\n  // Llm Models\n  setLlmModels(models) {\n    this.llmModels = models;\n    this._saveStrogeConfig(); // 保存到总配置\n  }\n\n  getLlmModels(provider) {\n    return this.llmModels[provider];\n  }\n\n  getDefaultLLMModel() {\n    return this.baseConfig.default_model;\n  }\n\n  getSafetySettingsParams() {\n    return GEMINI_SAFETY_BLOCK_SETTINGS;\n  }\n\n  isModelAvailable(provider, model) {\n    const group = this.llmModels[provider].find((modelGroup) =>\n      modelGroup.models.includes(model),\n    );\n    return group !== undefined;\n  }\n\n  // Llm Models\n  getModelOwner(model) {\n    for (const provider in this.llmModels) {\n      const group = this.llmModels[provider].find((modelGroup) =>\n        modelGroup.models.includes(model),\n      );\n      if (group) return group.owner;\n    }\n    return undefined;\n  }\n\n  // Safety Config\n  initSafetyConfig() {\n    if (Object.keys(this.safetyConfig).length === 0) {\n      this.safetyConfig = {};\n      for (const key in GEMINI_SAFETY_SETTINGS_TYPE) {\n        this.safetyConfig[GEMINI_SAFETY_SETTINGS_TYPE[key]] =\n          GEMINI_SAFETY_BLOCK_SETTINGS.DEFAULT;\n      }\n    }\n  }\n\n  setSafetyConfig(safetyConfig) {\n    // 新增：手动设置 safetyConfig 并保存\n    this.safetyConfig = safetyConfig;\n    this._saveStrogeConfig();\n  }\n\n  getSafetyConfig() {\n    // 新增：获取 safetyConfig\n    return this.safetyConfig;\n  }\n\n  // OpenAI Default Config\n  initLLMDefaultConfig() {\n    if (Object.keys(this.LLMDefaultConfig).length === 0) {\n      this.LLMDefaultConfig = {\n        provider: \"openai\",\n        base: {\n          model: \"gpt-4o-mini\",\n          max_messages_num: 10,\n          stream: true,\n        },\n        chatParams: {\n          temperature: 1,\n          top_p: 1,\n          frequency_penalty: 0,\n          presence_penalty: 0,\n        },\n        toolCallSettings: {\n          mode: TOOL_CALL_MODEDS.AUTO,\n          tools: [],\n        },\n        presetSettings: {\n          opening: \"\",\n          history: [],\n        },\n        safetySettings: {\n          ...this.safetyConfig, //  使用当前的 safetyConfig\n        },\n      };\n    }\n  }\n\n  updateLLMDefaultConfig(type, patch) {\n    if (type) {\n      this.LLMDefaultConfig[type] = {\n        ...this.LLMDefaultConfig[type],\n        ...patch,\n      };\n    } else {\n      this.LLMDefaultConfig = {\n        ...this.LLMDefaultConfig,\n        ...patch,\n      };\n    }\n\n    this._saveStrogeConfig();\n  }\n\n  getLLMDefaultConfig() {\n    return JSON.parse(JSON.stringify(this.LLMDefaultConfig));\n  }\n\n  // llm Tools\n  async loadllmTools() {\n    const res = await fetch(\"/api/openai/tools\");\n    const data = await res.json();\n    this.llmTools = Object.values(data.data.tools);\n    this._saveStrogeConfig();\n  }\n\n  // OneBot Config\n  async loadonebotConfig() {\n    const onebotOptionsData = await fetch(`/api/onebot/plugins`);\n    const onebotOptionsJson = await onebotOptionsData.json();\n    this.onebotConfig = onebotOptionsJson.data.options;\n    this._saveStrogeConfig();\n  }\n}\n","/**\n * @author Mio-FCIP <1099834705@qq.com>\n * @lastEditor 彭志勇 <2457305628@qq.com>\n * @lastEditTime 2024-04-25 06:25:30\n */\n\nimport Client from \"./client.js\";\nimport Config from \"./config.js\";\n\nconst config = new Config();\nconst client = new Client(config);\n\nclient.init();\n\nexport { config, client };\n","<script>\nimport { client } from \"@/lib/runtime.js\";\n\nconst PageStatus = {\n  CHAT: \"chat\",\n  PROFILE: \"profile\",\n  SETTINGS: \"settings\",\n  NONE: \"none\",\n};\nexport default {\n  data() {\n    return {\n      processedImage: \"/p/qava?q=1099834705\",\n      activePage: PageStatus.NONE,\n    };\n  },\n  computed: {\n    isChatActive() {\n      return this.activePage === PageStatus.CHAT;\n    },\n    isProfileActive() {\n      return this.activePage === PageStatus.PROFILE;\n    },\n  },\n  watch: {\n    $route: {\n      handler(newRoute) {\n        this.activePage = this.getPageStatusFromRoute(newRoute);\n      },\n      immediate: true,\n    },\n  },\n  mounted() {\n    this.activePage = this.getPageStatusFromRoute();\n    const adminId = client.admin_qq;\n    if (adminId) {\n      this.loadAvatar(adminId);\n    } else {\n      client.on(\n        \"loaded\",\n        () => {\n          const adminId = client.admin_qq;\n          this.loadAvatar(adminId);\n        },\n        false,\n      );\n    }\n  },\n  methods: {\n    async processImage(imageUrl) {\n      return new Promise((resolve, reject) => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const img = new Image();\n        img.src = imageUrl;\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          // 绘制原始图片\n          ctx.drawImage(img, 0, 0);\n          // 创建透明的缺口\n          let centerX = img.width * 0.8; // 圆心X坐标\n          let centerY = img.height * 0.86; // 圆心Y坐标\n          let radius = (5 / 24) * img.width; // 圆的半径\n          ctx.beginPath();\n          ctx.arc(centerX, centerY, radius, 0, Math.PI * 2, true);\n          ctx.clip();\n          ctx.clearRect(0, 0, img.width, img.height);\n          // 将处理后的图片转换为base64\n          canvas.toBlob((blob) => {\n            const url = URL.createObjectURL(blob);\n            resolve(url);\n          }, \"image/png\");\n        };\n        img.onerror = (error) => {\n          reject(error);\n        };\n      });\n    },\n    async toChat() {\n      this.activePage = PageStatus.CHAT;\n      this.$router.push({ name: \"blank\" });\n    },\n    async toProfile() {\n      this.activePage = PageStatus.PROFILE;\n      this.$router.push({ name: \"contactors\" });\n    },\n    async toConfig() {\n      this.activePage = PageStatus.SETTINGS;\n      this.$router.push({ name: \"settings\" });\n    },\n    async loadAvatar(adminId) {\n      const adminAvatar = `/p/qava?q=${adminId}`;\n      try {\n        this.processedImage = await this.processImage(adminAvatar);\n      } catch (error) {\n        console.error(\"Error loading avatar:\", error);\n      }\n    },\n    getPageStatusFromRoute(route = this.$route) {\n      if (route.path === \"/\" || route.path.includes(\"/chat/\")) {\n        return PageStatus.CHAT;\n      } else if (\n        route.path === \"/contactors\" ||\n        route.path.includes(\"/profile/\")\n      ) {\n        return PageStatus.PROFILE;\n      } else if (route.path === \"/settings\") {\n        return PageStatus.SETTINGS;\n      }\n      return PageStatus.NONE;\n    },\n  },\n};\n</script>\n<template>\n  <div id=\"sidebar\">\n    <div class=\"admin-avatar\">\n      <div class=\"status\"></div>\n      <img :src=\"processedImage\" alt=\"admin-avatar\" />\n    </div>\n    <div id=\"side\" class=\"options\">\n      <div class=\"up-half\">\n        <div class=\"icon-back\" :class=\"{ active: isChatActive }\">\n          <div id=\"chatting\" @click=\"toChat\">\n            <i class=\"iconfont chat\"></i>\n          </div>\n        </div>\n        <div class=\"icon-back\" :class=\"{ active: isProfileActive }\">\n          <div id=\"editing\" @click=\"toProfile\">\n            <i class=\"iconfont user\"></i>\n          </div>\n        </div>\n      </div>\n      <div class=\"down-half\">\n        <a\n          href=\"https://github.com/Pretend-to/mio-chat-backend\"\n          target=\"_blank\"\n          class=\"side-icon\"\n        >\n          <i class=\"iconfont github\"></i>\n        </a>\n        <div class=\"side-icon\" @click=\"toConfig\">\n          <i class=\"iconfont menu\"></i>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped>\n#sidebar {\n  display: flex;\n  flex-basis: 4.5rem;\n  flex-direction: column;\n  background-color: hsla(0, 0%, 100%, 0.8);\n  backdrop-filter: blur(0.5rem);\n  /* 添加模糊效果，值可以根据需要调整 */\n}\n.options {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n  /* margin: 1.2rem 1.2rem; */\n}\n.up-half,\n.down-half {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-basis: 8rem;\n  justify-content: center;\n}\n.icon-back {\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0.5rem 0rem;\n  border-radius: 0.5rem;\n}\n.icon-back.active {\n  background-color: rgba(113, 113, 113, 0.1);\n}\n.icon-back i,\n.down-half i {\n  margin: 0.5rem 0rem;\n  width: 1.8rem;\n  height: 1.8rem;\n  font-size: 1.6rem;\n  color: black;\n}\n.admin-avatar {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  height: 4.5rem;\n  position: relative;\n  z-index: 10;\n}\n.admin-avatar img {\n  border-radius: 50%;\n  width: 60%;\n}\n.status {\n  position: absolute;\n  left: 68%;\n  top: 71%;\n  transform: translate(-50%, -50%);\n  width: 0.7rem;\n  height: 0.7rem;\n  border-radius: 50%;\n  background: linear-gradient(to bottom, rgb(52, 238, 143), rgb(54, 221, 150));\n}\n.side-icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.icon-back.active i {\n  color: #007bff;\n}\n\n@media screen and (max-width: 600px) {\n  .options {\n    justify-content: space-evenly;\n  }\n  #sidebar {\n    width: 100%;\n    flex-direction: row;\n    flex-basis: 4rem;\n    background-color: #f5f4f9;\n  }\n  .admin-avatar {\n    display: none;\n  }\n  .options {\n    flex-direction: row;\n    width: 100%;\n  }\n  .up-half,\n  .down-half {\n    flex-basis: 50%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n  }\n  .icon-back.active {\n    background-color: transparent;\n  }\n}\n</style>\n","<template>\n  <ul\n    :class=\"{\n      'window-controls': true,\n      fullscreen: fullScreen,\n      preview: preview,\n    }\"\n  >\n    <li class=\"button\" @click=\"waiting()\">\n      <span class=\"window-min\">—</span>\n    </li>\n    <li v-if=\"fullScreen\" class=\"button\" @click=\"configFullScreen(false)\">\n      <span class=\"window-inmax\">\n        <i class=\"iconfont chuangkouhua\"></i>\n      </span>\n    </li>\n    <li v-else class=\"button\" @click=\"configFullScreen(true)\">\n      <span class=\"window-max\">▢</span>\n    </li>\n    <li id=\"close\" class=\"button\" @click=\"waiting()\">\n      <span class=\"window-close\">&times;</span>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  props: {\n    fullScreen: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"set-screen\"],\n  data() {\n    return {\n      preview: false,\n    };\n  },\n  created() {\n    // 检查查询字符串中是否存在preview参数\n    const urlParams = new URLSearchParams(window.location.search);\n    const preview = urlParams.get(\"preview\");\n    if (preview === \"true\") {\n      this.preview = true;\n    }\n  },\n  methods: {\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    configFullScreen(fullScreen) {\n      this.$emit(\"set-screen\", fullScreen);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"sass\">\n.window-controls\n    position: absolute\n    display: flex\n    width: 6rem\n    height: 2rem\n    z-index: 100\n    right: 0\n\n    &.preview\n        display: none\n\n    &.fullscreen\n        position: fixed\n\n    .button\n        display: flex\n        justify-content: center\n        align-items: flex-start\n        flex-grow: 1\n        height: 100%\n        align-items: center\n        .window-min\n            font-size: .6rem\n            margin-top: .2rem\n        .window-max\n            font-size: .9rem\n        .window-close\n            margin-top: -.15rem\n        &:hover\n            background-color: rgb(231, 231, 231)\n        &#close:hover\n            background-color: rgb(255, 0, 0)\n            color: white\n</style>\n","<template>\n  <div\n    id=\"forward-msg-preview\"\n    :class=\"onPhone ? 'on-phone' : ''\"\n    @click=\"showBox = true\"\n  >\n    <div id=\"forward-msg-head\">转发的聊天消息</div>\n    <div id=\"forward-msg-body\">\n      <div\n        v-for=\"(message, index) in messages\"\n        id=\"forward-msg-summary\"\n        :key=\"index\"\n      >\n        {{ contactor.name }}: {{ contactor.getLastMessageSummary(message) }}\n      </div>\n    </div>\n    <div id=\"forward-msg-foot\">查看{{ messages.length }}条转发消息</div>\n  </div>\n  <div v-if=\"showBox\" id=\"forward-msg-box\" :class=\"onPhone ? 'on-phone' : ''\">\n    <div class=\"head\">\n      <span>转发消息</span>\n      <span class=\"close\" @click=\"showBox = false\">&times;</span>\n    </div>\n    <div class=\"body\">\n      <div\n        v-for=\"(message, index) of messages\"\n        :key=\"index\"\n        class=\"message-container\"\n      >\n        <div id=\"other\" class=\"message-body\">\n          <div class=\"avatar\">\n            <img :src=\"contactor.avatar\" :alt=\"contactor.name\" />\n          </div>\n          <div class=\"msg\">\n            <div class=\"wholename\">\n              <div class=\"title\">{{ contactor.title }}</div>\n              <div class=\"name\">{{ contactor.name }}</div>\n            </div>\n            <div class=\"content\">\n              <div>\n                <MdPreview\n                  v-if=\"message.type === 'text'\"\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"message.data.text\"\n                />\n                <el-image\n                  v-if=\"message.type === 'image'\"\n                  :key=\"index\"\n                  style=\"margin: 8px 0; max-width: 20rem; border-radius: 1rem\"\n                  :src=\"message.data.file\"\n                  :zoom-rate=\"1.2\"\n                  :preview-teleported=\"true\"\n                  :max-scale=\"7\"\n                  :min-scale=\"0.2\"\n                  :preview-src-list=\"[message.data.file]\"\n                  :initial-index=\"4\"\n                  fit=\"cover\"\n                />\n                <MdPreview\n                  v-else\n                  preview-theme=\"github\"\n                  editor-id=\"preview-only\"\n                  :model-value=\"`尚未支持的消息类型：${message.type}`\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MdPreview } from \"md-editor-v3\";\nimport { client } from \"@/lib/runtime.js\";\n\nexport default {\n  components: {\n    MdPreview,\n  },\n  props: {\n    messages: {\n      type: Array,\n      default: () => [], // 对于数组，使用函数返回一个新的空数组\n    },\n    contactor: {\n      type: Object,\n      default: () => {}, // 对于字符串，使用空字符串\n    },\n  },\n  data() {\n    return {\n      showBox: false,\n      onPhone: false,\n    };\n  },\n  created() {\n    this.onPhone = window.innerWidth < 600;\n\n    client.on(\n      \"device-change\",\n      (type) => {\n        if (type == \"mobile\") {\n          this.onPhone = true;\n        } else {\n          this.onPhone = false;\n        }\n      },\n      false,\n    );\n  },\n};\n</script>\n\n<style scoped>\n#forward-msg-preview {\n  width: 15rem;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem;\n}\n\n#forward-msg-preview.on-phone {\n  transform: translateX(-0.35rem);\n}\n\n#forward-msg-body {\n  margin: 0.5rem 0;\n  width: 100%;\n  text-overflow: ellipsis;\n}\n\n#forward-msg-summary {\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  font-size: 0.8rem;\n  font-weight: 300;\n}\n\n#forward-msg-foot {\n  border-top: 1px solid #ccc;\n  padding-top: 0.2rem;\n  width: 100%;\n  font-size: 0.7rem;\n  color: rgb(150, 150, 150);\n}\n\n#forward-msg-box {\n  border: 1px solid black;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24rem;\n  height: 30rem;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  border-radius: 0.25rem;\n  overflow: hidden;\n}\n\n.message-body > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n\n#forward-msg-box.on-phone {\n  border: null;\n  border-radius: null;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  background-color: rgb(241, 241, 241);\n  overflow: hidden;\n}\n\n.head {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 2rem;\n  padding-left: 1rem;\n  border-bottom: 1px solid #ccc;\n  color: black;\n}\n\n.close {\n  width: 1.5rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n.body {\n  height: auto;\n  max-height: calc(100% - 2rem);\n  overflow: auto;\n}\n</style>\n","<template>\n  <div class=\"input-bar\">\n    <div class=\"options\">\n      <div class=\"bu-emoji\">\n        <emoji-picker\n          v-show=\"showemoji\"\n          ref=\"emojiPicker\"\n          @emoji-click=\"getemoji\"\n        ></emoji-picker>\n        <p class=\"ho-emoji\">表情</p>\n        <i class=\"iconfont smile\" @click.prevent=\"ctrlEmojiPanel\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">\n          {{ activeContactor.platform == \"openai\" ? \"模型选择\" : \"工具选择\" }}\n        </p>\n        <el-tree-select\n          id=\"wraper-selector\"\n          v-model=\"selectedOption\"\n          :data=\"extraOptions\"\n          @change=\"activeBotTools\"\n        />\n        <i class=\"iconfont robot\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">重置人格</p>\n        <i class=\"iconfont reset\" @click=\"$emit('cleanHistory')\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">清除记录</p>\n        <i class=\"iconfont shanchu\" @click=\"$emit('cleanScreen')\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">上传</p>\n        <i class=\"iconfont upload\" @click=\"uploadFile\"></i>\n      </div>\n      <div class=\"bu-emoji\">\n        <p class=\"ho-emoji\">滑到底部</p>\n        <i class=\"iconfont down\" @click=\"$emit('toButtom', 1)\"></i>\n      </div>\n    </div>\n    <div class=\"input-box\">\n      <div class=\"input-content\">\n        <div\n          ref=\"textarea\"\n          class=\"input-area\"\n          :v-html=\"userInput\"\n          contenteditable=\"true\"\n          placeholder=\"按 Ctrl + Enter 以发送消息\"\n          @keydown=\"handleKeyDown\"\n          @input=\"handleInput\"\n          @click=\"updateCursorPosition\"\n        ></div>\n      </div>\n      <button\n        id=\"sendButton\"\n        :disabled=\"!userInput || !isValidInput(userInput)\"\n        @click.prevent=\"send\"\n      >\n        发送{{ getWraperName() ? ` | ${getWraperName()}` : \"\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { client, config } from \"@/lib/runtime.js\";\n\nexport default {\n  props: {\n    activeContactor: {\n      type: Object,\n      required: true,\n    },\n  },\n  emits: [\"toButtom\", \"cleanHistory\", \"cleanScreen\", \"setModel\", \"stroge\"],\n  data() {\n    return {\n      userInput: \"\",\n      selectedOption: null,\n      cursorPosition: [],\n      showemoji: false,\n      openaiModels: null,\n      onebotPresets: null,\n      host: \"\",\n      uploaded: { files: [], images: [] }, // Keep original data structure\n      isPasting: false,\n    };\n  },\n  computed: {\n    extraOptions() {\n      if (this.activeContactor.platform == \"openai\") {\n        return this.openaiModels;\n      } else {\n        return this.onebotPresets;\n      }\n    },\n  },\n  watch: {\n    \"$route.params.id\"() {\n      this.loadSelected();\n    },\n  },\n  created() {\n    this.loadSelected();\n  },\n  mounted() {\n    this.textareaRef = this.$refs.textarea;\n    this.textareaRef.addEventListener(\"input\", this.adjustTextareaHeight);\n    // 添加拖拽事件监听器\n    this.handleDragOver = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#e0e0e0\";\n    };\n    this.handleDragLeave = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n    };\n    this.handleDrop = (e) => {\n      e.preventDefault();\n      this.textareaRef.style.backgroundColor = \"#f1f1f1\";\n      const files = e.dataTransfer.files;\n      if (files.length > 0) {\n        this.handleDroppedFile(files[0]);\n      }\n    };\n    this.textareaRef.addEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.addEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.addEventListener(\"drop\", this.handleDrop);\n    // 将paste事件的处理函数定义为一个方法\n    this.handlePaste = (e) => {\n      e.preventDefault();\n      this.isPasting = true;\n      // 获取剪贴板的数据\n      var items = (e.clipboardData || window.clipboardData).items;\n      for (var i = 0; i < items.length; i++) {\n        // 检查是否为文件类型\n        if (items[i].type.indexOf(\"image\") !== -1) {\n          var blob = items[i].getAsFile();\n          this.handleUploadImage(blob);\n        } else if (items[i].type === \"text/plain\") {\n          var text = (e.originalEvent || e).clipboardData.getData(\"text/plain\");\n          document.execCommand(\"insertText\", false, text);\n          this.userInput = this.textareaRef.innerText;\n        }\n      }\n      this.isPasting = false;\n    };\n    // 添加paste事件监听器\n    this.textareaRef.addEventListener(\"paste\", this.handlePaste);\n    this.host = window.location.origin;\n  },\n  unmounted() {\n    this.textareaRef.removeEventListener(\"input\", this.adjustTextareaHeight);\n    this.textareaRef.removeEventListener(\"dragover\", this.handleDragOver);\n    this.textareaRef.removeEventListener(\"dragleave\", this.handleDragLeave);\n    this.textareaRef.removeEventListener(\"drop\", this.handleDrop);\n    this.textareaRef.removeEventListener(\"paste\", this.handlePaste);\n    this.textareaRef = null;\n  },\n  methods: {\n    handleDroppedFile(file) {\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadFile(file);\n      }\n    },\n    ctrlEmojiPanel() {\n      this.showemoji = !this.showemoji;\n      const editor = this.textareaRef;\n      editor.focus();\n    },\n    uploadFile(file) {\n      if (file instanceof File) {\n        this.handleFileUpload(file);\n        return;\n      }\n      const availableImageFormats = [\"png\", \"jpg\", \"jpeg\", \"webp\"];\n      const availableDocFormats = [\"docx\", \"txt\", \"pdf\", \"pptx\", \"xlsx\"];\n      const fileInput = document.createElement(\"input\");\n      fileInput.type = \"file\";\n      fileInput.accept = [...availableDocFormats, ...availableImageFormats]\n        .map((format) => `.${format}`)\n        .join(\",\");\n\n      const handleChange = async (e) => {\n        fileInput.removeEventListener(\"change\", handleChange);\n        const file = e.target.files[0];\n        if (!file) return;\n        this.handleFileUpload(file);\n      };\n      fileInput.addEventListener(\"change\", handleChange);\n      fileInput.click();\n    },\n    handleFileUpload(file) {\n      if (file.size > 50 * 1024 * 1024) {\n        this.$message.error(\"文件大小超过50MB，无法上传\");\n        return;\n      }\n      this.$message.info(\"文件上传中...\");\n      if (file.type.startsWith(\"image/\")) {\n        this.handleUploadImage(file);\n      } else {\n        this.uploadDocumentFile(file);\n      }\n    },\n    async uploadDocumentFile(file) {\n      try {\n        const upload = await client.uploadFile(file);\n        this.$message.success(\"文件上传成功\");\n        this.uploaded.files.push(\n          `${upload.data.url}?size=${file.size}&name=${file.name}`,\n        );\n      } catch (error) {\n        console.error(\"文件上传失败:\", error);\n        this.$message.error(\"文件上传失败，请稍后再试\");\n      }\n    },\n    handleUploadImage(file) {\n      const maxSizeMB = 5;\n      const maxSizeByte = maxSizeMB * 1024 * 1024;\n\n      const img = new Image();\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        img.src = event.target.result;\n      };\n\n      img.onload = () => {\n        const fileType = file.type.toLowerCase();\n\n        // 处理 GIF 类型，上传原文件\n        if (fileType === \"image/gif\") {\n          // GIF 检查大小\n          if (file.size > maxSizeByte) {\n            this.$message.error(`图片大小不能超过 ${maxSizeMB}MB`);\n            return;\n          }\n          const formData = new FormData();\n          formData.append(\"image\", file, file.name);\n          client\n            .uploadImage(formData)\n            .then((upload) => {\n              const imageUrl = upload.data.url;\n              this.uploaded.images.push(imageUrl);\n              this.insertImageToTextarea(imageUrl, file.name);\n              this.$message.success(\"上传图片成功\");\n            })\n            .catch((error) => {\n              console.error(\"Error handling uploaded image:\", error);\n              this.$message.error(\"上传图片失败\");\n            });\n          return;\n        }\n\n        // 非GIF类型，使用Canvas处理\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // 根据文件类型确定mimeType和quality, for toBlob\n        let mimeType, quality;\n\n        if (fileType === \"image/png\") {\n          mimeType = \"image/png\";\n          quality = undefined; // PNG的质量参数无效\n        } else if (fileType === \"image/webp\") {\n          mimeType = \"image/webp\";\n          quality = 0.7;\n        } else {\n          // 默认为jpeg（处理jpg or其他类型）\n          mimeType = \"image/jpeg\";\n          quality = 0.7;\n        }\n\n        canvas.toBlob(\n          (blob) => {\n            if (blob.size > maxSizeByte) {\n              this.$message.error(\n                `图片压缩后仍然超过 ${maxSizeMB}MB，请选择更小的图片`,\n              );\n              return;\n            }\n\n            const formData = new FormData();\n            formData.append(\"image\", blob, file.name);\n            client\n              .uploadImage(formData)\n              .then((upload) => {\n                const imageUrl = upload.data.url;\n                this.uploaded.images.push(imageUrl);\n                this.insertImageToTextarea(imageUrl, file.name);\n                this.$message.success(\"上传图片成功\");\n              })\n              .catch((error) => {\n                console.error(\"上传图片失败\", error);\n                this.$message.error(\"上传图片失败\");\n              });\n          },\n          mimeType,\n          quality, // 对于不能使用quality参数的mime类型，此参数被忽略\n        );\n      };\n      reader.readAsDataURL(file);\n    },\n    // 插入图片到文本域的方法\n    insertImageToTextarea(imageUrl, imageName) {\n      const imageElement = document.createElement(\"img\");\n      imageElement.src = imageUrl;\n      imageElement.alt = imageName;\n      imageElement.style.maxWidth = \"10rem\";\n      imageElement.style.maxHeight = \"10rem\";\n\n      const range = document.createRange();\n      range.selectNodeContents(this.textareaRef);\n      range.collapse(false); // 将范围折叠到末尾\n\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      const fragment = range.createContextualFragment(\n        `<span>${imageElement.outerHTML}</span>`,\n      );\n      range.insertNode(fragment);\n\n      // 保持光标在插入的图片之后\n      setTimeout(() => {\n        const newRange = document.createRange();\n        newRange.selectNodeContents(this.textareaRef);\n        newRange.collapse(false); // 将范围折叠到末尾\n\n        const newSelection = window.getSelection();\n        newSelection.removeAllRanges();\n        newSelection.addRange(newRange);\n      }, 0);\n    },\n    initExtraOptions() {\n      const { provider } = this.activeContactor.options;\n      console.log(provider);\n      const models = client.config.getLlmModels(provider);\n      this.openaiModels = models.map((modelGroup) => {\n        return {\n          value: modelGroup.owner,\n          label: modelGroup.owner,\n          children: modelGroup.models.map((model) => {\n            return {\n              value: model,\n              label: model,\n            };\n          }),\n        };\n      });\n      this.onebotPresets = config.onebotConfig.textwraper.options;\n    },\n    getOpenaiModelArray(model) {\n      const owner = client.config.getModelOwner(model);\n      return [owner, model];\n    },\n    wrapText(rawText) {\n      const preset = this.getOnebotPreset();\n      if (!this.selectedOption || !preset) return rawText;\n      const testText = \"{xxx}\";\n      console.log(this.onebotPresets);\n\n      const result = preset.replace(testText, rawText);\n      return result;\n    },\n    getOnebotPreset() {\n      const preset = this.onebotPresets\n        .reduce((acc = [], item) => {\n          const arr = item.children ?? [item];\n          return [...acc, ...arr];\n        }, [])\n        .find((child) => child.value == this.selectedOption)?.preset;\n\n      return preset;\n    },\n    loadSelected() {\n      if (this.activeContactor.platform === \"onebot\") {\n        if (this.activeContactor.preset) {\n          this.selectedOption = this.activeContactor.preset;\n        }\n      } else {\n        this.initExtraOptions();\n        this.selectedOption = this.activeContactor.options.base.model;\n      }\n    },\n    adjustTextareaHeight() {\n      const textarea = this.textareaRef;\n      textarea.style.height = \"auto\";\n      textarea.style.height = textarea.scrollHeight + \"px\";\n    },\n    getWraperName() {\n      const preset = this.getOnebotPreset();\n      if (this.activeContactor.platform === \"onebot\" && preset) {\n        if (!this.selectedOption) return \"\";\n        const name = preset.replace(\"#\", \"\").replace(\"{xxx}\", \"\");\n        return name;\n      } else {\n        return \"\";\n      }\n    },\n    waiting() {\n      this.$message({ message: \"此功能尚未开放\", type: \"warning\" });\n    },\n    getemoji(e) {\n      const inputer = this.textareaRef;\n      inputer.focus();\n      const range = document.createRange();\n      const sel = window.getSelection();\n      if (!sel) return;\n      const unicode = e.detail.unicode;\n      const startPos = this.cursorPosition[0];\n      const endPos = this.cursorPosition[1];\n      const textBeforeCursor = this.userInput.substring(0, startPos);\n      const textAfterCursor = this.userInput.substring(endPos);\n\n      console.log(`前面的：${textBeforeCursor}，后面的：${textAfterCursor}`);\n\n      this.userInput = textBeforeCursor + unicode + textAfterCursor;\n      inputer.innerHTML = this.userInput;\n      // 移动光标位置到表情符号之后\n      setTimeout(() => {\n        range.setStart(inputer.firstChild, startPos + unicode.length);\n        range.setEnd(inputer.firstChild, startPos + unicode.length);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        //更新光标位置\n        this.cursorPosition = [\n          startPos + unicode.length,\n          startPos + unicode.length,\n        ];\n      }, 0);\n      this.ctrlEmojiPanel();\n    },\n    updateCursorPosition() {\n      const selection = window.getSelection();\n      if (!selection) return;\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        this.cursorPosition[0] = range.startOffset;\n        this.cursorPosition[1] = range.endOffset;\n      }\n    },\n    presend() {\n      this.textareaRef.focus();\n      // 获取textarea中的所有img元素\n      const images = this.textareaRef.querySelectorAll(\"img\");\n      const ImageSrcs = Array.from(images).map((img) => img.src);\n      // let msg = this.getSafeText(this.textareaRef.innerText);  // Use innerText, not userInput\n      let msg = this.getSafeText(this.userInput);\n      const wrappedMessage =\n        this.activeContactor.platform === \"onebot\" ? this.wrapText(msg) : msg;\n      this.userInput = this.textareaRef.innerHTML = \"\"; // Clear the textarea\n      this.adjustTextareaHeight();\n\n      const container = {\n        role: \"user\",\n        time: new Date().getTime(),\n        status: \"completed\",\n        content: [\n          {\n            type: \"text\",\n            data: {\n              text: wrappedMessage,\n            },\n          },\n        ],\n      };\n\n      ImageSrcs.forEach((imgUrl) => {\n        container.content.unshift({\n          type: \"image\",\n          data: {\n            file: imgUrl,\n          },\n        });\n      });\n      this.uploaded.files.forEach((file) => {\n        container.content.push({\n          type: \"file\",\n          data: {\n            file: this.host + file,\n          },\n        });\n      });\n\n      if (this.repliedMessageId) {\n        const replyData = {\n          type: \"reply\",\n          data: {\n            id: this.repliedMessageId,\n          },\n        };\n        container.content.push(replyData);\n      }\n      return container;\n    },\n    async send() {\n      this.$emit(\"toButtom\");\n      const container = this.presend();\n      // this.userInput = \"\";  // Already cleared in presend\n      const message_id = await this.activeContactor.webSend(container); //发送消息\n      container.id = message_id;\n      this.$emit(\"stroge\");\n      this.uploaded.images = [];\n      this.uploaded.files = [];\n    },\n    getSafeText(text) {\n      // return text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n      return text;\n    },\n    cleanScreen() {\n      this.$emit(\"cleanScreen\");\n    },\n    activeBotTools() {\n      if (this.activeContactor.platform === \"onebot\") {\n        if (this.getOnebotPreset() && !this.getOnebotPreset().includes(\"xxx\")) {\n          this.send();\n        }\n      } else {\n        this.$emit(\"setModel\", this.selectedOption);\n        this.$message({\n          message: \"已切换到 \" + this.selectedOption + \" 模型\",\n          type: \"success\",\n        });\n      }\n    },\n    isValidInput(input) {\n      return input.trim().length > 0;\n    },\n    handleKeyDown(event) {\n      if (event.key === \"Enter\") {\n        if (event.ctrlKey) {\n          // Send only if there's text OR files.\n          if (this.userInput && this.isValidInput(this.userInput)) {\n            this.send();\n          } else {\n            this.$message({ message: \"不能发送空消息\", type: \"warning\" });\n          }\n        } else {\n          this.userInput += \"\\n\";\n        }\n      }\n      setTimeout(() => {\n        this.updateCursorPosition();\n      }, 0);\n    },\n    handleInput() {\n      if (!this.isPasting) this.userInput = this.textareaRef.innerText;\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n$mobile: 600px\n$icon-hover: #09f\n\ni:hover\n  color: $icon-hover\n\n.input-bar\n  flex-shrink: 0\n  display: flex\n  flex-direction: column\n  border: 0 solid rgba(161, 154, 154, 0.626)\n  flex-basis: 11rem\n  @media (max-width: $mobile)\n    flex-basis: 7rem\n    width: 100%\n    flex-direction: column-reverse\n    position: fixed\n    bottom: 0\n    z-index: 1000\n    background-color: hsla(0, 0%, 100%, 0.8)\n    backdrop-filter: blur(0.5rem)\n\n  .options\n    display: flex\n    border-top: 0.0625rem solid rgba(128, 128, 128, 0.502)\n    padding: 0.25rem 0.5rem\n    @media (max-width: $mobile)\n      border: none\n      justify-content: space-around\n\n.bu-emoji\n  position: relative\n  white-space: nowrap\n  @media screen and (min-width: $mobile)\n    &:hover p.ho-emoji\n      display: block\n\nemoji-picker\n  position: absolute\n  top: -25.75rem\n  right: -20rem\n\np.ho-emoji\n    text-wrap: nowrap\n    display: none\n    font-size: .75rem\n    padding: .125rem .25rem\n    background-color: #fff\n    border: none\n    box-shadow: 0 .125rem .25rem #0003\n    position: absolute\n    top: 80%\n    left: 50%\n    transform: translate(-60%)\ni\n  display: block\n  padding: 0.25rem 0.5rem 0 0\n  font-size: 1.25rem\n  width: 1.5rem\n  height: 1.5rem\n\n.input-box\n    flex-grow: 1\n    padding: 0 .5rem\n    display: flex\n    flex-direction: column\n    align-items: end\n\n    @media screen and (max-width: $mobile)\n      flex-direction: row\n      align-items: flex-end\n      flex-wrap: nowrap\n\n    .input-content\n      flex-wrap: wrap\n      display: flex\n      background-color: #f1f1f1\n      border: 0\n      flex-grow: 1\n      width: 100%\n\n      @media screen and (max-width: $mobile)\n        margin: 0.5rem 0.5rem 0.8rem 0\n        min-height: 2rem\n        flex-basis: calc( 100% - 4rem )\n        max-width: calc( 100% - 4rem )\n        flex-grow: 0\n        background-color: #fff\n\n      .input-area\n        overflow-y: auto\n        max-height: 20rem\n        resize: none\n        font-size: 1rem\n        background-color: #f1f1f1\n        border: 0\n        flex-grow: 1\n        width: 100%\n        moz-user-select: -moz-none\n        -moz-user-select: none\n        -o-user-select: none\n        -khtml-user-select: none\n        -webkit-user-select: none\n        -ms-user-select: none\n        user-select: none\n        &:focus\n          border: 0\n          outline: none\n\n        @media screen and (max-width: $mobile)\n          background-color: transparent\n          margin: 0.2rem\n          caret-color: #14C1EB\n\n    button\n        white-space: nowrap\n        color: #f0f8ff\n        border-radius: .3125rem\n        border: 0\n        background-color: $icon-hover\n        padding: .25rem 1rem\n        margin-bottom: .8rem\n        margin-right: .5rem\n        cursor: pointer\n\n        @media screen and (max-width: $mobile)\n          height: 2rem\n          margin-right: 0rem\n</style>\n","<template>\n  <div class=\"file-block\">\n    <div class=\"file-block-icon\">\n      <div class=\"file-icon\" :class=\"iconClass\">\n        <!-- Dynamic class binding -->\n        <span v-if=\"file_type\"> {{ file_type.toUpperCase() }}</span>\n      </div>\n    </div>\n    <div class=\"file-block-text\">\n      <div class=\"file-name\" :title=\"file_name\">{{ file_name }}</div>\n      <div class=\"file-info\">\n        {{ file_type.toUpperCase() }}, {{ formated_file_size }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    fileUrl: {\n      // 修改为 camelCase\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      file_name: \"\",\n      file_type: \"\",\n      formated_file_size: \"\",\n    };\n  },\n  computed: {\n    iconClass() {\n      //Use lower case for comparison, easier to manage\n      const type = this.file_type.toLowerCase();\n\n      if (type === \"pdf\") {\n        return \"file-icon-pdf\";\n      } else if ([\"xls\", \"xlsx\", \"csv\"].includes(type)) {\n        // Spreadsheet (Excel, CSV)\n        return \"file-icon-spreadsheet\";\n      } else if ([\"doc\", \"docx\"].includes(type)) {\n        // Word\n        return \"file-icon-word\";\n      } else if ([\"ppt\", \"pptx\"].includes(type)) {\n        // PowerPoint\n        return \"file-icon-ppt\";\n      } else {\n        return \"file-icon-other\"; // Default (gray)\n      }\n    },\n  },\n  created() {\n    // 从查询参数中获取文件大小\n    const url = this.fileUrl.split(\"?\");\n    const params = new URLSearchParams(url[1]);\n    const bits = params.get(\"size\");\n    this.file_name = params.get(\"name\");\n    this.formated_file_size = this.formatFileSize(bits);\n    // 从url中获取文件类型\n    const file_type = url[0].split(\".\");\n    this.file_type = file_type[file_type.length - 1];\n  },\n  methods: {\n    formatFileSize(bits) {\n      const units = [\"B\", \"KB\", \"MB\"];\n      let unitIndex = 0;\n      while (bits >= 1024) {\n        bits /= 1024;\n        unitIndex++;\n      }\n      return bits.toFixed(2) + \" \" + units[unitIndex];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.file-block {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 5px;\n  background-color: #f5f5f5;\n  margin-bottom: 8px;\n  width: 12rem;\n  position: relative;\n}\n\n.file-block-icon {\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n}\n\n.file-icon {\n  width: 40px;\n  height: 40px;\n  /*  Remove default background  */\n  /* background-color: #4285f4; */\n  color: #fff;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n}\n/* Add specific styles for each file type */\n.file-icon-pdf {\n  background-color: #e70012;\n}\n\n.file-icon-spreadsheet {\n  background-color: #138147;\n}\n\n.file-icon-word {\n  background-color: #144eb3;\n}\n.file-icon-ppt {\n  background-color: #ca4b27;\n}\n\n.file-icon-other {\n  background-color: gray;\n}\n\n.file-block-text {\n  flex: 1;\n  overflow: hidden;\n}\n\n.file-name {\n  font-weight: bold;\n  font-size: 12px;\n  color: #333;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.file-info {\n  font-size: 10px;\n  color: #777;\n}\n</style>\n","<template>\n  <div class=\"tool-call-bar\">\n    <div class=\"status-icon\">\n      <span v-if=\"toolCallSuccess\" class=\"call-success-icon\">\n        <div class=\"checkmark-container\">\n          <svg\n            class=\"checkmark\"\n            viewBox=\"0 0 52 36\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <polyline points=\"1 20 15 36 51 1\" />\n          </svg>\n        </div>\n      </span>\n      <span v-else-if=\"toolCallFail\" class=\"call-fail-icon\">❌</span>\n      <span v-else class=\"call-pend-icon\"></span>\n    </div>\n    <div class=\"tool-info\">\n      <div>\n        <span class=\"tool-name\">{{ toolCall.name }}</span>\n      </div>\n      <div class=\"tool-status\">\n        {{ call_status }}\n      </div>\n    </div>\n    <div class=\"extra-info\">\n      <button\n        ref=\"show-extra-info\"\n        :class=\"{ active: showExtraInfo, 'extra-info-button': true }\"\n        @click=\"showExtraInfo = !showExtraInfo\"\n      >\n        <svg\n          t=\"1731677922196\"\n          class=\"icon\"\n          viewBox=\"0 0 1024 1024\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          p-id=\"5948\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <path\n            d=\"M778.965749 128.759549l-383.064442 383.063419 388.097062 388.096039-0.070608 0.033769c12.709463 13.137205 20.529569 31.024597 20.529569 50.731428 0 40.376593-32.736589 73.112158-73.115228 73.112158-19.705807 0-37.591153-7.819083-50.730405-20.528546l-0.034792 0.035816L241.890654 564.622498l0.035816-0.035816c-13.779841-13.281491-22.3838-31.915897-22.3838-52.585659 0-0.071631 0-0.106424 0-0.178055 0-0.072655 0-0.10847 0-0.144286 0-20.669762 8.603959-39.341007 22.3838-52.622498l-0.035816-0.034792L680.573835 20.337187l0.180102 0.179079c13.139252-12.5662 30.950919-20.313651 50.587142-20.313651 40.378639 0 73.115228 32.736589 73.115228 73.114205C804.455283 95.485725 794.567076 115.334795 778.965749 128.759549z\"\n            p-id=\"5949\"\n          ></path>\n        </svg>\n      </button>\n    </div>\n    <div :class=\"{ active: showExtraInfo, 'extra-info-bar': true }\">\n      <div class=\"extra-detail\">\n        <div class=\"detail-params\">\n          <div class=\"detail-title\">参数</div>\n          <div class=\"detail-content\">\n            {{ toolCall.params }}\n          </div>\n        </div>\n\n        <div class=\"detail-result\">\n          <div class=\"detail-title\">返回值</div>\n          <div class=\"detail-content\">\n            {{ toolCall.result }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    toolCall: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      showExtraInfo: false,\n    };\n  },\n  computed: {\n    toolCallSuccess() {\n      return (\n        this.toolCall.action === \"finished\" &&\n        this.toolCall?.result?.error === null\n      );\n    },\n    toolCallFail() {\n      return (\n        this.toolCall.action === \"finished\" &&\n        !this.toolCall?.result?.error !== null\n      );\n    },\n    call_status() {\n      if (this.toolCall.action == \"started\") return \"开始运行\";\n      if (this.toolCall.action == \"pending\") return \"函数构建中\";\n      if (this.toolCall.action == \"running\") return \"函数运行中\";\n      if (this.toolCallSuccess) return \"函数运行成功\";\n      if (this.toolCallFail) return \"函数运行失败\";\n      else return \"未知状态\";\n    },\n  },\n  mounted() {},\n};\n</script>\n<style scoped>\n.extra-detail {\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 20rem;\n  max-height: 25rem;\n  flex-grow: 1;\n  padding-bottom: 1rem;\n}\n\n.detail-params,\n.detail-result {\n  margin-top: 1rem;\n  width: calc(100% - 2rem);\n  background-color: #fff;\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n}\n\n.detail-title {\n  padding-top: 0.5rem;\n  flex-basis: 2rem;\n  width: 90%;\n  border-bottom: 1px solid #5c5c5c;\n}\n\n.detail-content {\n  user-select: text;\n  margin: 0.5rem 0rem;\n  font-size: 0.8rem;\n  color: #5c5c5c;\n  width: 90%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: 8rem;\n  flex-grow: 1;\n}\n\n.extra-info-bar {\n  position: absolute;\n  overflow: hidden;\n  z-index: 2;\n  max-height: 0px;\n  transition: 0.3s;\n  top: 4rem;\n  position: absolute;\n  background-color: #f5f5f5;\n  border-radius: 0.5rem;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n}\n\n.extra-info-bar.active {\n  max-height: 50rem;\n}\n\n.tool-info {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n}\n\n.extra-info {\n  flex-basis: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nbutton.extra-info-button {\n  transition: transform 0.3s ease;\n  transform: rotate(90deg);\n}\n\nbutton.extra-info-button.active {\n  transform: rotate(-90deg);\n}\n\nbutton.extra-info-button:hover svg {\n  transition: transform 0.3s ease;\n  transform: scale(1.2);\n}\n\n.tool-name {\n  font-weight: bolder;\n}\n\n.tool-call-bar {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  width: 15rem;\n  height: 4rem;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  display: flex;\n  position: relative;\n}\n\n.status-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-basis: 4rem;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #f5f5f5;\n}\n\n.call-pend-icon {\n  transform: rotateZ(45deg);\n  perspective: 1000px;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  color: #fff;\n}\n\n.call-pend-icon:before,\n.call-pend-icon:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: inherit;\n  height: inherit;\n  border-radius: 50%;\n  transform: rotateX(70deg);\n  animation: 1s spin linear infinite;\n}\n\n.call-pend-icon:after {\n  color: #ff3d00;\n  transform: rotateY(70deg);\n  animation-delay: 0.4s;\n}\n\n@keyframes rotate {\n  0% {\n    transform: translate(-50%, -50%) rotateZ(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotateZ(360deg);\n  }\n}\n\n@keyframes rotateccw {\n  0% {\n    transform: translate(-50%, -50%) rotate(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) rotate(-360deg);\n  }\n}\n\n@keyframes spin {\n  0%,\n  100% {\n    box-shadow: 0.2em 0px 0 0px currentcolor;\n  }\n\n  12% {\n    box-shadow: 0.2em 0.2em 0 0 currentcolor;\n  }\n\n  25% {\n    box-shadow: 0 0.2em 0 0px currentcolor;\n  }\n\n  37% {\n    box-shadow: -0.2em 0.2em 0 0 currentcolor;\n  }\n\n  50% {\n    box-shadow: -0.2em 0 0 0 currentcolor;\n  }\n\n  62% {\n    box-shadow: -0.2em -0.2em 0 0 currentcolor;\n  }\n\n  75% {\n    box-shadow: 0px -0.2em 0 0 currentcolor;\n  }\n\n  87% {\n    box-shadow: 0.2em -0.2em 0 0 currentcolor;\n  }\n}\n\n.checkmark-container {\n  width: 2.25rem;\n  height: 2rem;\n}\n\n.checkmark {\n  width: 100%;\n  height: 100%;\n}\n\n.checkmark polyline {\n  fill: none;\n  stroke: green;\n  /* 设置颜色为绿色 */\n  stroke-width: 10;\n  /* 设置线条的粗细 */\n  stroke-dasharray: 60;\n  /* 总长度 */\n  stroke-dashoffset: 60;\n  /* 起始偏移量 */\n  animation: draw 1s forwards;\n  /* 动画定义 */\n}\n\n@keyframes draw {\n  to {\n    stroke-dashoffset: 0;\n    /* 结束时偏移量为0，显示完整的对勾 */\n  }\n}\n</style>\n","<template>\n  <div class=\"reason-block\">\n    <div class=\"head-bar\">\n      <div class=\"reason-info\">{{ getReasonInfo }}</div>\n      <button\n        :class=\"{ active: show, 'extra-info-button': true }\"\n        @click=\"toggleShow\"\n      >\n        <i class=\"iconfont icon-return\" />\n      </button>\n    </div>\n    <div\n      ref=\"reasonContent\"\n      class=\"reason-content\"\n      :style=\"{ 'max-height': maxHeight }\"\n    >\n      {{ content }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    content: {\n      required: true,\n      type: String,\n      default: \"\",\n    },\n    startTime: {\n      required: true,\n      type: Number,\n    },\n    endTime: {\n      required: false,\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      show: true,\n      maxHeight: \"auto\", // 初始值\n    };\n  },\n  computed: {\n    getReasonInfo() {\n      if (this.endTime) {\n        const timeDiff = this.endTime - this.startTime;\n        return `已深度思考（耗时 ${(timeDiff / 1000).toFixed(2)} 秒）`;\n      } else {\n        return `正在深度思考......`;\n      }\n    },\n  },\n  mounted() {\n    this.updateMaxHeight(); //初始展开\n  },\n  updated() {\n    this.updateMaxHeight(); //防止内容更新,导致高度计算错误\n  },\n  methods: {\n    toggleShow() {\n      this.show = !this.show;\n      this.updateMaxHeight();\n    },\n    updateMaxHeight() {\n      if (this.show) {\n        // 展开时，设置为内容实际高度 + 一些额外空间 (如 padding)\n        this.maxHeight = this.$refs.reasonContent.scrollHeight + 20 + \"px\";\n      } else {\n        // 收起时，设置为 0\n        this.maxHeight = \"0px\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reason-block {\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n.reason-info {\n  margin: 0.5rem 0;\n  font-size: 0.8rem;\n  min-width: 8rem;\n  flex-basis: 10rem;\n  text-wrap: nowrap;\n}\n\n.head-bar {\n  flex-basis: 1rem;\n  margin: 0.5rem 0;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: fit-content;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  padding: 0px 0.5rem;\n}\n\n.head-bar:hover {\n  background-color: #ededed;\n}\n\n.head-bar button {\n  flex-basis: 1rem;\n  margin-left: 0.5rem;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n  /* 使用 ease-in-out */\n  display: flex;\n  align-items: center;\n  gap: 2px;\n}\n\n.head-bar button i {\n  font-size: 0.8rem;\n}\n\n.head-bar button.active {\n  transform: rotate(-90deg);\n}\n\n.reason-content {\n  max-width: 100%;\n  /* max-height 在 JavaScript 中动态控制 */\n  overflow: hidden;\n  /* 隐藏超出部分 */\n  user-select: text;\n  font-size: 0.8rem;\n  color: #6f6f6f;\n  white-space: pre-line;\n  border-left: 2px solid #ccc;\n  transition: max-height 0.3s ease-in-out;\n  /* 对 max-height 应用过渡 */\n  padding-left: 1rem;\n}\n</style>\n","<template>\n  <div id=\"message-menu\">\n    <template v-if=\"type === 'friend'\">\n      <div @click.stop=\"enterChat\">\n        <i class=\"iconfont chat\"></i>\n        <span>进入对话</span>\n      </div>\n      <div @click.stop=\"togglePriority\">\n        <i class=\"iconfont star\"></i>\n        <span>{{ message.priority === 0 ? \"取消置顶\" : \"置顶\" }}</span>\n      </div>\n      <div @click.stop=\"shareBot\">\n        <i class=\"iconfont icon-share\"></i>\n        <span>分享</span>\n      </div>\n      <div @click.stop=\"deleteBot\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除</span>\n      </div>\n    </template>\n    <template v-else>\n      <div v-if=\"seletedText\" @click.stop=\"copySeletedText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制选中</span>\n      </div>\n      <div @click.stop=\"copyText\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制消息</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"copySeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>复制图片</span>\n      </div>\n      <div v-if=\"seletedImage\" @click.stop=\"saveSeletedImage\">\n        <i class=\"iconfont fuzhi\"></i>\n        <span>保存图片</span>\n      </div>\n      <div @click.stop=\"retryMessage\">\n        <i class=\"iconfont reset\"></i>\n        <span>重试消息</span>\n      </div>\n      <div @click.stop=\"replyMessage\">\n        <i class=\"iconfont yinyong\"></i>\n        <span>引用消息</span>\n      </div>\n      <div @click.stop=\"deleteMessage\">\n        <i class=\"iconfont shanchu\"></i>\n        <span>删除消息</span>\n      </div>\n    </template>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"MessageMenu\", // 建议添加组件 name，方便调试\n  props: {\n    type: {\n      type: String,\n      default: \"message\",\n    },\n    message: {\n      type: Object,\n      default: () => ({}),\n    },\n    seletedText: {\n      type: String,\n      default: \"\",\n    },\n    seletedImage: {\n      type: String,\n      default: \"\",\n    },\n  },\n  emits: [\"close\", \"message-option\"], //显式声明emit的事件\n  methods: {\n    async copySeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.copyImageToClipboard(this.seletedImage);\n      } catch (error) {\n        console.error(\"复制选择图片失败：\", error);\n      }\n    },\n    async saveSeletedImage() {\n      this.$emit(\"close\");\n      try {\n        await this.downloadImage(this.seletedImage);\n      } catch (error) {\n        console.error(\"保存选择图片失败：\", error);\n      }\n    },\n\n    copyText() {\n      let text = \"\";\n      this.message.content.forEach((element) => {\n        if (element.type === \"text\") {\n          text += element.data.text;\n        } else if (element.type === \"image\") {\n          text += `\\n![图片](${element.data.file})`;\n        }\n      });\n      this.copyTextToClipboard(text);\n      this.$emit(\"close\");\n    },\n\n    copySeletedText() {\n      this.copyTextToClipboard(this.seletedText);\n      this.$emit(\"close\");\n    },\n\n    retryMessage() {\n      this.$emit(\"message-option\", \"retry\");\n      this.$emit(\"close\");\n    },\n\n    replyMessage() {\n      this.$emit(\"message-option\", \"reply\");\n      this.$emit(\"close\");\n    },\n\n    deleteMessage() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n    enterChat() {\n      this.$emit(\"message-option\", \"enter\");\n      this.$emit(\"close\");\n    },\n    togglePriority() {\n      this.$emit(\"message-option\", \"priority\");\n      this.$emit(\"close\");\n    },\n    shareBot() {\n      this.$emit(\"message-option\", \"share\");\n      this.$emit(\"close\");\n    },\n    deleteBot() {\n      this.$emit(\"message-option\", \"delete\");\n      this.$emit(\"close\");\n    },\n\n    // 封装复制文本到剪贴板的函数\n    async copyTextToClipboard(text) {\n      let textarea;\n      try {\n        textarea = document.createElement(\"textarea\");\n        textarea.style.position = \"absolute\";\n        textarea.style.left = \"-9999px\";\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        textarea.setSelectionRange(0, 99999); // For mobile devices\n        await document.execCommand(\"copy\");\n        this.$message({ message: \"复制成功\", type: \"success\" });\n      } catch (err) {\n        console.error(\"复制失败:\", err);\n        this.$message({ message: \"复制失败\", type: \"error\" });\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    },\n    // 封装复制图片到剪贴板的函数\n    async copyImageToClipboard(imgSrc) {\n      try {\n        const response = await fetch(imgSrc);\n        if (!response.ok) {\n          throw new Error(\"网络错误，无法获取图片\");\n        }\n        const blob = await response.blob();\n        const img = new Image();\n        const url = URL.createObjectURL(blob);\n\n        img.onload = async () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          // 使用 Promise 包装 toBlob\n          const pngBlob = await new Promise((resolve) => {\n            canvas.toBlob(resolve, \"image/png\");\n          });\n\n          if (pngBlob) {\n            const item = new ClipboardItem({ \"image/png\": pngBlob });\n            await navigator.clipboard.write([item]); // 使用 await\n            this.$message({\n              message: \"图片已复制到剪贴板\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"转换为 PNG 失败\",\n              type: \"error\",\n            });\n          }\n          URL.revokeObjectURL(url);\n        };\n        img.onerror = () => {\n          this.$message({ message: \"加载图片失败\", type: \"error\" });\n          URL.revokeObjectURL(url); // 确保在错误时也释放 URL\n        };\n        img.src = url;\n      } catch (err) {\n        console.error(\"复制图片失败:\", err);\n        this.$message({ message: \"复制图片失败\", type: \"error\" });\n      }\n    },\n    // 封装下载图片的函数\n    async downloadImage(imgSrc) {\n      try {\n        const link = document.createElement(\"a\");\n        link.href = imgSrc;\n        link.download = \"image.png\";\n        link.click();\n      } catch (err) {\n        console.error(\"保存图片失败：\", err);\n        this.$message({ message: \"保存图片失败\", type: \"error\" });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n#message-menu\n    position: fixed\n    display: flex\n    flex-direction: column\n    justify-content: center\n    background-color: hsla(0, 0%, 100%, .78)\n    backdrop-filter: blur(0.5rem)\n    border-radius: 0.5rem\n    padding: .5rem\n    z-index: 9999\n\n    @keyframes pop-up\n        0%\n            transform: scale(1)\n        50%\n            transform: scale(1.2)\n        100%\n            transform: scale(1)\n\n    & div\n        margin: 0.4rem 0\n        padding: .2rem .4rem\n        border-radius: .2rem\n        display: flex\n        justify-content: space-between\n        align-items: center\n        cursor: pointer\n\n    & div:hover\n        background-color: hsla(0, 0%, 90%, .88)\n\n    & div:hover > i\n        animation: pop-up 0.5s ease-in-out 1 forwards\n\n    & i\n        position: absolute\n        display: flex\n        justify-content: center\n        align-items: center\n        transform-origin: center\n\n\n    & span\n        font-size: 0.8rem\n        color: rgb(120, 124, 127)\n        margin-left: 1.8rem\n</style>\n","<template>\n  <div class=\"add-contactor\">\n    <div class=\"head\">\n      <div class=\"title\">添加机器人</div>\n      <div class=\"close-icon\" @click=\"close\">✕</div>\n    </div>\n    <div class=\"body\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\" />\n        <input\n          v-model=\"keyWord\"\n          type=\"text\"\n          placeholder=\"输入搜索关键词\"\n          @input=\"loadSerachPresets\"\n        />\n      </div>\n      <div class=\"info\">\n        <header class=\"presets-types\">\n          <nav\n            v-for=\"(type, index) in avaliablePresetTypes\"\n            :key=\"index\"\n            :class=\"activeTypeIndex === index ? 'active' : ''\"\n            @click=\"changeShownType(index)\"\n          >\n            {{ type }}\n          </nav>\n        </header>\n        <div :style=\"{ left: buttonTranslate }\" class=\"slide-button\"></div>\n        <div\n          v-if=\"shownPrestsList.length > 0 || [0, 3].includes(activeTypeIndex)\"\n          class=\"presets-list\"\n        >\n          <div\n            v-for=\"(preset, index) in shownPrestsList\"\n            :key=\"index\"\n            class=\"presets-item\"\n          >\n            <div v-if=\"preset.avatar\" class=\"preset-avatar custom\">\n              <img :src=\"preset.avatar\" />\n            </div>\n            <div v-else-if=\"preset.model\" class=\"preset-avatar model\">\n              <img :src=\"Contactor.getAvatarByModel(preset.model)\" />\n            </div>\n            <div v-else class=\"preset-avatar\">\n              {{ preset.name.slice(0, 2) }}\n            </div>\n            <div class=\"preset-info\">\n              <div class=\"preset-name\">{{ preset.name }}</div>\n              <div :title=\"preset.opening\" class=\"preset-description\">\n                {{ preset.opening }}\n              </div>\n            </div>\n            <el-button @click=\"addBot(preset)\">添加</el-button>\n          </div>\n          <div v-show=\"showPresetsLoader\" ref=\"loader\" class=\"loading\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n        <div v-else class=\"empty-list\">\n          <el-empty :image-size=\"200\" />\n        </div>\n      </div>\n      <div class=\"options\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Contactor from \"../lib/contactor\";\nexport default {\n  emits: [\"addBot\", \"close\"],\n  data() {\n    const avaliablePresetTypes = [\"推荐\", \"最近\", \"本地\", \"系统\"];\n    return {\n      show: false,\n      presetsList: [],\n      recommendPresets: [],\n      recentPresets: [],\n      localPresets: [],\n      systemPresets: [],\n      searchPresets: [],\n      systemShownNum: 0,\n      recommendShownNum: 0,\n      keyWord: \"\",\n      activeTypeIndex: 0,\n      buttonTranslate: 0,\n      avaliablePresetTypes,\n      moreSystemPresets: true,\n      moreRecommendPresets: true,\n      observer: null, // Store the observer instance\n      Contactor,\n    };\n  },\n  computed: {\n    showPresetsLoader() {\n      return this.activeTypeIndex == 3\n        ? this.moreSystemPresets\n        : this.activeTypeIndex == 0\n          ? this.moreRecommendPresets\n          : false;\n    },\n    shownPrestsList() {\n      // 如果 keyWord 不为空，返回 searchPresets\n      if (this.keyWord) {\n        return this.searchPresets;\n      }\n      return this.activeTypeIndex === 2\n        ? this.localPresets\n        : this.activeTypeIndex === 1\n          ? this.recentPresets\n          : this.activeTypeIndex === 0\n            ? this.recommendPresets\n            : this.activeTypeIndex === 3\n              ? this.systemPresets\n              : null; // 或者返回默认值\n    },\n  },\n  async mounted() {\n    this.getAddHistory();\n\n    await this.loadSpecificType();\n\n    if (\"IntersectionObserver\" in window) {\n      const callback = (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.loadMoreData();\n          }\n        });\n      };\n\n      this.observer = new IntersectionObserver(callback);\n      const presetsLoader = this.$refs.loader;\n      if (presetsLoader) {\n        this.observer.observe(presetsLoader);\n      }\n    } else {\n      // Fallback for browsers that do not support IntersectionObserver\n      // Use scroll event to detect when the loader is visible.\n      window.addEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  beforeUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    } else {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n  },\n  methods: {\n    async addBot(preset) {\n      this.strogeAddHistory(preset);\n      this.$emit(\"addBot\", preset);\n      this.$message.success(\"添加成功\");\n    },\n    strogeAddHistory(preset) {\n      // 先检查现有列表中是否有重复项\n      const existingItem = this.recentPresets.find(\n        (item) => item.name === preset.name,\n      );\n      if (existingItem) {\n        // 如果有重复项，将其从数组中移除\n        this.recentPresets.splice(this.recentPresets.indexOf(existingItem), 1);\n      }\n      // 添加新项目到数组的最前面\n      this.recentPresets.unshift(preset);\n      // 检查数组长度并保持在小于或等于6\n      if (this.recentPresets.length > 6) {\n        this.recentPresets.pop(); // 移除最后一个元素，即最旧的元素\n      }\n      // 更新到 localStorage\n      localStorage.setItem(\"addHistory\", JSON.stringify(this.recentPresets));\n    },\n    getAddHistory() {\n      const data = localStorage.getItem(\"addHistory\");\n      if (data) {\n        this.recentPresets = JSON.parse(data);\n      }\n    },\n    async changeShownType(index) {\n      this.activeTypeIndex = index;\n      this.buttonTranslate = `${49.6 * index}px`;\n      await this.loadSpecificType();\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    async loadSpecificType() {\n      const type = this.avaliablePresetTypes[this.activeTypeIndex];\n      this.presetsList = await this.getPresetList(type);\n    },\n    async getPresetList(type) {\n      if (type === \"系统\") {\n        return await this.loadSystemPresets();\n      } else if (type === \"推荐\") {\n        return await this.loadRecommendedPresets();\n      } else if (type === \"最近\") {\n        return this.recentPresets;\n      } else if (type === \"本地\") {\n        return this.localPresets;\n      }\n    },\n    async loadRecommendedPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=recommended&start=${this.recommendShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.recommendPresets.push(res.data[i]);\n      }\n      this.recommendShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreRecommendPresets = false;\n      }\n      return this.recommendPresets;\n    },\n    async loadSystemPresets() {\n      const res = await fetch(\n        `/api/openai/presets?type=system&start=${this.systemShownNum}`,\n      ).then((res) => res.json());\n      for (let i = 0; i < res.data.length; i++) {\n        this.systemPresets.push(res.data[i]);\n      }\n      this.systemShownNum += res.data.length;\n      if (res.data.length < 9) {\n        this.moreSystemPresets = false;\n      }\n      return this.systemPresets;\n    },\n    async loadSerachPresets() {\n      const load = async () => {\n        const res = await fetch(\n          `/api/openai/presets?type=search&keyword=${this.keyWord}`,\n        ).then((res) => res.json());\n        this.searchPresets = res.data;\n      };\n      // 添加节流逻辑\n      if (this.searchTimer) {\n        clearTimeout(this.searchTimer);\n      }\n      this.searchTimer = setTimeout(() => {\n        load();\n      }, 500);\n    },\n    loadMoreData() {\n      if (this.showPresetsLoader && this.activeTypeIndex === 3) {\n        this.loadSystemPresets();\n      } else if (this.showPresetsLoader && this.activeTypeIndex === 0) {\n        this.loadRecommendedPresets();\n      }\n    },\n    handleScroll() {\n      const loader = this.$refs.loader;\n      if (!loader) return;\n\n      const rect = loader.getBoundingClientRect();\n      const isVisible =\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <=\n          (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <=\n          (window.innerWidth || document.documentElement.clientWidth);\n\n      if (isVisible) {\n        this.loadMoreData();\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.empty-list {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.presets-list {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1rem;\n  height: calc(100% - 3rem);\n  overflow-y: auto;\n}\n\n.preset-description {\n  white-space: nowrap;\n  /* 不换行 */\n  overflow: hidden;\n  /* 内容超出隐藏 */\n  text-overflow: ellipsis;\n  /* 使用省略号 */\n  font-size: 0.8rem;\n  color: #888;\n  width: 100%;\n}\n\n.presets-item button {\n  flex-basis: 60px;\n}\n\n.presets-loader {\n  width: 100%;\n  height: 1rem;\n}\n\n.presets-item {\n  position: relative;\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-basis: 3rem;\n  justify-content: space-around;\n}\n\n.preset-avatar {\n  min-width: 2.8rem;\n  max-width: 2.8rem;\n  height: 2.8rem;\n  background-color: #0099ff;\n  color: #fff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preset-avatar.model {\n  background-color: #ffffff;\n  border-radius: 50%;\n}\n\n.preset-avatar.custom img {\n  width: 100%;\n  border-radius: 50%;\n}\n\n.preset-avatar.model img {\n  width: 90%;\n}\n\n.preset-info {\n  position: relative;\n  margin-left: 0.5rem;\n  width: calc(100% - 7.5rem);\n}\n\n.slide-button {\n  width: 2rem;\n  border-top: #0099ff 2px solid;\n  margin-left: 0.3rem;\n  position: relative;\n  left: 0;\n  transition: left 0.3s;\n}\n\n.body {\n  margin-top: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  overflow: hidden;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.info {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: calc(100% - 2.5rem);\n}\n\n.presets-types {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  width: 100%;\n  margin-top: 1rem;\n  position: relative;\n}\n\n.presets-types nav {\n  cursor: pointer;\n  padding: 0.2rem 0.5rem;\n  margin-right: 0.5rem;\n  border-radius: 0.5rem;\n  font-size: 0.8rem;\n}\n\n.presets-types nav.active {\n  color: #0099ff;\n}\n\n.search {\n  position: relative;\n  box-sizing: border-box;\n  border-bottom: 1px solid #f1f1f1;\n  width: 100%;\n  height: 2em;\n  background-color: #f1f1f1;\n  border-radius: 0.5rem;\n  display: flex;\n  align-items: center;\n  padding-left: 0.5rem;\n}\n\n.search:has(input:focus) {\n  border: #0099ff 1px solid;\n}\n\n.search input {\n  position: absolute;\n  width: calc(100% - 2rem);\n  height: 1.5rem;\n  background-color: #f1f1f1;\n  border: none;\n  outline: none;\n  margin-left: 1rem;\n}\n\n.search i {\n  position: absolute;\n  font-size: 0.8rem;\n  color: #888;\n}\n\n.add-contactor {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400px;\n  height: 500px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n  overflow: hidden;\n}\n\n.head {\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #f1f1f1;\n  font-size: 0.8rem;\n}\n\n.close-icon {\n  width: 1.5rem;\n  font-size: 0.8rem;\n  height: 100%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.close-icon:hover {\n  color: aliceblue;\n  background-color: rgb(196, 43, 28);\n}\n\n@media (max-width: 600px) {\n  .add-contactor {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0;\n  }\n}\n</style>\n<style>\n.loading,\n.loading > div {\n  position: relative;\n  box-sizing: border-box;\n}\n\n.loading {\n  display: block;\n  font-size: 0;\n  color: #000;\n}\n\n.loading.la-dark {\n  color: #333;\n}\n\n.loading > div {\n  display: inline-block;\n  float: none;\n  background-color: currentColor;\n  border: 0 solid currentColor;\n}\n\n.loading {\n  margin-top: 1rem;\n  width: 16px;\n  min-height: 1rem;\n}\n\n.loading > div {\n  position: absolute;\n  top: 0;\n  left: -100%;\n  display: block;\n  width: 16px;\n  width: 100%;\n  height: 16px;\n  height: 100%;\n  border-radius: 100%;\n  opacity: 0.5;\n  animation:\n    ball-circus-position 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1),\n    ball-circus-size 2.5s infinite cubic-bezier(0.25, 0, 0.75, 1);\n}\n\n.loading > div:nth-child(1) {\n  animation-delay:\n    0s,\n    -0.5s;\n}\n\n.loading > div:nth-child(2) {\n  animation-delay:\n    -0.5s,\n    -1s;\n}\n\n.loading > div:nth-child(3) {\n  animation-delay:\n    -1s,\n    -1.5s;\n}\n\n.loading > div:nth-child(4) {\n  animation-delay:\n    -1.5s,\n    -2s;\n}\n\n.loading > div:nth-child(5) {\n  animation-delay:\n    -2s,\n    -2.5s;\n}\n\n@keyframes ball-circus-position {\n  50% {\n    left: 100%;\n  }\n}\n\n@keyframes ball-circus-size {\n  50% {\n    transform: scale(0.3, 0.3);\n  }\n}\n</style>\n","<script>\nimport { client, config } from \"@/lib/runtime.js\";\nimport AddContactor from \"@/components/AddContactor.vue\";\nimport ContextMenu from \"@/components/ContextMenu.vue\";\n\nexport default {\n  components: {\n    AddContactor,\n    ContextMenu,\n  },\n  data() {\n    return {\n      contactorList: [],\n      showAddOptions: false,\n      showAddWindow: false,\n      showMenu: false,\n      menuX: 0,\n      menuY: 0,\n      selectedFriend: null,\n    };\n  },\n  computed: {\n    sortedList() {\n      return [...this.contactorList].sort((a, b) =>\n        b.priority - a.priority == -1 ? 1 : b.lastUpdate - a.lastUpdate,\n      );\n    },\n  },\n  created() {\n    if (client.getContactors().length == 0) {\n      client.on(\n        \"loaded\",\n        () => {\n          this.contactorList = client.getContactors();\n          this.addReactiveListener();\n        },\n        false,\n      );\n    } else {\n      this.contactorList = client.getContactors();\n      this.addReactiveListener();\n    }\n  },\n  methods: {\n    genBotByPreset() {\n      this.showAddOptions = false;\n      this.showAddWindow = true;\n    },\n    showChat(id) {\n      // 如果当前路径 name 是 blank 或者 chat_view ，跳转到 /chat/:id\n      if (this.$route.name == \"blank\" || this.$route.name == \"chat_view\") {\n        this.$router.push({ name: \"chat_view\", params: { id: id } });\n      } else if (\n        this.$route.name == \"contactors\" ||\n        this.$route.name == \"profile_view\"\n      ) {\n        this.$router.push({ name: \"profile_view\", params: { id: id } });\n      } else {\n        // 否则，直接跳转到 /chat/:id\n        this.$router.replace({ name: \"chat_view\", params: { id: id } });\n      }\n    },\n    getId(item) {\n      // 获取当前页面的id\n      let currentId = this.$route.params.id;\n      // 获取当前页面的contactorId\n      let contactorId = item.id;\n      // 如果当前页面的id和contactorId相同，则返回active\n      if (currentId == contactorId) {\n        return \"active\";\n      } else {\n        return item.priority == 0 ? \"important\" : \"\";\n      }\n    },\n    async genBlankBot() {\n      const options = config.getLLMDefaultConfig();\n      console.log(options);\n      const blankConfig = {\n        id: this.genFakeId(),\n        title: options.default_model,\n        avatarPolicy: 0,\n        namePolicy: 2,\n        priority: 1,\n        options: options,\n      };\n\n      this.showAddOptions = false;\n      await client.addConcator(\"openai\", blankConfig);\n      this.addReactiveListener();\n    },\n    startResize(event) {\n      this.isResizing = true;\n      this.startX = event.clientX;\n      this.startWidth = this.$refs.friendlists.offsetWidth;\n      document.addEventListener(\"mousemove\", this.resize);\n      document.addEventListener(\"mouseup\", this.stopResize);\n    },\n    resize(event) {\n      if (this.isResizing) {\n        // debugger;\n        let newWidth = this.startWidth + (event.clientX - this.startX);\n        const remSize = document.documentElement.style.fontSize\n          ? parseFloat(document.documentElement.style.fontSize)\n          : 16;\n        const maxWidth = 20 * remSize;\n        const minWidth = 12 * remSize;\n        newWidth =\n          newWidth > maxWidth\n            ? maxWidth\n            : newWidth < minWidth\n              ? minWidth\n              : newWidth;\n        this.$refs.friendlists.style.minWidth = newWidth + \"px\";\n        this.$refs.friendlists.style.maxWidth = newWidth + \"px\";\n      }\n    },\n    stopResize() {\n      this.isResizing = false;\n      document.removeEventListener(\"mousemove\", this.resize);\n      document.removeEventListener(\"mouseup\", this.stopResize);\n    },\n    genFakeId() {\n      // 生成5位随机数\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      // 将随机数转换为字符串\n      const randomNumStr = `1${randomNum}`;\n      if (!this.id) {\n        // 将拼接后的字符串转换为数字并返回\n        return parseInt(randomNumStr);\n      } else {\n        // 生成5位随机数\n        const subRandomNum = Math.floor(1000 + Math.random() * 9000);\n        // 将随机数转换为字符串\n        const randomNumStr = `${this.id}${subRandomNum}`;\n        return parseInt(randomNumStr);\n      }\n    },\n    manageAddMenu() {\n      this.showAddOptions = !this.showAddOptions;\n    },\n    mergeOptions(options) {\n      const defaultOptions = config.getLLMDefaultConfig();\n      if (options.history)\n        defaultOptions.presetSettings.history = options.history;\n      if (options.tools) defaultOptions.toolCallSettings.tools = options.tools;\n      if (options.opening)\n        defaultOptions.presetSettings.opening = options.opening;\n\n      // 检查预设里的模型是否存在\n      if (options.model) {\n        const modelAvailable = config.isModelAvailable(\n          defaultOptions.provider,\n          options.model,\n        );\n        if (modelAvailable) {\n          defaultOptions.base.model = options.model;\n        } else {\n          this.$message({\n            message: \"预设模型不存在, 已使用默认模型\",\n            type: \"error\",\n          });\n        }\n      }\n      return defaultOptions;\n    },\n    async addPresetContactor(preset) {\n      const contactor = {\n        id: this.genFakeId(),\n        namePolicy: 1,\n        avatarPolicy: preset.avatar ? 1 : 0,\n        avatar: preset.avatar ? preset.avatar : undefined,\n        name: preset.name,\n        title: preset.title,\n        priority: 1,\n        options: this.mergeOptions(preset),\n      };\n      await client.addConcator(\"openai\", contactor);\n      this.addReactiveListener();\n    },\n    showFriendContextMenu(event, friend) {\n      this.selectedFriend = friend;\n      this.menuX = event.clientX;\n      this.menuY = event.clientY;\n      this.showMenu = true;\n\n      const closeMenu = () => {\n        this.showMenu = false;\n        document.removeEventListener(\"click\", closeMenu);\n      };\n      document.addEventListener(\"click\", closeMenu);\n    },\n\n    async handleFriendOption(option) {\n      switch (option) {\n        case \"enter\":\n          this.showChat(this.selectedFriend.id);\n          break;\n        case \"priority\":\n          this.selectedFriend.priority =\n            this.selectedFriend.priority === 0 ? 1 : 0;\n          client.setLocalStorage();\n          break;\n        case \"share\": {\n          const shareResult = await client.shareContactor(\n            this.selectedFriend.id,\n          );\n          if (shareResult) {\n            this.$message({\n              message: \"分享链接已复制\",\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: \"分享失败\",\n              type: \"error\",\n            });\n          }\n          break;\n        }\n        case \"delete\": {\n          let index;\n          index = this.contactorList.findIndex(\n            (c) => c.id === this.selectedFriend.id,\n          );\n          if (index !== -1) {\n            this.contactorList.splice(index, 1);\n            client.setLocalStorage();\n          }\n          break;\n        }\n      }\n      this.showMenu = false;\n    },\n\n    addReactiveListener() {\n      console.log(\"addReactiveListener\");\n      this.contactorList.map((contactor) => {\n        contactor.on(\"updateMessageSummary\", () => {\n          console.log(\"updateMessageSummary\");\n          contactor.lastMessageSummary = contactor.getLastMessageSummary();\n          this.$forceUpdate();\n        });\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <div id=\"friendlists\" ref=\"friendlists\">\n    <div id=\"friends\" class=\"upsidebar\">\n      <div class=\"search\">\n        <i class=\"iconfont sousuo listicon\"></i>\n        <input id=\"main-search\" type=\"text\" placeholder=\"搜索\" />\n      </div>\n      <div class=\"bu-add\">\n        <button id=\"addcont\" title=\"Add Bot\" @click=\"manageAddMenu\">\n          <i class=\"iconfont add\"></i>\n        </button>\n        <div v-show=\"showAddOptions\" id=\"add-options\">\n          <ul>\n            <li>\n              <button @click=\"genBlankBot\">新建空白Bot</button>\n            </li>\n            <li>\n              <button @click=\"genBotByPreset\">从预设新建Bot</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"people\">\n      <div\n        v-for=\"(item, index) of sortedList\"\n        :id=\"getId(item)\"\n        :key=\"index\"\n        class=\"lists\"\n        @click=\"showChat(item.id)\"\n        @contextmenu.prevent=\"showFriendContextMenu($event, item)\"\n      >\n        <div\n          class=\"avatar\"\n          :class=\"item.avatarPolicy == 1 ? 'custom' : 'model'\"\n        >\n          <img :src=\"item.avatar\" :alt=\"item.name\" />\n        </div>\n        <div class=\"info\">\n          <div class=\"name\">{{ item.name }}</div>\n          <div id=\"time\" class=\"msginfo\">{{ item.getLastTime() }}</div>\n          <div id=\"msgctt\" class=\"msginfo\">{{ item.lastMessageSummary }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"resizer\" @mousedown=\"startResize\"></div>\n    <AddContactor\n      v-if=\"showAddWindow\"\n      @close=\"showAddWindow = false\"\n      @add-bot=\"addPresetContactor\"\n    ></AddContactor>\n    <ContextMenu\n      v-if=\"showMenu\"\n      type=\"friend\"\n      :message=\"selectedFriend\"\n      :style=\"{\n        position: 'fixed',\n        left: menuX + 'px',\n        top: menuY + 'px',\n      }\"\n      @message-option=\"handleFriendOption\"\n      @close=\"showMenu = false\"\n    />\n  </div>\n</template>\n\n<style scoped>\n#add-options {\n  position: absolute;\n  top: 2.5rem;\n  background-color: white;\n  width: 8rem;\n  left: 0;\n  height: 3rem;\n  border: 0.0625rem solid rgba(161, 154, 154, 0.626);\n  border-radius: 0.3125rem;\n  z-index: 2;\n}\n#add-options li {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n#add-options ul {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.1);\n}\n#add-options button {\n  background-color: transparent;\n}\n#friendlists {\n  height: 100%;\n  display: flex;\n  min-width: 14rem;\n  max-width: 14rem;\n  flex-direction: column;\n  position: relative;\n}\n\n.resizer {\n  width: 5px;\n  cursor: ew-resize;\n  background-color: transparent; /* 可视化的样式，你可以根据需求进行调整 */\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 100%;\n}\n\n.upsidebar {\n  justify-content: space-between;\n  display: flex;\n  flex-direction: row;\n  background-color: rgb(255, 255, 255);\n  flex: 0 0 4rem;\n  align-items: flex-end;\n}\n\n#main-search {\n  width: calc(100% - 1.125rem);\n  margin-top: 0.1875rem;\n  padding-left: 0.3125rem;\n  height: 1.125rem;\n  background-color: transparent;\n  border: 0rem;\n}\n\n#main-search:focus {\n  outline: none;\n  border: 0rem;\n}\n\nbutton#searchButton {\n  width: 1rem;\n  border: 0rem;\n  border-radius: 0.3125rem;\n  margin-left: 0.5rem;\n  text-wrap: nowrap;\n}\n\n.search {\n  flex-grow: 1;\n  flex-basis: 1rem;\n  border-radius: 0.3125rem;\n  background-color: rgb(245 245, 245);\n  height: 2rem;\n  display: flex;\n  padding: 0rem 0.5rem;\n  align-items: center;\n  margin: 0 0 0.5rem 0.5rem;\n}\n\n.bu-add {\n  flex-basis: 2rem;\n  font-size: 1rem;\n  margin: 0.5rem;\n  height: 2rem;\n  position: relative;\n}\n\n.listicon {\n  padding-top: 0.0625rem;\n  width: 1rem;\n  height: 1rem;\n}\n\nbutton#addcont {\n  border-radius: 0.3125rem;\n  width: 100%;\n  height: 100%;\n  border: none;\n}\n\n.lists {\n  align-items: center;\n  min-width: 10rem;\n  display: flex;\n  padding: 0.25rem 0.5rem;\n  height: 3.75rem;\n  max-height: 3.75rem;\n  min-height: 3.75rem;\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important {\n  background-color: rgb(240, 240, 240);\n}\n\n.lists:hover {\n  background-color: rgb(240, 240, 240);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#important:hover {\n  background-color: rgb(231, 231, 231);\n  /* border: .0625rem solid pink; */\n}\n\n.lists#active {\n  background-color: rgb(0, 153, 255);\n}\n\n.lists > .avatar {\n  flex-basis: 2.65rem;\n  min-width: 2.65rem;\n  height: 2.65rem;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: white;\n}\n\n.avatar > img {\n  width: 100%;\n  height: 100%;\n}\n\n.avatar.model > img {\n  scale: 0.9;\n}\n\n.info {\n  height: 100%;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  flex: 0 0 calc(100% - 2.65rem);\n  max-width: calc(100% - 2.65rem);\n  flex-wrap: wrap;\n}\n\n.lists#active * {\n  color: #f0f8ff;\n}\n\n.lists .name {\n  flex-basis: 4rem;\n  flex-grow: 1;\n  margin-top: 0.75rem;\n  font-size: 0.875rem;\n  margin-left: 0.5rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.info #time {\n  font-size: 0.625rem;\n  flex-grow: 1;\n  text-align: right;\n}\n\n.info #msgctt {\n  flex-basis: 100%;\n  padding-right: 1rem;\n  font-size: 0.625rem;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.people {\n  overflow-y: auto;\n}\n\n@media screen and (max-width: 600px) {\n  #friendlists {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: none;\n  }\n\n  #add-options {\n    left: -6rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"presets-list\">\n    <div\n      v-for=\"(message, index) of presetMessages\"\n      :key=\"index\"\n      class=\"preset-message\"\n    >\n      <div class=\"preset-message-block\">\n        <div\n          class=\"message-avatar\"\n          @mouseover=\"hoveredIndex = index\"\n          @mouseleave=\"hoveredIndex = null\"\n        >\n          <div v-if=\"hoveredIndex != index\" class=\"avatar-emoji\">\n            {{ getMessageAvatar(message.role) }}\n          </div>\n          <div\n            v-else\n            title=\"删除消息\"\n            class=\"avatar-emoji hovered\"\n            @click=\"delPresetMessage\"\n          >\n            🗑️\n          </div>\n        </div>\n        <div\n          :ref=\"`message-${index}`\"\n          class=\"message-content\"\n          contenteditable=\"true\"\n          @blur=\"handleMessageUpdate(index)\"\n        >\n          {{ presetMessages[index].content }}\n        </div>\n      </div>\n    </div>\n    <div class=\"messages-buttons\">\n      <el-button title=\"添加系统消息\" plain @click=\"addPresetMessage('system')\"\n        >➕ ⚙️</el-button\n      >\n      <el-button\n        title=\"添加助手消息\"\n        plain\n        @click=\"addPresetMessage('assistant')\"\n        >➕ 🤖</el-button\n      >\n      <el-button title=\"添加用户消息\" plain @click=\"addPresetMessage('user')\"\n        >➕ 👤</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    presetsHistory: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  emits: [\"updatePresets\"],\n  data() {\n    const presetMessages = [...this.presetsHistory];\n    return {\n      presetMessages,\n      hoveredIndex: undefined,\n    };\n  },\n  watch: {\n    presetsHistory(newVal) {\n      this.presetMessages = [...newVal];\n    },\n  },\n  methods: {\n    delPresetMessage() {\n      this.presetMessages.splice(this.hoveredIndex, 1);\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    addPresetMessage(role) {\n      if (role == \"system\" && this.presetMessages.length > 0) {\n        this.$message.warning(\"系统消息必须是第一条消息\");\n        return;\n      }\n      this.presetMessages.push({\n        role,\n        content: \"\",\n      });\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n    getMessageAvatar(role) {\n      return role == \"assistant\" ? \"🤖\" : role == \"system\" ? \"⚙️\" : \"👤\";\n    },\n    handleMessageUpdate(index) {\n      this.presetMessages[index].content =\n        this.$refs[`message-${index}`][0].innerText;\n      this.$emit(\"updatePresets\", this.presetMessages);\n    },\n  },\n};\n</script>\n<style scoped>\n.presets-list {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.messages-buttons {\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin: 0.5rem;\n}\n\n.preset-message {\n  width: 100%;\n}\n\n.preset-message-block {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0.5rem;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.preset-message-block .message-avatar {\n  flex-basis: 2rem;\n  font-size: 2rem;\n  border: 1px solid #ccc;\n  border-radius: 10%;\n}\n\n.message-avatar .hovered {\n  cursor: pointer;\n  box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.493); /* 内阴影 */\n}\n\n.preset-message-block .message-content {\n  margin-left: 0.5rem;\n  font-size: 0.8rem;\n  border: 1px solid #5a9cf8;\n  border-radius: 0.5rem;\n  flex-grow: 1;\n  max-height: 10rem;\n  overflow-y: auto;\n  padding: 0.5rem;\n  min-height: 2rem;\n}\n\n.message-content input {\n  width: 100%;\n  border: none;\n  outline: none;\n}\n</style>\n"],"names":["EventEmitter","constructor","this","events","on","eventName","listener","refresh","off","push","emit","data","forEach","numberString","length","result","characters","i","charAt","Math","floor","random","randomString","RetryManager","options","maxRetries","baseDelay","maxDelay","retryCount","timer","getNextDelay","min","pow","reset","clearTimeout","canRetry","retry","retryFn","Error","delay","Promise","resolve","setTimeout","Socket","id","code","available","url","getURL","socket","requests","heartBeat","retryManager","connectionState","hasSuccessfulWebSocket","pendingRequests","Set","reconnectDelay","maxHeartbeatFails","heartbeatFails","URL","window","location","href","host","initEventListeners","handleConnect","handleDisconnect","error","handleConnectError","message","messageHandler","io","engine","transport","name","startHeartbeat","stopHeartbeat","attemptReconnect","switchToPolling","disconnect","path","transports","auth","token","async","connect","reconnectionAttempts","pingTimeout","pingInterval","clearInterval","setInterval","connected","res","fetch","timestamp","Date","now","updateDelay","serverRevTime","revTime","currentTime","delayTo","delayBack","close","e","JSON","parse","protocol","request_id","type","delete","sendMessage","has","add","stringify","reject","pathArray","split","filter","Boolean","request","timeOut","_","response","race","then","catch","streamCompletions","chunk","done","Adapter","client","Onebot","convertMessage","element","index","base64Data","file","replace","messages","node","rplMessage","midMessage","role","time","getTime","content","message_id","status","send","Openai","config","settings","getMessagesSummary","messageChain","query","getLLMDefaultConfig","base","stream","messageId","emitEvent","detail","handleUpdateChunk","updateHandlers","reasoningContent","reasoning_content","toolCall","tool_call","handler","handleCompletionChunk","complete","failed","includes","updateSettings","AVATAR_BASE_PATH","AVATAR_MAP","OpenAI","Cohere","Anthropic","Google","DeepSeek","avatarPolicy","namePolicy","Contactor","EventEmmiter","platform","title","avatar","priority","firstMessageIndex","active","lastUpdate","createTime","lastMessageSummary","getLastMessageSummary","kernel","enableOpenaiListener","toJSON","rawMessage","getMessageById","existingReasonIndex","findIndex","msgElm","text","startTime","endTime","lastMsgElm","isFirstElement","concat","previousCall","find","action","params","updateLastUpdate","_getFilePrompt","fileElms","join","_getValidOpenaiMessage","start","end","max_messages_num","mergedMessages","slice","msg","map","fileList","subArray","elm","formatedMsg","_content_type","tool_calls","function","arguments","tool_call_id","textElm","finalMessages","imageElm","fileElm","filePrompt","image_url","presetHistory","presetSettings","history","updateMessageSummary","webSend","revMessage","retryMessage","indexOf","webMessage","delMessage","acting","splice","makeSystemMessage","container","getLastTime","last","lastTime","timeDiff","toinit","getHours","toString","padStart","getMinutes","getDay","getFullYear","getMonth","getDate","getShownTime","weekdays","weekday","hours","minutes","getMessageText","updateFirstMessage","loadAvatar","model","getAvatarByModel","loadName","modelOwner","getModelOwner","Object","keys","localforage","TOOL_CALL_MODEDS","AUTO","ANY","NONE","GEMINI_SAFETY_BLOCK_SETTINGS","LOW","MEDIUM","HIGH","DEFAULT","GEMINI_SAFETY_SETTINGS_TYPE","HARASSMENT","HATE_SPEECH","SEXUALLY_EXPLICIT","DANGEROUS_CONTENT","CIVIC_INTEGRITY","CONFIG_KEY","localPresets","toolsConfig","llmTools","onebotConfig","llmModels","safetyConfig","baseConfig","LLMDefaultConfig","initSafetyConfig","initLLMDefaultConfig","_loadStrogeConfig","loadllmTools","loadonebotConfig","_setLocalStorage","key","localStorage","setItem","_getLocalStorage","storedValue","getItem","_saveStrogeConfig","configToSave","assign","getLLMProviders","llm_providers","provider","value","label","setBaseConfig","default_model","defaultProvider","updateLLMDefaultConfig","updateBaseConfig","patch","displayConfig","getToolCallModes","values","getBaseConfig","getDefaultModel","setLlmModels","models","getLlmModels","getDefaultLLMModel","getSafetySettingsParams","isModelAvailable","modelGroup","group","owner","setSafetyConfig","getSafetyConfig","chatParams","temperature","top_p","frequency_penalty","presence_penalty","toolCallSettings","mode","tools","opening","safetySettings","json","onebotOptionsData","onebotOptionsJson","inited","isConnected","contactList","qq","bot_qq","onPhone","preInit","localBaseInfo","loadOriginBaseInfo","loadBaseInfo","localStroge","getLocalStorage","loadLocalStorage","genDefaultConctor","genFakeId","Infinity","addConcator","allTools","tool","bot","reactive","setLocalStorage","rmContactor","list","item","loadOriginalContactors","shareId","contactor","getContactor","shareContactor","uploadResult","setOriginalContactor","previewImage","shareUrl","originalUrl","document","origin","clipboard","navigator","writeText","body","method","headers","clear","resetCache","serviceWorker","controller","messageChannel","MessageChannel","port1","onmessage","event","onerror","postMessage","port2","registrations","getRegistrations","registration","unregister","everLogin","setEverLogin","init","login","getContactors","onebotId","subRandomNum","parseInt","randomNum","info","addMsgListener","onebotContactors","onebotContactor","logout","admin_qq","uploadFile","fileOrImage","isImage","onProgress","startsWith","uploadImage","chunkSize","md5Hash","uploadChunk","totalChunks","formData","FormData","append","xhr","XMLHttpRequest","open","upload","onprogress","lengthComputable","chunkProgress","loaded","total","overallProgress","round","onload","statusText","uploadFileChunks","ceil","size","currentChunk","md5","filename","ok","finalizeUpload","worker","UploadWorker","hash","terminate","_convertBlobToBase64","blob","reader","FileReader","onloadend","readAsDataURL","PageStatus","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_5","_hoisted_6","processedImage","activePage","computed","isChatActive","isProfileActive","watch","$route","newRoute","getPageStatusFromRoute","immediate","mounted","adminId","methods","imageUrl","canvas","createElement","ctx","getContext","img","Image","src","width","height","drawImage","centerX","centerY","radius","beginPath","arc","PI","clip","clearRect","toBlob","createObjectURL","toChat","$router","toProfile","toConfig","adminAvatar","processImage","route","_openBlock","_createElementBlock","_createElementVNode","$data","alt","_hoisted_4","_normalizeClass","$options","onClick","args","target","props","fullScreen","default","emits","preview","created","URLSearchParams","search","get","waiting","$message","configFullScreen","$emit","$props","$event","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","components","MdPreview","Array","showBox","innerWidth","_Fragment","_cache","_renderList","_toDisplayString","_createBlock","_component_MdPreview","_createCommentVNode","_component_el_image","style","margin","fit","_hoisted_13","activeContactor","required","userInput","selectedOption","cursorPosition","showemoji","openaiModels","onebotPresets","uploaded","files","images","isPasting","extraOptions","loadSelected","textareaRef","$refs","textarea","addEventListener","adjustTextareaHeight","handleDragOver","preventDefault","backgroundColor","handleDragLeave","handleDrop","dataTransfer","handleDroppedFile","handlePaste","items","clipboardData","getAsFile","handleUploadImage","originalEvent","getData","execCommand","innerText","unmounted","removeEventListener","ctrlEmojiPanel","focus","File","handleFileUpload","fileInput","accept","format","handleChange","click","uploadDocumentFile","success","maxSizeByte","maxSizeMB","fileType","toLowerCase","insertImageToTextarea","mimeType","quality","imageName","imageElement","maxWidth","maxHeight","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","fragment","createContextualFragment","outerHTML","insertNode","newRange","newSelection","initExtraOptions","children","textwraper","getOpenaiModelArray","wrapText","rawText","preset","getOnebotPreset","reduce","acc","child","scrollHeight","getWraperName","getemoji","inputer","sel","unicode","startPos","endPos","textBeforeCursor","substring","textAfterCursor","innerHTML","setStart","firstChild","setEnd","updateCursorPosition","rangeCount","getRangeAt","startOffset","endOffset","presend","querySelectorAll","ImageSrcs","from","getSafeText","wrappedMessage","imgUrl","unshift","repliedMessageId","replyData","cleanScreen","activeBotTools","isValidInput","input","trim","handleKeyDown","ctrlKey","handleInput","ref","onEmojiClick","_withModifiers","_createVNode","_component_el_tree_select","modelValue","onChange","_ctx","contenteditable","placeholder","onKeydown","onInput","disabled","fileUrl","String","file_name","file_type","formated_file_size","iconClass","bits","formatFileSize","unitIndex","toFixed","toUpperCase","_hoisted_14","showExtraInfo","toolCallSuccess","toolCallFail","call_status","viewBox","xmlns","points","t","version","d","Number","show","getReasonInfo","updateMaxHeight","updated","toggleShow","reasonContent","_normalizeStyle","seletedText","seletedImage","copySeletedImage","copyImageToClipboard","saveSeletedImage","downloadImage","copyText","copyTextToClipboard","copySeletedText","replyMessage","deleteMessage","enterChat","togglePriority","shareBot","deleteBot","position","left","appendChild","select","setSelectionRange","err","removeChild","imgSrc","pngBlob","ClipboardItem","write","revokeObjectURL","link","download","_hoisted_15","_hoisted_16","AddContactor","presetsList","recommendPresets","recentPresets","systemPresets","searchPresets","systemShownNum","recommendShownNum","keyWord","activeTypeIndex","buttonTranslate","avaliablePresetTypes","moreSystemPresets","moreRecommendPresets","observer","showPresetsLoader","shownPrestsList","getAddHistory","loadSpecificType","callback","entries","entry","isIntersecting","loadMoreData","IntersectionObserver","presetsLoader","loader","observe","handleScroll","beforeUnmount","addBot","strogeAddHistory","existingItem","pop","changeShownType","getPresetList","loadSystemPresets","loadRecommendedPresets","loadSerachPresets","load","searchTimer","rect","getBoundingClientRect","top","bottom","innerHeight","documentElement","clientHeight","right","clientWidth","_component_el_button","_withCtx","_createTextVNode","_withDirectives","_hoisted_17","_hoisted_18","_component_el_empty","ContextMenu","contactorList","showAddOptions","showAddWindow","showMenu","menuX","menuY","selectedFriend","sortedList","sort","a","b","addReactiveListener","genBotByPreset","showChat","getId","genBlankBot","blankConfig","startResize","isResizing","startX","clientX","startWidth","friendlists","offsetWidth","resize","stopResize","newWidth","remSize","fontSize","parseFloat","minWidth","randomNumStr","manageAddMenu","mergeOptions","defaultOptions","addPresetContactor","showFriendContextMenu","friend","clientY","closeMenu","handleFriendOption","option","c","$forceUpdate","onContextmenu","onMousedown","_component_AddContactor","onClose","onAddBot","_component_ContextMenu","onMessageOption","presetsHistory","presetMessages","hoveredIndex","newVal","delPresetMessage","addPresetMessage","warning","getMessageAvatar","handleMessageUpdate","onMouseover","onMouseleave","ref_for","onBlur","plain"],"mappings":"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"}